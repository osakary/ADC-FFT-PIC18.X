

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Dec  4 17:57:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           	psect	mediumconst
    28  0079FE                     __pmediumconst:
    29                           	opt stack 0
    30  0079FE  00                 	db	0
    31  0079FF                     _Sinewave:
    32                           	opt stack 0
    33  0079FF  0000               	dw	0
    34  007A01  00C9               	dw	201
    35  007A03  0192               	dw	402
    36  007A05  025B               	dw	603
    37  007A07  0324               	dw	804
    38  007A09  03ED               	dw	1005
    39  007A0B  04B6               	dw	1206
    40  007A0D  057E               	dw	1406
    41  007A0F  0647               	dw	1607
    42  007A11  0710               	dw	1808
    43  007A13  07D9               	dw	2009
    44  007A15  08A1               	dw	2209
    45  007A17  096A               	dw	2410
    46  007A19  0A32               	dw	2610
    47  007A1B  0AFB               	dw	2811
    48  007A1D  0BC3               	dw	3011
    49  007A1F  0C8B               	dw	3211
    50  007A21  0D53               	dw	3411
    51  007A23  0E1B               	dw	3611
    52  007A25  0EE3               	dw	3811
    53  007A27  0FAB               	dw	4011
    54  007A29  1072               	dw	4210
    55  007A2B  1139               	dw	4409
    56  007A2D  1200               	dw	4608
    57  007A2F  12C7               	dw	4807
    58  007A31  138E               	dw	5006
    59  007A33  1455               	dw	5205
    60  007A35  151B               	dw	5403
    61  007A37  15E1               	dw	5601
    62  007A39  16A7               	dw	5799
    63  007A3B  176D               	dw	5997
    64  007A3D  1833               	dw	6195
    65  007A3F  18F8               	dw	6392
    66  007A41  19BD               	dw	6589
    67  007A43  1A82               	dw	6786
    68  007A45  1B46               	dw	6982
    69  007A47  1C0B               	dw	7179
    70  007A49  1CCF               	dw	7375
    71  007A4B  1D93               	dw	7571
    72  007A4D  1E56               	dw	7766
    73  007A4F  1F19               	dw	7961
    74  007A51  1FDC               	dw	8156
    75  007A53  209F               	dw	8351
    76  007A55  2161               	dw	8545
    77  007A57  2223               	dw	8739
    78  007A59  22E4               	dw	8932
    79  007A5B  23A6               	dw	9126
    80  007A5D  2467               	dw	9319
    81  007A5F  2527               	dw	9511
    82  007A61  25E7               	dw	9703
    83  007A63  26A7               	dw	9895
    84  007A65  2767               	dw	10087
    85  007A67  2826               	dw	10278
    86  007A69  28E5               	dw	10469
    87  007A6B  29A3               	dw	10659
    88  007A6D  2A61               	dw	10849
    89  007A6F  2B1E               	dw	11038
    90  007A71  2BDB               	dw	11227
    91  007A73  2C98               	dw	11416
    92  007A75  2D54               	dw	11604
    93  007A77  2E10               	dw	11792
    94  007A79  2ECC               	dw	11980
    95  007A7B  2F86               	dw	12166
    96  007A7D  3041               	dw	12353
    97  007A7F  30FB               	dw	12539
    98  007A81  31B4               	dw	12724
    99  007A83  326D               	dw	12909
   100  007A85  3326               	dw	13094
   101  007A87  33DE               	dw	13278
   102  007A89  3496               	dw	13462
   103  007A8B  354D               	dw	13645
   104  007A8D  3603               	dw	13827
   105  007A8F  36B9               	dw	14009
   106  007A91  376F               	dw	14191
   107  007A93  3824               	dw	14372
   108  007A95  38D8               	dw	14552
   109  007A97  398C               	dw	14732
   110  007A99  3A3F               	dw	14911
   111  007A9B  3AF2               	dw	15090
   112  007A9D  3BA4               	dw	15268
   113  007A9F  3C56               	dw	15446
   114  007AA1  3D07               	dw	15623
   115  007AA3  3DB7               	dw	15799
   116  007AA5  3E67               	dw	15975
   117  007AA7  3F16               	dw	16150
   118  007AA9  3FC5               	dw	16325
   119  007AAB  4073               	dw	16499
   120  007AAD  4120               	dw	16672
   121  007AAF  41CD               	dw	16845
   122  007AB1  4279               	dw	17017
   123  007AB3  4325               	dw	17189
   124  007AB5  43D0               	dw	17360
   125  007AB7  447A               	dw	17530
   126  007AB9  4523               	dw	17699
   127  007ABB  45CC               	dw	17868
   128  007ABD  4674               	dw	18036
   129  007ABF  471C               	dw	18204
   130  007AC1  47C3               	dw	18371
   131  007AC3  4869               	dw	18537
   132  007AC5  490E               	dw	18702
   133  007AC7  49B3               	dw	18867
   134  007AC9  4A57               	dw	19031
   135  007ACB  4AFA               	dw	19194
   136  007ACD  4B9D               	dw	19357
   137  007ACF  4C3F               	dw	19519
   138  007AD1  4CE0               	dw	19680
   139  007AD3  4D80               	dw	19840
   140  007AD5  4E20               	dw	20000
   141  007AD7  4EBF               	dw	20159
   142  007AD9  4F5D               	dw	20317
   143  007ADB  4FFA               	dw	20474
   144  007ADD  5097               	dw	20631
   145  007ADF  5133               	dw	20787
   146  007AE1  51CE               	dw	20942
   147  007AE3  5268               	dw	21096
   148  007AE5  5301               	dw	21249
   149  007AE7  539A               	dw	21402
   150  007AE9  5432               	dw	21554
   151  007AEB  54C9               	dw	21705
   152  007AED  555F               	dw	21855
   153  007AEF  55F4               	dw	22004
   154  007AF1  5689               	dw	22153
   155  007AF3  571D               	dw	22301
   156  007AF5  57B0               	dw	22448
   157  007AF7  5842               	dw	22594
   158  007AF9  58D3               	dw	22739
   159  007AFB  5963               	dw	22883
   160  007AFD  59F3               	dw	23027
   161  007AFF  5A81               	dw	23169
   162  007B01  5B0F               	dw	23311
   163  007B03  5B9C               	dw	23452
   164  007B05  5C28               	dw	23592
   165  007B07  5CB3               	dw	23731
   166  007B09  5D3D               	dw	23869
   167  007B0B  5DC6               	dw	24006
   168  007B0D  5E4F               	dw	24143
   169  007B0F  5ED6               	dw	24278
   170  007B11  5F5D               	dw	24413
   171  007B13  5FE2               	dw	24546
   172  007B15  6067               	dw	24679
   173  007B17  60EB               	dw	24811
   174  007B19  616E               	dw	24942
   175  007B1B  61F0               	dw	25072
   176  007B1D  6271               	dw	25201
   177  007B1F  62F1               	dw	25329
   178  007B21  6370               	dw	25456
   179  007B23  63EE               	dw	25582
   180  007B25  646B               	dw	25707
   181  007B27  64E7               	dw	25831
   182  007B29  6562               	dw	25954
   183  007B2B  65DD               	dw	26077
   184  007B2D  6656               	dw	26198
   185  007B2F  66CE               	dw	26318
   186  007B31  6745               	dw	26437
   187  007B33  67BC               	dw	26556
   188  007B35  6831               	dw	26673
   189  007B37  68A5               	dw	26789
   190  007B39  6919               	dw	26905
   191  007B3B  698B               	dw	27019
   192  007B3D  69FC               	dw	27132
   193  007B3F  6A6C               	dw	27244
   194  007B41  6ADB               	dw	27355
   195  007B43  6B4A               	dw	27466
   196  007B45  6BB7               	dw	27575
   197  007B47  6C23               	dw	27683
   198  007B49  6C8E               	dw	27790
   199  007B4B  6CF8               	dw	27896
   200  007B4D  6D61               	dw	28001
   201  007B4F  6DC9               	dw	28105
   202  007B51  6E30               	dw	28208
   203  007B53  6E95               	dw	28309
   204  007B55  6EFA               	dw	28410
   205  007B57  6F5E               	dw	28510
   206  007B59  6FC0               	dw	28608
   207  007B5B  7022               	dw	28706
   208  007B5D  7082               	dw	28802
   209  007B5F  70E1               	dw	28897
   210  007B61  7140               	dw	28992
   211  007B63  719D               	dw	29085
   212  007B65  71F9               	dw	29177
   213  007B67  7254               	dw	29268
   214  007B69  72AE               	dw	29358
   215  007B6B  7306               	dw	29446
   216  007B6D  735E               	dw	29534
   217  007B6F  73B5               	dw	29621
   218  007B71  740A               	dw	29706
   219  007B73  745E               	dw	29790
   220  007B75  74B1               	dw	29873
   221  007B77  7503               	dw	29955
   222  007B79  7554               	dw	30036
   223  007B7B  75A4               	dw	30116
   224  007B7D  75F3               	dw	30195
   225  007B7F  7640               	dw	30272
   226  007B81  768D               	dw	30349
   227  007B83  76D8               	dw	30424
   228  007B85  7722               	dw	30498
   229  007B87  776B               	dw	30571
   230  007B89  77B3               	dw	30643
   231  007B8B  77F9               	dw	30713
   232  007B8D  783F               	dw	30783
   233  007B8F  7883               	dw	30851
   234  007B91  78C6               	dw	30918
   235  007B93  7908               	dw	30984
   236  007B95  7949               	dw	31049
   237  007B97  7989               	dw	31113
   238  007B99  79C7               	dw	31175
   239  007B9B  7A04               	dw	31236
   240  007B9D  7A41               	dw	31297
   241  007B9F  7A7C               	dw	31356
   242  007BA1  7AB5               	dw	31413
   243  007BA3  7AEE               	dw	31470
   244  007BA5  7B25               	dw	31525
   245  007BA7  7B5C               	dw	31580
   246  007BA9  7B91               	dw	31633
   247  007BAB  7BC4               	dw	31684
   248  007BAD  7BF7               	dw	31735
   249  007BAF  7C29               	dw	31785
   250  007BB1  7C59               	dw	31833
   251  007BB3  7C88               	dw	31880
   252  007BB5  7CB6               	dw	31926
   253  007BB7  7CE2               	dw	31970
   254  007BB9  7D0E               	dw	32014
   255  007BBB  7D38               	dw	32056
   256  007BBD  7D61               	dw	32097
   257  007BBF  7D89               	dw	32137
   258  007BC1  7DB0               	dw	32176
   259  007BC3  7DD5               	dw	32213
   260  007BC5  7DF9               	dw	32249
   261  007BC7  7E1C               	dw	32284
   262  007BC9  7E3E               	dw	32318
   263  007BCB  7E5E               	dw	32350
   264  007BCD  7E7E               	dw	32382
   265  007BCF  7E9C               	dw	32412
   266  007BD1  7EB9               	dw	32441
   267  007BD3  7ED4               	dw	32468
   268  007BD5  7EEF               	dw	32495
   269  007BD7  7F08               	dw	32520
   270  007BD9  7F20               	dw	32544
   271  007BDB  7F37               	dw	32567
   272  007BDD  7F4C               	dw	32588
   273  007BDF  7F61               	dw	32609
   274  007BE1  7F74               	dw	32628
   275  007BE3  7F86               	dw	32646
   276  007BE5  7F96               	dw	32662
   277  007BE7  7FA6               	dw	32678
   278  007BE9  7FB4               	dw	32692
   279  007BEB  7FC1               	dw	32705
   280  007BED  7FCD               	dw	32717
   281  007BEF  7FD7               	dw	32727
   282  007BF1  7FE0               	dw	32736
   283  007BF3  7FE8               	dw	32744
   284  007BF5  7FEF               	dw	32751
   285  007BF7  7FF5               	dw	32757
   286  007BF9  7FF9               	dw	32761
   287  007BFB  7FFC               	dw	32764
   288  007BFD  7FFE               	dw	32766
   289  007BFF  7FFF               	dw	32767
   290  007C01  7FFE               	dw	32766
   291  007C03  7FFC               	dw	32764
   292  007C05  7FF9               	dw	32761
   293  007C07  7FF5               	dw	32757
   294  007C09  7FEF               	dw	32751
   295  007C0B  7FE8               	dw	32744
   296  007C0D  7FE0               	dw	32736
   297  007C0F  7FD7               	dw	32727
   298  007C11  7FCD               	dw	32717
   299  007C13  7FC1               	dw	32705
   300  007C15  7FB4               	dw	32692
   301  007C17  7FA6               	dw	32678
   302  007C19  7F96               	dw	32662
   303  007C1B  7F86               	dw	32646
   304  007C1D  7F74               	dw	32628
   305  007C1F  7F61               	dw	32609
   306  007C21  7F4C               	dw	32588
   307  007C23  7F37               	dw	32567
   308  007C25  7F20               	dw	32544
   309  007C27  7F08               	dw	32520
   310  007C29  7EEF               	dw	32495
   311  007C2B  7ED4               	dw	32468
   312  007C2D  7EB9               	dw	32441
   313  007C2F  7E9C               	dw	32412
   314  007C31  7E7E               	dw	32382
   315  007C33  7E5E               	dw	32350
   316  007C35  7E3E               	dw	32318
   317  007C37  7E1C               	dw	32284
   318  007C39  7DF9               	dw	32249
   319  007C3B  7DD5               	dw	32213
   320  007C3D  7DB0               	dw	32176
   321  007C3F  7D89               	dw	32137
   322  007C41  7D61               	dw	32097
   323  007C43  7D38               	dw	32056
   324  007C45  7D0E               	dw	32014
   325  007C47  7CE2               	dw	31970
   326  007C49  7CB6               	dw	31926
   327  007C4B  7C88               	dw	31880
   328  007C4D  7C59               	dw	31833
   329  007C4F  7C29               	dw	31785
   330  007C51  7BF7               	dw	31735
   331  007C53  7BC4               	dw	31684
   332  007C55  7B91               	dw	31633
   333  007C57  7B5C               	dw	31580
   334  007C59  7B25               	dw	31525
   335  007C5B  7AEE               	dw	31470
   336  007C5D  7AB5               	dw	31413
   337  007C5F  7A7C               	dw	31356
   338  007C61  7A41               	dw	31297
   339  007C63  7A04               	dw	31236
   340  007C65  79C7               	dw	31175
   341  007C67  7989               	dw	31113
   342  007C69  7949               	dw	31049
   343  007C6B  7908               	dw	30984
   344  007C6D  78C6               	dw	30918
   345  007C6F  7883               	dw	30851
   346  007C71  783F               	dw	30783
   347  007C73  77F9               	dw	30713
   348  007C75  77B3               	dw	30643
   349  007C77  776B               	dw	30571
   350  007C79  7722               	dw	30498
   351  007C7B  76D8               	dw	30424
   352  007C7D  768D               	dw	30349
   353  007C7F  7640               	dw	30272
   354  007C81  75F3               	dw	30195
   355  007C83  75A4               	dw	30116
   356  007C85  7554               	dw	30036
   357  007C87  7503               	dw	29955
   358  007C89  74B1               	dw	29873
   359  007C8B  745E               	dw	29790
   360  007C8D  740A               	dw	29706
   361  007C8F  73B5               	dw	29621
   362  007C91  735E               	dw	29534
   363  007C93  7306               	dw	29446
   364  007C95  72AE               	dw	29358
   365  007C97  7254               	dw	29268
   366  007C99  71F9               	dw	29177
   367  007C9B  719D               	dw	29085
   368  007C9D  7140               	dw	28992
   369  007C9F  70E1               	dw	28897
   370  007CA1  7082               	dw	28802
   371  007CA3  7022               	dw	28706
   372  007CA5  6FC0               	dw	28608
   373  007CA7  6F5E               	dw	28510
   374  007CA9  6EFA               	dw	28410
   375  007CAB  6E95               	dw	28309
   376  007CAD  6E30               	dw	28208
   377  007CAF  6DC9               	dw	28105
   378  007CB1  6D61               	dw	28001
   379  007CB3  6CF8               	dw	27896
   380  007CB5  6C8E               	dw	27790
   381  007CB7  6C23               	dw	27683
   382  007CB9  6BB7               	dw	27575
   383  007CBB  6B4A               	dw	27466
   384  007CBD  6ADB               	dw	27355
   385  007CBF  6A6C               	dw	27244
   386  007CC1  69FC               	dw	27132
   387  007CC3  698B               	dw	27019
   388  007CC5  6919               	dw	26905
   389  007CC7  68A5               	dw	26789
   390  007CC9  6831               	dw	26673
   391  007CCB  67BC               	dw	26556
   392  007CCD  6745               	dw	26437
   393  007CCF  66CE               	dw	26318
   394  007CD1  6656               	dw	26198
   395  007CD3  65DD               	dw	26077
   396  007CD5  6562               	dw	25954
   397  007CD7  64E7               	dw	25831
   398  007CD9  646B               	dw	25707
   399  007CDB  63EE               	dw	25582
   400  007CDD  6370               	dw	25456
   401  007CDF  62F1               	dw	25329
   402  007CE1  6271               	dw	25201
   403  007CE3  61F0               	dw	25072
   404  007CE5  616E               	dw	24942
   405  007CE7  60EB               	dw	24811
   406  007CE9  6067               	dw	24679
   407  007CEB  5FE2               	dw	24546
   408  007CED  5F5D               	dw	24413
   409  007CEF  5ED6               	dw	24278
   410  007CF1  5E4F               	dw	24143
   411  007CF3  5DC6               	dw	24006
   412  007CF5  5D3D               	dw	23869
   413  007CF7  5CB3               	dw	23731
   414  007CF9  5C28               	dw	23592
   415  007CFB  5B9C               	dw	23452
   416  007CFD  5B0F               	dw	23311
   417  007CFF  5A81               	dw	23169
   418  007D01  59F3               	dw	23027
   419  007D03  5963               	dw	22883
   420  007D05  58D3               	dw	22739
   421  007D07  5842               	dw	22594
   422  007D09  57B0               	dw	22448
   423  007D0B  571D               	dw	22301
   424  007D0D  5689               	dw	22153
   425  007D0F  55F4               	dw	22004
   426  007D11  555F               	dw	21855
   427  007D13  54C9               	dw	21705
   428  007D15  5432               	dw	21554
   429  007D17  539A               	dw	21402
   430  007D19  5301               	dw	21249
   431  007D1B  5268               	dw	21096
   432  007D1D  51CE               	dw	20942
   433  007D1F  5133               	dw	20787
   434  007D21  5097               	dw	20631
   435  007D23  4FFA               	dw	20474
   436  007D25  4F5D               	dw	20317
   437  007D27  4EBF               	dw	20159
   438  007D29  4E20               	dw	20000
   439  007D2B  4D80               	dw	19840
   440  007D2D  4CE0               	dw	19680
   441  007D2F  4C3F               	dw	19519
   442  007D31  4B9D               	dw	19357
   443  007D33  4AFA               	dw	19194
   444  007D35  4A57               	dw	19031
   445  007D37  49B3               	dw	18867
   446  007D39  490E               	dw	18702
   447  007D3B  4869               	dw	18537
   448  007D3D  47C3               	dw	18371
   449  007D3F  471C               	dw	18204
   450  007D41  4674               	dw	18036
   451  007D43  45CC               	dw	17868
   452  007D45  4523               	dw	17699
   453  007D47  447A               	dw	17530
   454  007D49  43D0               	dw	17360
   455  007D4B  4325               	dw	17189
   456  007D4D  4279               	dw	17017
   457  007D4F  41CD               	dw	16845
   458  007D51  4120               	dw	16672
   459  007D53  4073               	dw	16499
   460  007D55  3FC5               	dw	16325
   461  007D57  3F16               	dw	16150
   462  007D59  3E67               	dw	15975
   463  007D5B  3DB7               	dw	15799
   464  007D5D  3D07               	dw	15623
   465  007D5F  3C56               	dw	15446
   466  007D61  3BA4               	dw	15268
   467  007D63  3AF2               	dw	15090
   468  007D65  3A3F               	dw	14911
   469  007D67  398C               	dw	14732
   470  007D69  38D8               	dw	14552
   471  007D6B  3824               	dw	14372
   472  007D6D  376F               	dw	14191
   473  007D6F  36B9               	dw	14009
   474  007D71  3603               	dw	13827
   475  007D73  354D               	dw	13645
   476  007D75  3496               	dw	13462
   477  007D77  33DE               	dw	13278
   478  007D79  3326               	dw	13094
   479  007D7B  326D               	dw	12909
   480  007D7D  31B4               	dw	12724
   481  007D7F  30FB               	dw	12539
   482  007D81  3041               	dw	12353
   483  007D83  2F86               	dw	12166
   484  007D85  2ECC               	dw	11980
   485  007D87  2E10               	dw	11792
   486  007D89  2D54               	dw	11604
   487  007D8B  2C98               	dw	11416
   488  007D8D  2BDB               	dw	11227
   489  007D8F  2B1E               	dw	11038
   490  007D91  2A61               	dw	10849
   491  007D93  29A3               	dw	10659
   492  007D95  28E5               	dw	10469
   493  007D97  2826               	dw	10278
   494  007D99  2767               	dw	10087
   495  007D9B  26A7               	dw	9895
   496  007D9D  25E7               	dw	9703
   497  007D9F  2527               	dw	9511
   498  007DA1  2467               	dw	9319
   499  007DA3  23A6               	dw	9126
   500  007DA5  22E4               	dw	8932
   501  007DA7  2223               	dw	8739
   502  007DA9  2161               	dw	8545
   503  007DAB  209F               	dw	8351
   504  007DAD  1FDC               	dw	8156
   505  007DAF  1F19               	dw	7961
   506  007DB1  1E56               	dw	7766
   507  007DB3  1D93               	dw	7571
   508  007DB5  1CCF               	dw	7375
   509  007DB7  1C0B               	dw	7179
   510  007DB9  1B46               	dw	6982
   511  007DBB  1A82               	dw	6786
   512  007DBD  19BD               	dw	6589
   513  007DBF  18F8               	dw	6392
   514  007DC1  1833               	dw	6195
   515  007DC3  176D               	dw	5997
   516  007DC5  16A7               	dw	5799
   517  007DC7  15E1               	dw	5601
   518  007DC9  151B               	dw	5403
   519  007DCB  1455               	dw	5205
   520  007DCD  138E               	dw	5006
   521  007DCF  12C7               	dw	4807
   522  007DD1  1200               	dw	4608
   523  007DD3  1139               	dw	4409
   524  007DD5  1072               	dw	4210
   525  007DD7  0FAB               	dw	4011
   526  007DD9  0EE3               	dw	3811
   527  007DDB  0E1B               	dw	3611
   528  007DDD  0D53               	dw	3411
   529  007DDF  0C8B               	dw	3211
   530  007DE1  0BC3               	dw	3011
   531  007DE3  0AFB               	dw	2811
   532  007DE5  0A32               	dw	2610
   533  007DE7  096A               	dw	2410
   534  007DE9  08A1               	dw	2209
   535  007DEB  07D9               	dw	2009
   536  007DED  0710               	dw	1808
   537  007DEF  0647               	dw	1607
   538  007DF1  057E               	dw	1406
   539  007DF3  04B6               	dw	1206
   540  007DF5  03ED               	dw	1005
   541  007DF7  0324               	dw	804
   542  007DF9  025B               	dw	603
   543  007DFB  0192               	dw	402
   544  007DFD  00C9               	dw	201
   545  007DFF  0000               	dw	0
   546  007E01  FF37               	dw	65335
   547  007E03  FE6E               	dw	65134
   548  007E05  FDA5               	dw	64933
   549  007E07  FCDC               	dw	64732
   550  007E09  FC13               	dw	64531
   551  007E0B  FB4A               	dw	64330
   552  007E0D  FA82               	dw	64130
   553  007E0F  F9B9               	dw	63929
   554  007E11  F8F0               	dw	63728
   555  007E13  F827               	dw	63527
   556  007E15  F75F               	dw	63327
   557  007E17  F696               	dw	63126
   558  007E19  F5CE               	dw	62926
   559  007E1B  F505               	dw	62725
   560  007E1D  F43D               	dw	62525
   561  007E1F  F375               	dw	62325
   562  007E21  F2AD               	dw	62125
   563  007E23  F1E5               	dw	61925
   564  007E25  F11D               	dw	61725
   565  007E27  F055               	dw	61525
   566  007E29  EF8E               	dw	61326
   567  007E2B  EEC7               	dw	61127
   568  007E2D  EE00               	dw	60928
   569  007E2F  ED39               	dw	60729
   570  007E31  EC72               	dw	60530
   571  007E33  EBAB               	dw	60331
   572  007E35  EAE5               	dw	60133
   573  007E37  EA1F               	dw	59935
   574  007E39  E959               	dw	59737
   575  007E3B  E893               	dw	59539
   576  007E3D  E7CD               	dw	59341
   577  007E3F  E708               	dw	59144
   578  007E41  E643               	dw	58947
   579  007E43  E57E               	dw	58750
   580  007E45  E4BA               	dw	58554
   581  007E47  E3F5               	dw	58357
   582  007E49  E331               	dw	58161
   583  007E4B  E26D               	dw	57965
   584  007E4D  E1AA               	dw	57770
   585  007E4F  E0E7               	dw	57575
   586  007E51  E024               	dw	57380
   587  007E53  DF61               	dw	57185
   588  007E55  DE9F               	dw	56991
   589  007E57  DDDD               	dw	56797
   590  007E59  DD1C               	dw	56604
   591  007E5B  DC5A               	dw	56410
   592  007E5D  DB99               	dw	56217
   593  007E5F  DAD9               	dw	56025
   594  007E61  DA19               	dw	55833
   595  007E63  D959               	dw	55641
   596  007E65  D899               	dw	55449
   597  007E67  D7DA               	dw	55258
   598  007E69  D71B               	dw	55067
   599  007E6B  D65D               	dw	54877
   600  007E6D  D59F               	dw	54687
   601  007E6F  D4E2               	dw	54498
   602  007E71  D425               	dw	54309
   603  007E73  D368               	dw	54120
   604  007E75  D2AC               	dw	53932
   605  007E77  D1F0               	dw	53744
   606  007E79  D134               	dw	53556
   607  007E7B  D07A               	dw	53370
   608  007E7D  CFBF               	dw	53183
   609  007E7F  CF05               	dw	52997
   610  007E81  CE4C               	dw	52812
   611  007E83  CD93               	dw	52627
   612  007E85  CCDA               	dw	52442
   613  007E87  CC22               	dw	52258
   614  007E89  CB6A               	dw	52074
   615  007E8B  CAB3               	dw	51891
   616  007E8D  C9FD               	dw	51709
   617  007E8F  C947               	dw	51527
   618  007E91  C891               	dw	51345
   619  007E93  C7DC               	dw	51164
   620  007E95  C728               	dw	50984
   621  007E97  C674               	dw	50804
   622  007E99  C5C1               	dw	50625
   623  007E9B  C50E               	dw	50446
   624  007E9D  C45C               	dw	50268
   625  007E9F  C3AA               	dw	50090
   626  007EA1  C2F9               	dw	49913
   627  007EA3  C249               	dw	49737
   628  007EA5  C199               	dw	49561
   629  007EA7  C0EA               	dw	49386
   630  007EA9  C03B               	dw	49211
   631  007EAB  BF8D               	dw	49037
   632  007EAD  BEE0               	dw	48864
   633  007EAF  BE33               	dw	48691
   634  007EB1  BD87               	dw	48519
   635  007EB3  BCDB               	dw	48347
   636  007EB5  BC30               	dw	48176
   637  007EB7  BB86               	dw	48006
   638  007EB9  BADD               	dw	47837
   639  007EBB  BA34               	dw	47668
   640  007EBD  B98C               	dw	47500
   641  007EBF  B8E4               	dw	47332
   642  007EC1  B83D               	dw	47165
   643  007EC3  B797               	dw	46999
   644  007EC5  B6F2               	dw	46834
   645  007EC7  B64D               	dw	46669
   646  007EC9  B5A9               	dw	46505
   647  007ECB  B506               	dw	46342
   648  007ECD  B463               	dw	46179
   649  007ECF  B3C1               	dw	46017
   650  007ED1  B320               	dw	45856
   651  007ED3  B280               	dw	45696
   652  007ED5  B1E0               	dw	45536
   653  007ED7  B141               	dw	45377
   654  007ED9  B0A3               	dw	45219
   655  007EDB  B006               	dw	45062
   656  007EDD  AF69               	dw	44905
   657  007EDF  AECD               	dw	44749
   658  007EE1  AE32               	dw	44594
   659  007EE3  AD98               	dw	44440
   660  007EE5  ACFF               	dw	44287
   661  007EE7  AC66               	dw	44134
   662  007EE9  ABCE               	dw	43982
   663  007EEB  AB37               	dw	43831
   664  007EED  AAA1               	dw	43681
   665  007EEF  AA0C               	dw	43532
   666  007EF1  A977               	dw	43383
   667  007EF3  A8E3               	dw	43235
   668  007EF5  A850               	dw	43088
   669  007EF7  A7BE               	dw	42942
   670  007EF9  A72D               	dw	42797
   671  007EFB  A69D               	dw	42653
   672  007EFD  A60D               	dw	42509
   673  007EFF  A57F               	dw	42367
   674  007F01  A4F1               	dw	42225
   675  007F03  A464               	dw	42084
   676  007F05  A3D8               	dw	41944
   677  007F07  A34D               	dw	41805
   678  007F09  A2C3               	dw	41667
   679  007F0B  A23A               	dw	41530
   680  007F0D  A1B1               	dw	41393
   681  007F0F  A12A               	dw	41258
   682  007F11  A0A3               	dw	41123
   683  007F13  A01E               	dw	40990
   684  007F15  9F99               	dw	40857
   685  007F17  9F15               	dw	40725
   686  007F19  9E92               	dw	40594
   687  007F1B  9E10               	dw	40464
   688  007F1D  9D8F               	dw	40335
   689  007F1F  9D0F               	dw	40207
   690  007F21  9C90               	dw	40080
   691  007F23  9C12               	dw	39954
   692  007F25  9B95               	dw	39829
   693  007F27  9B19               	dw	39705
   694  007F29  9A9E               	dw	39582
   695  007F2B  9A23               	dw	39459
   696  007F2D  99AA               	dw	39338
   697  007F2F  9932               	dw	39218
   698  007F31  98BB               	dw	39099
   699  007F33  9844               	dw	38980
   700  007F35  97CF               	dw	38863
   701  007F37  975B               	dw	38747
   702  007F39  96E7               	dw	38631
   703  007F3B  9675               	dw	38517
   704  007F3D  9604               	dw	38404
   705  007F3F  9594               	dw	38292
   706  007F41  9525               	dw	38181
   707  007F43  94B6               	dw	38070
   708  007F45  9449               	dw	37961
   709  007F47  93DD               	dw	37853
   710  007F49  9372               	dw	37746
   711  007F4B  9308               	dw	37640
   712  007F4D  929F               	dw	37535
   713  007F4F  9237               	dw	37431
   714  007F51  91D0               	dw	37328
   715  007F53  916B               	dw	37227
   716  007F55  9106               	dw	37126
   717  007F57  90A2               	dw	37026
   718  007F59  9040               	dw	36928
   719  007F5B  8FDE               	dw	36830
   720  007F5D  8F7E               	dw	36734
   721  007F5F  8F1F               	dw	36639
   722  007F61  8EC0               	dw	36544
   723  007F63  8E63               	dw	36451
   724  007F65  8E07               	dw	36359
   725  007F67  8DAC               	dw	36268
   726  007F69  8D52               	dw	36178
   727  007F6B  8CFA               	dw	36090
   728  007F6D  8CA2               	dw	36002
   729  007F6F  8C4B               	dw	35915
   730  007F71  8BF6               	dw	35830
   731  007F73  8BA2               	dw	35746
   732  007F75  8B4F               	dw	35663
   733  007F77  8AFD               	dw	35581
   734  007F79  8AAC               	dw	35500
   735  007F7B  8A5C               	dw	35420
   736  007F7D  8A0D               	dw	35341
   737  007F7F  89C0               	dw	35264
   738  007F81  8973               	dw	35187
   739  007F83  8928               	dw	35112
   740  007F85  88DE               	dw	35038
   741  007F87  8895               	dw	34965
   742  007F89  884D               	dw	34893
   743  007F8B  8807               	dw	34823
   744  007F8D  87C1               	dw	34753
   745  007F8F  877D               	dw	34685
   746  007F91  873A               	dw	34618
   747  007F93  86F8               	dw	34552
   748  007F95  86B7               	dw	34487
   749  007F97  8677               	dw	34423
   750  007F99  8639               	dw	34361
   751  007F9B  85FC               	dw	34300
   752  007F9D  85BF               	dw	34239
   753  007F9F  8584               	dw	34180
   754  007FA1  854B               	dw	34123
   755  007FA3  8512               	dw	34066
   756  007FA5  84DB               	dw	34011
   757  007FA7  84A4               	dw	33956
   758  007FA9  846F               	dw	33903
   759  007FAB  843C               	dw	33852
   760  007FAD  8409               	dw	33801
   761  007FAF  83D7               	dw	33751
   762  007FB1  83A7               	dw	33703
   763  007FB3  8378               	dw	33656
   764  007FB5  834A               	dw	33610
   765  007FB7  831E               	dw	33566
   766  007FB9  82F2               	dw	33522
   767  007FBB  82C8               	dw	33480
   768  007FBD  829F               	dw	33439
   769  007FBF  8277               	dw	33399
   770  007FC1  8250               	dw	33360
   771  007FC3  822B               	dw	33323
   772  007FC5  8207               	dw	33287
   773  007FC7  81E4               	dw	33252
   774  007FC9  81C2               	dw	33218
   775  007FCB  81A2               	dw	33186
   776  007FCD  8182               	dw	33154
   777  007FCF  8164               	dw	33124
   778  007FD1  8147               	dw	33095
   779  007FD3  812C               	dw	33068
   780  007FD5  8111               	dw	33041
   781  007FD7  80F8               	dw	33016
   782  007FD9  80E0               	dw	32992
   783  007FDB  80C9               	dw	32969
   784  007FDD  80B4               	dw	32948
   785  007FDF  809F               	dw	32927
   786  007FE1  808C               	dw	32908
   787  007FE3  807A               	dw	32890
   788  007FE5  806A               	dw	32874
   789  007FE7  805A               	dw	32858
   790  007FE9  804C               	dw	32844
   791  007FEB  803F               	dw	32831
   792  007FED  8033               	dw	32819
   793  007FEF  8029               	dw	32809
   794  007FF1  8020               	dw	32800
   795  007FF3  8018               	dw	32792
   796  007FF5  8011               	dw	32785
   797  007FF7  800B               	dw	32779
   798  007FF9  8007               	dw	32775
   799  007FFB  8004               	dw	32772
   800  007FFD  8002               	dw	32770
   801  007FFF                     __end_of_Sinewave:
   802                           	opt stack 0
   803  0000                     _ADCON0	set	4034
   804  0000                     _ADCON0bits	set	4034
   805  0000                     _ADCON1	set	4033
   806  0000                     _ADCON2	set	4032
   807  0000                     _ADRESH	set	4036
   808  0000                     _ADRESL	set	4035
   809  0000                     _ANSELAbits	set	3896
   810  0000                     _ANSELC	set	3898
   811  0000                     _INTCONbits	set	4082
   812  0000                     _LATC	set	3979
   813  0000                     _OSCCONbits	set	4051
   814  0000                     _OSCTUNEbits	set	3995
   815  0000                     _PIE1	set	3997
   816  0000                     _PIE1bits	set	3997
   817  0000                     _PIR1bits	set	3998
   818  0000                     _RCSTA1	set	4011
   819  0000                     _RCSTA1bits	set	4011
   820  0000                     _SPBRG1	set	4015
   821  0000                     _SPBRGH1	set	4016
   822  0000                     _TRISAbits	set	3986
   823  0000                     _TRISC	set	3988
   824  0000                     _TRISCbits	set	3988
   825  0000                     _TXREG1	set	4013
   826  0000                     _TXSTA1	set	4012
   827  0000                     _TXSTA1bits	set	4012
   828  007FFF  00                 	db	0	; dummy byte at the end
   829  0000                     
   830                           	psect	nvBANK0
   831  0000F3                     __pnvBANK0:
   832                           	opt stack 0
   833  0000F3                     _baud_rate:
   834                           	opt stack 0
   835  0000F3                     	ds	4
   836                           
   837                           ; #config settings
   838  0000                     
   839                           	psect	cinit
   840  006C18                     __pcinit:
   841                           	opt stack 0
   842  006C18                     start_initialization:
   843                           	opt stack 0
   844  006C18                     __initialization:
   845                           	opt stack 0
   846                           
   847                           ; Clear objects allocated to BANK1 (128 bytes)
   848  006C18  EE01  F000         	lfsr	0,__pbssBANK1
   849  006C1C  0E80               	movlw	128
   850  006C1E                     clear_0:
   851  006C1E  6AEE               	clrf	postinc0,c
   852  006C20  06E8               	decf	wreg,f,c
   853  006C22  E1FD               	bnz	clear_0
   854                           
   855                           ; Clear objects allocated to BANK0 (133 bytes)
   856  006C24  EE00  F060         	lfsr	0,__pbssBANK0
   857  006C28  0E85               	movlw	133
   858  006C2A                     clear_1:
   859  006C2A  6AEE               	clrf	postinc0,c
   860  006C2C  06E8               	decf	wreg,f,c
   861  006C2E  E1FD               	bnz	clear_1
   862                           
   863                           ; Clear objects allocated to COMRAM (4 bytes)
   864  006C30  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   865  006C32  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   866  006C34  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   867  006C36  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   868  006C38                     end_of_initialization:
   869                           	opt stack 0
   870  006C38                     __end_of__initialization:
   871                           	opt stack 0
   872  006C38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   873  006C3A  6EF8               	movwf	tblptru,c
   874  006C3C  0100               	movlb	0
   875  006C3E  EFB9  F036         	goto	_main	;jump to C main() function
   876                           tblptru	equ	0xFF8
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           
   880                           	psect	bssCOMRAM
   881  00005A                     __pbssCOMRAM:
   882                           	opt stack 0
   883  00005A                     _i:
   884                           	opt stack 0
   885  00005A                     	ds	2
   886  00005C                     _USART1_Status:
   887                           	opt stack 0
   888  00005C                     	ds	1
   889  00005D                     _input:
   890                           	opt stack 0
   891  00005D                     	ds	1
   892                           tblptru	equ	0xFF8
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           
   896                           	psect	bssBANK0
   897  000060                     __pbssBANK0:
   898                           	opt stack 0
   899  000060                     _data:
   900                           	opt stack 0
   901  000060                     	ds	5
   902  000065                     _realNumbers:
   903                           	opt stack 0
   904  000065                     	ds	128
   905                           tblptru	equ	0xFF8
   906                           postinc0	equ	0xFEE
   907                           wreg	equ	0xFE8
   908                           
   909                           	psect	bssBANK1
   910  000100                     __pbssBANK1:
   911                           	opt stack 0
   912  000100                     _imaginaryNumbers:
   913                           	opt stack 0
   914  000100                     	ds	128
   915                           tblptru	equ	0xFF8
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           
   919                           	psect	cstackBANK0
   920  0000E5                     __pcstackBANK0:
   921                           	opt stack 0
   922  0000E5                     main@adc_value:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x0
   926  0000E5                     	ds	2
   927  0000E7                     main@root:
   928                           	opt stack 0
   929                           
   930                           ; 4 bytes @ 0x2
   931  0000E7                     	ds	4
   932  0000EB                     main@i:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x6
   936  0000EB                     	ds	2
   937  0000ED                     main@place:
   938                           	opt stack 0
   939                           
   940                           ; 4 bytes @ 0x8
   941  0000ED                     	ds	4
   942  0000F1                     main@k:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0xC
   946  0000F1                     	ds	2
   947                           tblptru	equ	0xFF8
   948                           postinc0	equ	0xFEE
   949                           wreg	equ	0xFE8
   950                           
   951                           	psect	cstackCOMRAM
   952  000001                     __pcstackCOMRAM:
   953                           	opt stack 0
   954  000001                     ?___wmul:
   955                           	opt stack 0
   956  000001                     ?___lmul:
   957                           	opt stack 0
   958  000001                     OpenADC@config2:
   959                           	opt stack 0
   960  000001                     Write1USART@data:
   961                           	opt stack 0
   962  000001                     Open1USART@spbrg:
   963                           	opt stack 0
   964  000001                     ___wmul@multiplier:
   965                           	opt stack 0
   966  000001                     ___lmul@multiplier:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x0
   970  000001                     	ds	1
   971  000002                     sendChar@character:
   972                           	opt stack 0
   973  000002                     OpenADC@config3:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x1
   977  000002                     	ds	1
   978  000003                     ??_OpenADC:
   979  000003                     ??_Open1USART:
   980  000003                     sendIntArray@array:
   981                           	opt stack 0
   982  000003                     ___wmul@multiplicand:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0x2
   986  000003                     	ds	2
   987  000005                     OpenADC@config:
   988                           	opt stack 0
   989  000005                     sendIntArray@size:
   990                           	opt stack 0
   991  000005                     ___wmul@product:
   992                           	opt stack 0
   993  000005                     ___lmul@multiplicand:
   994                           	opt stack 0
   995                           
   996                           ; 4 bytes @ 0x4
   997  000005                     	ds	1
   998  000006                     Open1USART@config:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0x5
  1002  000006                     	ds	1
  1003  000007                     
  1004                           ; 0 bytes @ 0x6
  1005  000007                     	ds	2
  1006  000009                     ___lmul@product:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x8
  1010  000009                     	ds	4
  1011  00000D                     fix_fft@fr:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0xC
  1015  00000D                     	ds	2
  1016  00000F                     fix_fft@fi:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0xE
  1020  00000F                     	ds	2
  1021  000011                     fix_fft@m:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x10
  1025  000011                     	ds	2
  1026  000013                     ??_fix_fft:
  1027                           
  1028                           ; 0 bytes @ 0x12
  1029  000013                     	ds	8
  1030  00001B                     fix_fft@k:
  1031                           	opt stack 0
  1032                           
  1033                           ; 4 bytes @ 0x1A
  1034  00001B                     	ds	4
  1035  00001F                     fix_fft@nn:
  1036                           	opt stack 0
  1037                           
  1038                           ; 4 bytes @ 0x1E
  1039  00001F                     	ds	4
  1040  000023                     fix_fft@istep:
  1041                           	opt stack 0
  1042                           
  1043                           ; 4 bytes @ 0x22
  1044  000023                     	ds	4
  1045  000027                     fix_fft@qr:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x26
  1049  000027                     	ds	2
  1050  000029                     fix_fft@qi:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x28
  1054  000029                     	ds	2
  1055  00002B                     fix_fft@wr:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x2A
  1059  00002B                     	ds	2
  1060  00002D                     fix_fft@wi:
  1061                           	opt stack 0
  1062                           
  1063                           ; 2 bytes @ 0x2C
  1064  00002D                     	ds	2
  1065  00002F                     fix_fft@n:
  1066                           	opt stack 0
  1067                           
  1068                           ; 4 bytes @ 0x2E
  1069  00002F                     	ds	4
  1070  000033                     fix_fft@tr:
  1071                           	opt stack 0
  1072                           
  1073                           ; 2 bytes @ 0x32
  1074  000033                     	ds	2
  1075  000035                     fix_fft@ti:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x34
  1079  000035                     	ds	2
  1080  000037                     fix_fft@b:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x36
  1084  000037                     	ds	2
  1085  000039                     fix_fft@i:
  1086                           	opt stack 0
  1087                           
  1088                           ; 4 bytes @ 0x38
  1089  000039                     	ds	4
  1090  00003D                     fix_fft@mr:
  1091                           	opt stack 0
  1092                           
  1093                           ; 4 bytes @ 0x3C
  1094  00003D                     	ds	4
  1095  000041                     fix_fft@l:
  1096                           	opt stack 0
  1097                           
  1098                           ; 4 bytes @ 0x40
  1099  000041                     	ds	4
  1100  000045                     fix_fft@j:
  1101                           	opt stack 0
  1102                           
  1103                           ; 4 bytes @ 0x44
  1104  000045                     	ds	4
  1105  000049                     fix_fft@c:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x48
  1109  000049                     	ds	4
  1110  00004D                     ??_main:
  1111                           
  1112                           ; 0 bytes @ 0x4C
  1113  00004D                     	ds	13
  1114                           tblptru	equ	0xFF8
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           
  1118 ;;
  1119 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
  1120 ;;
  1121 ;; *************** function _main *****************
  1122 ;; Defined at:
  1123 ;;		line 37 in file "main pic18.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  place           4    8[BANK0 ] long 
  1128 ;;  root            4    2[BANK0 ] long 
  1129 ;;  k               2   12[BANK0 ] int 
  1130 ;;  i               2    6[BANK0 ] short 
  1131 ;;  adc_value       2    0[BANK0 ] unsigned int 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;		None               void
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1141 ;;      Params:         0       0       0       0       0       0       0
  1142 ;;      Locals:         0      14       0       0       0       0       0
  1143 ;;      Temps:         13       0       0       0       0       0       0
  1144 ;;      Totals:        13      14       0       0       0       0       0
  1145 ;;Total ram usage:       27 bytes
  1146 ;; Hardware stack levels required when called:    3
  1147 ;; This function calls:
  1148 ;;		_BusyADC
  1149 ;;		_ConvertADC
  1150 ;;		_Open1USART
  1151 ;;		_OpenADC
  1152 ;;		___wmul
  1153 ;;		_fix_fft
  1154 ;;		_sendIntArray
  1155 ;; This function is called by:
  1156 ;;		Startup code after reset
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text0
  1161  006D72                     __ptext0:
  1162                           	opt stack 0
  1163  006D72                     _main:
  1164                           	opt stack 28
  1165                           
  1166                           ;main pic18.c: 38: unsigned int adc_value;
  1167                           ;main pic18.c: 39: TRISAbits.RA3 = 1;
  1168                           
  1169                           ;incstack = 0
  1170  006D72  8692               	bsf	3986,3,c	;volatile
  1171                           
  1172                           ;main pic18.c: 40: ANSELAbits.ANSA3 = 1;
  1173  006D74  010F               	movlb	15	; () banked
  1174  006D76  8738               	bsf	56,3,b	;volatile
  1175                           
  1176                           ;main pic18.c: 41: TRISAbits.RA7 = 1;
  1177  006D78  8E92               	bsf	3986,7,c	;volatile
  1178                           
  1179                           ; BSR set to: 15
  1180                           ;main pic18.c: 42: TRISC = 0x00;
  1181  006D7A  0E00               	movlw	0
  1182  006D7C  6E94               	movwf	3988,c	;volatile
  1183                           
  1184                           ;main pic18.c: 43: LATC = 0x00;
  1185  006D7E  0E00               	movlw	0
  1186  006D80  6E8B               	movwf	3979,c	;volatile
  1187                           
  1188                           ;main pic18.c: 44: ANSELC = 0x00;
  1189  006D82  0E00               	movlw	0
  1190  006D84  010F               	movlb	15	; () banked
  1191  006D86  6F3A               	movwf	58,b	;volatile
  1192                           
  1193                           ; BSR set to: 15
  1194                           ;main pic18.c: 45: TRISCbits.TRISC6 = 1;
  1195  006D88  8C94               	bsf	3988,6,c	;volatile
  1196                           
  1197                           ; BSR set to: 15
  1198                           ;main pic18.c: 46: TRISCbits.TRISC7 = 1;
  1199  006D8A  8E94               	bsf	3988,7,c	;volatile
  1200                           
  1201                           ; BSR set to: 15
  1202                           ;main pic18.c: 48: OSCCONbits.IRCF = 0b111;
  1203  006D8C  88D3               	bsf	4051,4,c	;volatile
  1204  006D8E  8AD3               	bsf	4051,5,c	;volatile
  1205  006D90  8CD3               	bsf	4051,6,c	;volatile
  1206                           
  1207                           ;main pic18.c: 49: OSCCONbits.SCS = 0b11;
  1208  006D92  0E03               	movlw	3
  1209  006D94  12D3               	iorwf	4051,f,c	;volatile
  1210                           
  1211                           ; BSR set to: 15
  1212                           ;main pic18.c: 50: OSCTUNEbits.TUN = 0b01111;
  1213  006D96  809B               	bsf	3995,0,c	;volatile
  1214  006D98  829B               	bsf	3995,1,c	;volatile
  1215  006D9A  849B               	bsf	3995,2,c	;volatile
  1216  006D9C  869B               	bsf	3995,3,c	;volatile
  1217  006D9E  989B               	bcf	3995,4,c	;volatile
  1218  006DA0  9A9B               	bcf	3995,5,c	;volatile
  1219                           
  1220                           ;main pic18.c: 53: baud_rate = (4000000 / 9600 / 16 - 1);
  1221  006DA2  0E19               	movlw	25
  1222  006DA4  0100               	movlb	0	; () banked
  1223  006DA6  6FF3               	movwf	_baud_rate& (0+255),b
  1224  006DA8  0E00               	movlw	0
  1225  006DAA  0100               	movlb	0	; () banked
  1226  006DAC  6FF4               	movwf	(_baud_rate+1)& (0+255),b
  1227  006DAE  0E00               	movlw	0
  1228  006DB0  0100               	movlb	0	; () banked
  1229  006DB2  6FF5               	movwf	(_baud_rate+2)& (0+255),b
  1230  006DB4  0E00               	movlw	0
  1231  006DB6  0100               	movlb	0	; () banked
  1232  006DB8  6FF6               	movwf	(_baud_rate+3)& (0+255),b
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;main pic18.c: 54: OpenADC(0b11111111 &
  1236                           ;main pic18.c: 55: 0b11111111 &
  1237                           ;main pic18.c: 56: 0b11110001,
  1238                           ;main pic18.c: 57: 0b10000011 &
  1239                           ;main pic18.c: 58: 0b01111111 &
  1240                           ;main pic18.c: 59: 0b11110111 &
  1241                           ;main pic18.c: 60: 0b11111100,
  1242                           ;main pic18.c: 61: 0b1110);
  1243  006DBA  0E00               	movlw	0
  1244  006DBC  6E01               	movwf	OpenADC@config2,c
  1245  006DBE  0E0E               	movlw	14
  1246  006DC0  6E02               	movwf	OpenADC@config3,c
  1247  006DC2  0EF1               	movlw	241
  1248  006DC4  EC3B  F036         	call	_OpenADC
  1249                           
  1250                           ;main pic18.c: 63: RCSTA1&=0b01001111,TXSTA1bits.TXEN=0,PIE1&=0b11001111;
  1251  006DC8  0E4F               	movlw	79
  1252  006DCA  16AB               	andwf	4011,f,c	;volatile
  1253  006DCC  9AAC               	bcf	4012,5,c	;volatile
  1254  006DCE  0ECF               	movlw	207
  1255  006DD0  169D               	andwf	3997,f,c	;volatile
  1256                           
  1257                           ;main pic18.c: 64: Open1USART( 0b01111111 &
  1258                           ;main pic18.c: 65: 0b10111111 &
  1259                           ;main pic18.c: 66: 0b11111110 &
  1260                           ;main pic18.c: 67: 0b11111101 &
  1261                           ;main pic18.c: 68: 0b11111111 &
  1262                           ;main pic18.c: 69: 0b11101111,
  1263                           ;main pic18.c: 70: baud_rate );
  1264  006DD2  C0F3  F001         	movff	_baud_rate,Open1USART@spbrg
  1265  006DD6  C0F4  F002         	movff	_baud_rate+1,Open1USART@spbrg+1
  1266  006DDA  0E2C               	movlw	44
  1267  006DDC  EC8D  F036         	call	_Open1USART
  1268  006DE0                     l1285:
  1269                           
  1270                           ;main pic18.c: 73: short i = 0;
  1271  006DE0  0E00               	movlw	0
  1272  006DE2  0100               	movlb	0	; () banked
  1273  006DE4  6FEC               	movwf	(main@i+1)& (0+255),b
  1274  006DE6  0E00               	movlw	0
  1275  006DE8  0100               	movlb	0	; () banked
  1276  006DEA  6FEB               	movwf	main@i& (0+255),b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;main pic18.c: 74: for (i = 0; i < 64; i++) {
  1280  006DEC  0E00               	movlw	0
  1281  006DEE  0100               	movlb	0	; () banked
  1282  006DF0  6FEC               	movwf	(main@i+1)& (0+255),b
  1283  006DF2  0E00               	movlw	0
  1284  006DF4  0100               	movlb	0	; () banked
  1285  006DF6  6FEB               	movwf	main@i& (0+255),b
  1286  006DF8  0100               	movlb	0	; () banked
  1287  006DFA  51EC               	movf	(main@i+1)& (0+255),w,b
  1288  006DFC  0A80               	xorlw	128
  1289  006DFE  0F80               	addlw	-128
  1290  006E00  0E40               	movlw	64
  1291  006E02  B4D8               	btfsc	status,2,c
  1292  006E04  5DEB               	subwf	main@i& (0+255),w,b
  1293  006E06  B0D8               	btfsc	status,0,c
  1294  006E08  D049               	goto	l1305
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;main pic18.c: 76: ConvertADC();
  1298                           
  1299                           ; BSR set to: 0
  1300                           
  1301                           ; BSR set to: 0
  1302  006E0A  ECE1  F035         	call	_ConvertADC	;wreg free
  1303  006E0E                     l1293:
  1304  006E0E  ECE3  F035         	call	_BusyADC	;wreg free
  1305  006E12  0900               	iorlw	0
  1306  006E14  A4D8               	btfss	status,2,c
  1307  006E16  D7FB               	goto	l1293
  1308                           
  1309                           ;main pic18.c: 85: adc_value = ((short)(ADRESH << 8) + (short)ADRESL) - 512;
  1310  006E18  50C3               	movf	4035,w,c	;volatile
  1311  006E1A  CFC4 F04D          	movff	4036,??_main	;volatile
  1312  006E1E  6A4E               	clrf	(??_main+1)& (0+255),c
  1313  006E20  C04D  F04E         	movff	??_main,??_main+1
  1314  006E24  6A4D               	clrf	??_main,c
  1315  006E26  264D               	addwf	??_main,f,c
  1316  006E28  0E00               	movlw	0
  1317  006E2A  224E               	addwfc	??_main+1,f,c
  1318  006E2C  0E00               	movlw	0
  1319  006E2E  244D               	addwf	??_main,w,c
  1320  006E30  0100               	movlb	0	; () banked
  1321  006E32  6FE5               	movwf	main@adc_value& (0+255),b
  1322  006E34  0EFE               	movlw	254
  1323  006E36  204E               	addwfc	??_main+1,w,c
  1324  006E38  0100               	movlb	0	; () banked
  1325  006E3A  6FE6               	movwf	(main@adc_value+1)& (0+255),b
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;main pic18.c: 86: realNumbers[i] = adc_value;
  1329  006E3C  0E65               	movlw	low _realNumbers
  1330  006E3E  6E4D               	movwf	??_main& (0+255),c
  1331  006E40  0E00               	movlw	high _realNumbers
  1332  006E42  6E4E               	movwf	(??_main+1)& (0+255),c
  1333  006E44  90D8               	bcf	status,0,c
  1334  006E46  0100               	movlb	0	; () banked
  1335  006E48  35EB               	rlcf	main@i& (0+255),w,b
  1336  006E4A  6ED9               	movwf	fsr2l,c
  1337  006E4C  0100               	movlb	0	; () banked
  1338  006E4E  35EC               	rlcf	(main@i+1)& (0+255),w,b
  1339  006E50  6EDA               	movwf	fsr2h,c
  1340  006E52  504D               	movf	??_main,w,c
  1341  006E54  26D9               	addwf	fsr2l,f,c
  1342  006E56  504E               	movf	??_main+1,w,c
  1343  006E58  22DA               	addwfc	fsr2h,f,c
  1344  006E5A  0100               	movlb	0	; () banked
  1345  006E5C  C0E5  FFDE         	movff	main@adc_value,postinc2
  1346  006E60  0100               	movlb	0	; () banked
  1347  006E62  C0E6  FFDD         	movff	main@adc_value+1,postdec2
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;main pic18.c: 92: imaginaryNumbers[i] = 0;
  1351  006E66  0E00               	movlw	low _imaginaryNumbers
  1352  006E68  6E4D               	movwf	??_main& (0+255),c
  1353  006E6A  0E01               	movlw	high _imaginaryNumbers
  1354  006E6C  6E4E               	movwf	(??_main+1)& (0+255),c
  1355  006E6E  90D8               	bcf	status,0,c
  1356  006E70  0100               	movlb	0	; () banked
  1357  006E72  35EB               	rlcf	main@i& (0+255),w,b
  1358  006E74  6ED9               	movwf	fsr2l,c
  1359  006E76  0100               	movlb	0	; () banked
  1360  006E78  35EC               	rlcf	(main@i+1)& (0+255),w,b
  1361  006E7A  6EDA               	movwf	fsr2h,c
  1362  006E7C  504D               	movf	??_main,w,c
  1363  006E7E  26D9               	addwf	fsr2l,f,c
  1364  006E80  504E               	movf	??_main+1,w,c
  1365  006E82  22DA               	addwfc	fsr2h,f,c
  1366  006E84  0E00               	movlw	0
  1367  006E86  6EDE               	movwf	postinc2,c
  1368  006E88  0E00               	movlw	0
  1369  006E8A  6EDD               	movwf	postdec2,c
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;main pic18.c: 93: _delay(1000);
  1373  006E8C  0EFA               	movlw	250
  1374  006E8E                     u827:
  1375  006E8E  F000               	nop	
  1376  006E90  2EE8               	decfsz	wreg,f,c
  1377  006E92  D7FD               	goto	u827
  1378  006E94  0100               	movlb	0	; () banked
  1379  006E96  4BEB               	infsnz	main@i& (0+255),f,b
  1380  006E98  2BEC               	incf	(main@i+1)& (0+255),f,b
  1381  006E9A  D7AE               	goto	L1
  1382  006E9C                     l1305:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main pic18.c: 94: }
  1386                           ;main pic18.c: 99: fix_fft(realNumbers, imaginaryNumbers, 6);
  1387  006E9C  0100               	movlb	0	; () banked
  1388  006E9E  0E00               	movlw	high _realNumbers
  1389  006EA0  6E0E               	movwf	fix_fft@fr+1,c
  1390  006EA2  0100               	movlb	0	; () banked
  1391  006EA4  0E65               	movlw	low _realNumbers
  1392  006EA6  6E0D               	movwf	fix_fft@fr,c
  1393  006EA8  0101               	movlb	1	; () banked
  1394  006EAA  0E01               	movlw	high _imaginaryNumbers
  1395  006EAC  6E10               	movwf	fix_fft@fi+1,c
  1396  006EAE  0101               	movlb	1	; () banked
  1397  006EB0  0E00               	movlw	low _imaginaryNumbers
  1398  006EB2  6E0F               	movwf	fix_fft@fi,c
  1399  006EB4  0E00               	movlw	0
  1400  006EB6  6E12               	movwf	fix_fft@m+1,c
  1401  006EB8  0E06               	movlw	6
  1402  006EBA  6E11               	movwf	fix_fft@m,c
  1403  006EBC  EC39  F039         	call	_fix_fft	;wreg free
  1404                           
  1405                           ;main pic18.c: 101: long place, root;
  1406                           ;main pic18.c: 102: int k = 0;
  1407  006EC0  0E00               	movlw	0
  1408  006EC2  0100               	movlb	0	; () banked
  1409  006EC4  6FF2               	movwf	(main@k+1)& (0+255),b
  1410  006EC6  0E00               	movlw	0
  1411  006EC8  0100               	movlb	0	; () banked
  1412  006ECA  6FF1               	movwf	main@k& (0+255),b
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;main pic18.c: 103: for (k=0; k < 32; k++) {
  1416  006ECC  0E00               	movlw	0
  1417  006ECE  0100               	movlb	0	; () banked
  1418  006ED0  6FF2               	movwf	(main@k+1)& (0+255),b
  1419  006ED2  0E00               	movlw	0
  1420  006ED4  0100               	movlb	0	; () banked
  1421  006ED6  6FF1               	movwf	main@k& (0+255),b
  1422  006ED8                     
  1423                           ; BSR set to: 0
  1424  006ED8  0100               	movlb	0	; () banked
  1425  006EDA  51F2               	movf	(main@k+1)& (0+255),w,b
  1426  006EDC  0A80               	xorlw	128
  1427  006EDE  0F80               	addlw	-128
  1428  006EE0  0E20               	movlw	32
  1429  006EE2  B4D8               	btfsc	status,2,c
  1430  006EE4  5DF1               	subwf	main@k& (0+255),w,b
  1431  006EE6  B0D8               	btfsc	status,0,c
  1432  006EE8  D1B7               	goto	l1347
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;main pic18.c: 104: realNumbers[k] = (realNumbers[k] * realNumbers[k] +
  1436                           ;main pic18.c: 105: imaginaryNumbers[k] * imaginaryNumbers[k]);
  1437                           
  1438                           ; BSR set to: 0
  1439                           
  1440                           ; BSR set to: 0
  1441  006EEA  0E65               	movlw	low _realNumbers
  1442  006EEC  6E4D               	movwf	??_main& (0+255),c
  1443  006EEE  0E00               	movlw	high _realNumbers
  1444  006EF0  6E4E               	movwf	(??_main+1)& (0+255),c
  1445  006EF2  90D8               	bcf	status,0,c
  1446  006EF4  0100               	movlb	0	; () banked
  1447  006EF6  35F1               	rlcf	main@k& (0+255),w,b
  1448  006EF8  6ED9               	movwf	fsr2l,c
  1449  006EFA  0100               	movlb	0	; () banked
  1450  006EFC  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1451  006EFE  6EDA               	movwf	fsr2h,c
  1452  006F00  504D               	movf	??_main,w,c
  1453  006F02  26D9               	addwf	fsr2l,f,c
  1454  006F04  504E               	movf	??_main+1,w,c
  1455  006F06  22DA               	addwfc	fsr2h,f,c
  1456  006F08  CFDE F001          	movff	postinc2,___wmul@multiplier
  1457  006F0C  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1458  006F10  0E65               	movlw	low _realNumbers
  1459  006F12  6E4F               	movwf	(??_main+2)& (0+255),c
  1460  006F14  0E00               	movlw	high _realNumbers
  1461  006F16  6E50               	movwf	(??_main+3)& (0+255),c
  1462  006F18  90D8               	bcf	status,0,c
  1463  006F1A  0100               	movlb	0	; () banked
  1464  006F1C  35F1               	rlcf	main@k& (0+255),w,b
  1465  006F1E  6ED9               	movwf	fsr2l,c
  1466  006F20  0100               	movlb	0	; () banked
  1467  006F22  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1468  006F24  6EDA               	movwf	fsr2h,c
  1469  006F26  504F               	movf	??_main+2,w,c
  1470  006F28  26D9               	addwf	fsr2l,f,c
  1471  006F2A  5050               	movf	??_main+3,w,c
  1472  006F2C  22DA               	addwfc	fsr2h,f,c
  1473  006F2E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1474  006F32  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1475  006F36  ECF9  F035         	call	___wmul	;wreg free
  1476  006F3A  C001  F051         	movff	?___wmul,??_main+4
  1477  006F3E  C002  F052         	movff	?___wmul+1,??_main+5
  1478  006F42  0E00               	movlw	low _imaginaryNumbers
  1479  006F44  6E53               	movwf	(??_main+6)& (0+255),c
  1480  006F46  0E01               	movlw	high _imaginaryNumbers
  1481  006F48  6E54               	movwf	(??_main+7)& (0+255),c
  1482  006F4A  90D8               	bcf	status,0,c
  1483  006F4C  0100               	movlb	0	; () banked
  1484  006F4E  35F1               	rlcf	main@k& (0+255),w,b
  1485  006F50  6ED9               	movwf	fsr2l,c
  1486  006F52  0100               	movlb	0	; () banked
  1487  006F54  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1488  006F56  6EDA               	movwf	fsr2h,c
  1489  006F58  5053               	movf	??_main+6,w,c
  1490  006F5A  26D9               	addwf	fsr2l,f,c
  1491  006F5C  5054               	movf	??_main+7,w,c
  1492  006F5E  22DA               	addwfc	fsr2h,f,c
  1493  006F60  CFDE F001          	movff	postinc2,___wmul@multiplier
  1494  006F64  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1495  006F68  0E00               	movlw	low _imaginaryNumbers
  1496  006F6A  6E55               	movwf	(??_main+8)& (0+255),c
  1497  006F6C  0E01               	movlw	high _imaginaryNumbers
  1498  006F6E  6E56               	movwf	(??_main+9)& (0+255),c
  1499  006F70  90D8               	bcf	status,0,c
  1500  006F72  0100               	movlb	0	; () banked
  1501  006F74  35F1               	rlcf	main@k& (0+255),w,b
  1502  006F76  6ED9               	movwf	fsr2l,c
  1503  006F78  0100               	movlb	0	; () banked
  1504  006F7A  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1505  006F7C  6EDA               	movwf	fsr2h,c
  1506  006F7E  5055               	movf	??_main+8,w,c
  1507  006F80  26D9               	addwf	fsr2l,f,c
  1508  006F82  5056               	movf	??_main+9,w,c
  1509  006F84  22DA               	addwfc	fsr2h,f,c
  1510  006F86  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1511  006F8A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1512  006F8E  ECF9  F035         	call	___wmul	;wreg free
  1513  006F92  5001               	movf	?___wmul,w,c
  1514  006F94  2651               	addwf	??_main+4,f,c
  1515  006F96  5002               	movf	?___wmul+1,w,c
  1516  006F98  2252               	addwfc	??_main+5,f,c
  1517  006F9A  0E65               	movlw	low _realNumbers
  1518  006F9C  6E57               	movwf	(??_main+10)& (0+255),c
  1519  006F9E  0E00               	movlw	high _realNumbers
  1520  006FA0  6E58               	movwf	(??_main+11)& (0+255),c
  1521  006FA2  90D8               	bcf	status,0,c
  1522  006FA4  0100               	movlb	0	; () banked
  1523  006FA6  35F1               	rlcf	main@k& (0+255),w,b
  1524  006FA8  6ED9               	movwf	fsr2l,c
  1525  006FAA  0100               	movlb	0	; () banked
  1526  006FAC  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1527  006FAE  6EDA               	movwf	fsr2h,c
  1528  006FB0  5057               	movf	??_main+10,w,c
  1529  006FB2  26D9               	addwf	fsr2l,f,c
  1530  006FB4  5058               	movf	??_main+11,w,c
  1531  006FB6  22DA               	addwfc	fsr2h,f,c
  1532  006FB8  C051  FFDE         	movff	??_main+4,postinc2
  1533  006FBC  C052  FFDD         	movff	??_main+5,postdec2
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;main pic18.c: 107: place = 0x40000000;
  1537  006FC0  0E00               	movlw	0
  1538  006FC2  0100               	movlb	0	; () banked
  1539  006FC4  6FED               	movwf	main@place& (0+255),b
  1540  006FC6  0E00               	movlw	0
  1541  006FC8  0100               	movlb	0	; () banked
  1542  006FCA  6FEE               	movwf	(main@place+1)& (0+255),b
  1543  006FCC  0E00               	movlw	0
  1544  006FCE  0100               	movlb	0	; () banked
  1545  006FD0  6FEF               	movwf	(main@place+2)& (0+255),b
  1546  006FD2  0E40               	movlw	64
  1547  006FD4  0100               	movlb	0	; () banked
  1548  006FD6  6FF0               	movwf	(main@place+3)& (0+255),b
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;main pic18.c: 108: root = 0;
  1552  006FD8  0E00               	movlw	0
  1553  006FDA  0100               	movlb	0	; () banked
  1554  006FDC  6FE7               	movwf	main@root& (0+255),b
  1555  006FDE  0E00               	movlw	0
  1556  006FE0  0100               	movlb	0	; () banked
  1557  006FE2  6FE8               	movwf	(main@root+1)& (0+255),b
  1558  006FE4  0E00               	movlw	0
  1559  006FE6  0100               	movlb	0	; () banked
  1560  006FE8  6FE9               	movwf	(main@root+2)& (0+255),b
  1561  006FEA  0E00               	movlw	0
  1562  006FEC  0100               	movlb	0	; () banked
  1563  006FEE  6FEA               	movwf	(main@root+3)& (0+255),b
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;main pic18.c: 110: if (realNumbers[k] >= 0) {
  1567  006FF0  0E65               	movlw	low _realNumbers
  1568  006FF2  6E4D               	movwf	??_main& (0+255),c
  1569  006FF4  0E00               	movlw	high _realNumbers
  1570  006FF6  6E4E               	movwf	(??_main+1)& (0+255),c
  1571  006FF8  90D8               	bcf	status,0,c
  1572  006FFA  0100               	movlb	0	; () banked
  1573  006FFC  35F1               	rlcf	main@k& (0+255),w,b
  1574  006FFE  6ED9               	movwf	fsr2l,c
  1575  007000  0100               	movlb	0	; () banked
  1576  007002  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1577  007004  6EDA               	movwf	fsr2h,c
  1578  007006  504D               	movf	??_main,w,c
  1579  007008  26D9               	addwf	fsr2l,f,c
  1580  00700A  504E               	movf	??_main+1,w,c
  1581  00700C  22DA               	addwfc	fsr2h,f,c
  1582  00700E  CFDE F04F          	movff	postinc2,??_main+2
  1583  007012  CFDD F050          	movff	postdec2,??_main+3
  1584  007016  AE50               	btfss	??_main+3,7,c
  1585  007018  D021               	goto	l1327
  1586  00701A  D105               	goto	l1341
  1587  00701C                     l1325:
  1588                           
  1589                           ; BSR set to: 0
  1590  00701C  0E02               	movlw	2
  1591  00701E  6E4D               	movwf	??_main& (0+255),c
  1592  007020  0100               	movlb	0	; () banked
  1593  007022  C0ED  F04E         	movff	main@place,??_main+1
  1594  007026  0100               	movlb	0	; () banked
  1595  007028  C0EE  F04F         	movff	main@place+1,??_main+2
  1596  00702C  0100               	movlb	0	; () banked
  1597  00702E  C0EF  F050         	movff	main@place+2,??_main+3
  1598  007032  0100               	movlb	0	; () banked
  1599  007034  C0F0  F051         	movff	main@place+3,??_main+4
  1600  007038                     u755:
  1601  007038  664D               	tstfsz	??_main,c
  1602  00703A  D001               	goto	u756
  1603  00703C  D007               	goto	u757
  1604  00703E                     u756:
  1605  00703E  3451               	rlcf	??_main+4,w,c
  1606  007040  3251               	rrcf	??_main+4,f,c
  1607  007042  3250               	rrcf	??_main+3,f,c
  1608  007044  324F               	rrcf	??_main+2,f,c
  1609  007046  324E               	rrcf	??_main+1,f,c
  1610  007048  2E4D               	decfsz	??_main,f,c
  1611  00704A  D7F6               	goto	u755
  1612  00704C                     u757:
  1613  00704C  C04E  F0ED         	movff	??_main+1,main@place
  1614  007050  C04F  F0EE         	movff	??_main+2,main@place+1
  1615  007054  C050  F0EF         	movff	??_main+3,main@place+2
  1616  007058  C051  F0F0         	movff	??_main+4,main@place+3
  1617  00705C                     l1327:
  1618                           
  1619                           ; BSR set to: 0
  1620  00705C  0E65               	movlw	low _realNumbers
  1621  00705E  6E4D               	movwf	??_main& (0+255),c
  1622  007060  0E00               	movlw	high _realNumbers
  1623  007062  6E4E               	movwf	(??_main+1)& (0+255),c
  1624  007064  90D8               	bcf	status,0,c
  1625  007066  0100               	movlb	0	; () banked
  1626  007068  35F1               	rlcf	main@k& (0+255),w,b
  1627  00706A  6ED9               	movwf	fsr2l,c
  1628  00706C  0100               	movlb	0	; () banked
  1629  00706E  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1630  007070  6EDA               	movwf	fsr2h,c
  1631  007072  504D               	movf	??_main,w,c
  1632  007074  26D9               	addwf	fsr2l,f,c
  1633  007076  504E               	movf	??_main+1,w,c
  1634  007078  22DA               	addwfc	fsr2h,f,c
  1635  00707A  CFDE F04F          	movff	postinc2,??_main+2
  1636  00707E  CFDD F050          	movff	postdec2,??_main+3
  1637  007082  C04F  F051         	movff	??_main+2,??_main+4
  1638  007086  C050  F052         	movff	??_main+3,??_main+5
  1639  00708A  0E00               	movlw	0
  1640  00708C  BE52               	btfsc	(??_main+5)& (0+255),7,c
  1641  00708E  0EFF               	movlw	255
  1642  007090  6E53               	movwf	(??_main+6)& (0+255),c
  1643  007092  6E54               	movwf	(??_main+7)& (0+255),c
  1644  007094  5054               	movf	??_main+7,w,c
  1645  007096  0A80               	xorlw	128
  1646  007098  6E55               	movwf	(??_main+8)& (0+255),c
  1647  00709A  0100               	movlb	0	; () banked
  1648  00709C  51ED               	movf	main@place& (0+255),w,b
  1649  00709E  5C51               	subwf	??_main+4,w,c
  1650  0070A0  0100               	movlb	0	; () banked
  1651  0070A2  51EE               	movf	(main@place+1)& (0+255),w,b
  1652  0070A4  5852               	subwfb	??_main+5,w,c
  1653  0070A6  0100               	movlb	0	; () banked
  1654  0070A8  51EF               	movf	(main@place+2)& (0+255),w,b
  1655  0070AA  5853               	subwfb	??_main+6,w,c
  1656  0070AC  0100               	movlb	0	; () banked
  1657  0070AE  51F0               	movf	(main@place+3)& (0+255),w,b
  1658  0070B0  0A80               	xorlw	128
  1659  0070B2  5855               	subwfb	(??_main+8)& (0+255),w,c
  1660  0070B4  B0D8               	btfsc	status,0,c
  1661  0070B6  D0B0               	goto	l1339
  1662  0070B8  D7B1               	goto	l1325
  1663  0070BA                     l1329:
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;main pic18.c: 115: if (realNumbers[k] >= root + place) {
  1667  0070BA  0100               	movlb	0	; () banked
  1668  0070BC  51ED               	movf	main@place& (0+255),w,b
  1669  0070BE  0100               	movlb	0	; () banked
  1670  0070C0  25E7               	addwf	main@root& (0+255),w,b
  1671  0070C2  6E4D               	movwf	??_main& (0+255),c
  1672  0070C4  0100               	movlb	0	; () banked
  1673  0070C6  51EE               	movf	(main@place+1)& (0+255),w,b
  1674  0070C8  0100               	movlb	0	; () banked
  1675  0070CA  21E8               	addwfc	(main@root+1)& (0+255),w,b
  1676  0070CC  6E4E               	movwf	(??_main+1)& (0+255),c
  1677  0070CE  0100               	movlb	0	; () banked
  1678  0070D0  51EF               	movf	(main@place+2)& (0+255),w,b
  1679  0070D2  0100               	movlb	0	; () banked
  1680  0070D4  21E9               	addwfc	(main@root+2)& (0+255),w,b
  1681  0070D6  6E4F               	movwf	(??_main+2)& (0+255),c
  1682  0070D8  0100               	movlb	0	; () banked
  1683  0070DA  51F0               	movf	(main@place+3)& (0+255),w,b
  1684  0070DC  0100               	movlb	0	; () banked
  1685  0070DE  21EA               	addwfc	(main@root+3)& (0+255),w,b
  1686  0070E0  6E50               	movwf	(??_main+3)& (0+255),c
  1687  0070E2  0E65               	movlw	low _realNumbers
  1688  0070E4  6E51               	movwf	(??_main+4)& (0+255),c
  1689  0070E6  0E00               	movlw	high _realNumbers
  1690  0070E8  6E52               	movwf	(??_main+5)& (0+255),c
  1691  0070EA  90D8               	bcf	status,0,c
  1692  0070EC  0100               	movlb	0	; () banked
  1693  0070EE  35F1               	rlcf	main@k& (0+255),w,b
  1694  0070F0  6ED9               	movwf	fsr2l,c
  1695  0070F2  0100               	movlb	0	; () banked
  1696  0070F4  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1697  0070F6  6EDA               	movwf	fsr2h,c
  1698  0070F8  5051               	movf	??_main+4,w,c
  1699  0070FA  26D9               	addwf	fsr2l,f,c
  1700  0070FC  5052               	movf	??_main+5,w,c
  1701  0070FE  22DA               	addwfc	fsr2h,f,c
  1702  007100  CFDE F053          	movff	postinc2,??_main+6
  1703  007104  CFDD F054          	movff	postdec2,??_main+7
  1704  007108  C053  F055         	movff	??_main+6,??_main+8
  1705  00710C  C054  F056         	movff	??_main+7,??_main+9
  1706  007110  0E00               	movlw	0
  1707  007112  BE56               	btfsc	(??_main+9)& (0+255),7,c
  1708  007114  0EFF               	movlw	255
  1709  007116  6E57               	movwf	(??_main+10)& (0+255),c
  1710  007118  6E58               	movwf	(??_main+11)& (0+255),c
  1711  00711A  5058               	movf	??_main+11,w,c
  1712  00711C  0A80               	xorlw	128
  1713  00711E  6E59               	movwf	(??_main+12)& (0+255),c
  1714  007120  504D               	movf	??_main,w,c
  1715  007122  5C55               	subwf	??_main+8,w,c
  1716  007124  504E               	movf	??_main+1,w,c
  1717  007126  5856               	subwfb	??_main+9,w,c
  1718  007128  504F               	movf	??_main+2,w,c
  1719  00712A  5857               	subwfb	??_main+10,w,c
  1720  00712C  5050               	movf	??_main+3,w,c
  1721  00712E  0A80               	xorlw	128
  1722  007130  5859               	subwfb	(??_main+12)& (0+255),w,c
  1723  007132  A0D8               	btfss	status,0,c
  1724  007134  D038               	goto	l1335
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;main pic18.c: 116: realNumbers[k] -= root + place;
  1728  007136  0100               	movlb	0	; () banked
  1729  007138  C0E7  F04D         	movff	main@root,??_main
  1730  00713C  0100               	movlb	0	; () banked
  1731  00713E  C0E8  F04E         	movff	main@root+1,??_main+1
  1732  007142  0100               	movlb	0	; () banked
  1733  007144  51ED               	movf	main@place& (0+255),w,b
  1734  007146  264D               	addwf	??_main,f,c
  1735  007148  0100               	movlb	0	; () banked
  1736  00714A  51EE               	movf	(main@place+1)& (0+255),w,b
  1737  00714C  224E               	addwfc	??_main+1,f,c
  1738  00714E  0E65               	movlw	low _realNumbers
  1739  007150  6E4F               	movwf	(??_main+2)& (0+255),c
  1740  007152  0E00               	movlw	high _realNumbers
  1741  007154  6E50               	movwf	(??_main+3)& (0+255),c
  1742  007156  90D8               	bcf	status,0,c
  1743  007158  0100               	movlb	0	; () banked
  1744  00715A  35F1               	rlcf	main@k& (0+255),w,b
  1745  00715C  6ED9               	movwf	fsr2l,c
  1746  00715E  0100               	movlb	0	; () banked
  1747  007160  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1748  007162  6EDA               	movwf	fsr2h,c
  1749  007164  504F               	movf	??_main+2,w,c
  1750  007166  26D9               	addwf	fsr2l,f,c
  1751  007168  5050               	movf	??_main+3,w,c
  1752  00716A  22DA               	addwfc	fsr2h,f,c
  1753  00716C  504D               	movf	??_main,w,c
  1754  00716E  5EDE               	subwf	postinc2,f,c
  1755  007170  504E               	movf	??_main+1,w,c
  1756  007172  5ADD               	subwfb	postdec2,f,c
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;main pic18.c: 117: root += place * 2;
  1760  007174  90D8               	bcf	status,0,c
  1761  007176  0100               	movlb	0	; () banked
  1762  007178  35ED               	rlcf	main@place& (0+255),w,b
  1763  00717A  6E4D               	movwf	??_main& (0+255),c
  1764  00717C  0100               	movlb	0	; () banked
  1765  00717E  35EE               	rlcf	(main@place+1)& (0+255),w,b
  1766  007180  6E4E               	movwf	(??_main+1)& (0+255),c
  1767  007182  0100               	movlb	0	; () banked
  1768  007184  35EF               	rlcf	(main@place+2)& (0+255),w,b
  1769  007186  6E4F               	movwf	(??_main+2)& (0+255),c
  1770  007188  0100               	movlb	0	; () banked
  1771  00718A  35F0               	rlcf	(main@place+3)& (0+255),w,b
  1772  00718C  6E50               	movwf	(??_main+3)& (0+255),c
  1773  00718E  504D               	movf	??_main,w,c
  1774  007190  0100               	movlb	0	; () banked
  1775  007192  27E7               	addwf	main@root& (0+255),f,b
  1776  007194  504E               	movf	??_main+1,w,c
  1777  007196  0100               	movlb	0	; () banked
  1778  007198  23E8               	addwfc	(main@root+1)& (0+255),f,b
  1779  00719A  504F               	movf	??_main+2,w,c
  1780  00719C  0100               	movlb	0	; () banked
  1781  00719E  23E9               	addwfc	(main@root+2)& (0+255),f,b
  1782  0071A0  5050               	movf	??_main+3,w,c
  1783  0071A2  0100               	movlb	0	; () banked
  1784  0071A4  23EA               	addwfc	(main@root+3)& (0+255),f,b
  1785  0071A6                     l1335:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main pic18.c: 118: }
  1789                           ;main pic18.c: 120: root = root >> 1;
  1790  0071A6  0100               	movlb	0	; () banked
  1791  0071A8  C0E7  F04D         	movff	main@root,??_main
  1792  0071AC  0100               	movlb	0	; () banked
  1793  0071AE  C0E8  F04E         	movff	main@root+1,??_main+1
  1794  0071B2  0100               	movlb	0	; () banked
  1795  0071B4  C0E9  F04F         	movff	main@root+2,??_main+2
  1796  0071B8  0100               	movlb	0	; () banked
  1797  0071BA  C0EA  F050         	movff	main@root+3,??_main+3
  1798  0071BE  3450               	rlcf	??_main+3,w,c
  1799  0071C0  3250               	rrcf	??_main+3,f,c
  1800  0071C2  324F               	rrcf	??_main+2,f,c
  1801  0071C4  324E               	rrcf	??_main+1,f,c
  1802  0071C6  324D               	rrcf	??_main,f,c
  1803  0071C8  C04D  F0E7         	movff	??_main,main@root
  1804  0071CC  C04E  F0E8         	movff	??_main+1,main@root+1
  1805  0071D0  C04F  F0E9         	movff	??_main+2,main@root+2
  1806  0071D4  C050  F0EA         	movff	??_main+3,main@root+3
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;main pic18.c: 121: place = place >> 2;
  1810  0071D8  0E02               	movlw	2
  1811  0071DA  6E4D               	movwf	??_main& (0+255),c
  1812  0071DC  0100               	movlb	0	; () banked
  1813  0071DE  C0ED  F04E         	movff	main@place,??_main+1
  1814  0071E2  0100               	movlb	0	; () banked
  1815  0071E4  C0EE  F04F         	movff	main@place+1,??_main+2
  1816  0071E8  0100               	movlb	0	; () banked
  1817  0071EA  C0EF  F050         	movff	main@place+2,??_main+3
  1818  0071EE  0100               	movlb	0	; () banked
  1819  0071F0  C0F0  F051         	movff	main@place+3,??_main+4
  1820  0071F4                     u785:
  1821  0071F4  664D               	tstfsz	??_main,c
  1822  0071F6  D001               	goto	u786
  1823  0071F8  D007               	goto	u787
  1824  0071FA                     u786:
  1825  0071FA  3451               	rlcf	??_main+4,w,c
  1826  0071FC  3251               	rrcf	??_main+4,f,c
  1827  0071FE  3250               	rrcf	??_main+3,f,c
  1828  007200  324F               	rrcf	??_main+2,f,c
  1829  007202  324E               	rrcf	??_main+1,f,c
  1830  007204  2E4D               	decfsz	??_main,f,c
  1831  007206  D7F6               	goto	u785
  1832  007208                     u787:
  1833  007208  C04E  F0ED         	movff	??_main+1,main@place
  1834  00720C  C04F  F0EE         	movff	??_main+2,main@place+1
  1835  007210  C050  F0EF         	movff	??_main+3,main@place+2
  1836  007214  C051  F0F0         	movff	??_main+4,main@place+3
  1837  007218                     l1339:
  1838                           
  1839                           ; BSR set to: 0
  1840  007218  0100               	movlb	0	; () banked
  1841  00721A  51F0               	movf	(main@place+3)& (0+255),w,b
  1842  00721C  11ED               	iorwf	main@place& (0+255),w,b
  1843  00721E  11EE               	iorwf	(main@place+1)& (0+255),w,b
  1844  007220  11EF               	iorwf	(main@place+2)& (0+255),w,b
  1845  007222  A4D8               	btfss	status,2,c
  1846  007224  D74A               	goto	l1329
  1847  007226                     l1341:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;main pic18.c: 122: }
  1851                           ;main pic18.c: 123: }
  1852                           ;main pic18.c: 125: realNumbers[k] = root;
  1853  007226  0E65               	movlw	low _realNumbers
  1854  007228  6E4D               	movwf	??_main& (0+255),c
  1855  00722A  0E00               	movlw	high _realNumbers
  1856  00722C  6E4E               	movwf	(??_main+1)& (0+255),c
  1857  00722E  90D8               	bcf	status,0,c
  1858  007230  0100               	movlb	0	; () banked
  1859  007232  35F1               	rlcf	main@k& (0+255),w,b
  1860  007234  6ED9               	movwf	fsr2l,c
  1861  007236  0100               	movlb	0	; () banked
  1862  007238  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1863  00723A  6EDA               	movwf	fsr2h,c
  1864  00723C  504D               	movf	??_main,w,c
  1865  00723E  26D9               	addwf	fsr2l,f,c
  1866  007240  504E               	movf	??_main+1,w,c
  1867  007242  22DA               	addwfc	fsr2h,f,c
  1868  007244  0100               	movlb	0	; () banked
  1869  007246  C0E7  FFDE         	movff	main@root,postinc2
  1870  00724A  0100               	movlb	0	; () banked
  1871  00724C  C0E8  FFDD         	movff	main@root+1,postdec2
  1872                           
  1873                           ; BSR set to: 0
  1874  007250  0100               	movlb	0	; () banked
  1875  007252  4BF1               	infsnz	main@k& (0+255),f,b
  1876  007254  2BF2               	incf	(main@k+1)& (0+255),f,b
  1877  007256  D640               	goto	L2
  1878  007258                     l1347:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;main pic18.c: 126: }
  1882                           ;main pic18.c: 129: sendIntArray(realNumbers, 32);
  1883  007258  0100               	movlb	0	; () banked
  1884  00725A  0E00               	movlw	high _realNumbers
  1885  00725C  6E04               	movwf	sendIntArray@array+1,c
  1886  00725E  0100               	movlb	0	; () banked
  1887  007260  0E65               	movlw	low _realNumbers
  1888  007262  6E03               	movwf	sendIntArray@array,c
  1889  007264  0E00               	movlw	0
  1890  007266  6E06               	movwf	sendIntArray@size+1,c
  1891  007268  0E20               	movlw	32
  1892  00726A  6E05               	movwf	sendIntArray@size,c
  1893  00726C  EC21  F036         	call	_sendIntArray	;wreg free
  1894  007270  D5B7               	goto	l1285
  1895  007272                     __end_of_main:
  1896                           	opt stack 0
  1897                           tblptru	equ	0xFF8
  1898                           postinc0	equ	0xFEE
  1899                           wreg	equ	0xFE8
  1900                           postinc2	equ	0xFDE
  1901                           postdec2	equ	0xFDD
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           status	equ	0xFD8
  1905                           
  1906 ;; *************** function _sendIntArray *****************
  1907 ;; Defined at:
  1908 ;;		line 151 in file "main pic18.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  array           2    2[COMRAM] PTR short 
  1911 ;;		 -> realNumbers(128), 
  1912 ;;  size            2    4[COMRAM] unsigned int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;		None               void
  1917 ;; Registers used:
  1918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1924 ;;      Params:         4       0       0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0
  1927 ;;      Totals:         4       0       0       0       0       0       0
  1928 ;;Total ram usage:        4 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    2
  1931 ;; This function calls:
  1932 ;;		_sendChar
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text1
  1939  006C42                     __ptext1:
  1940                           	opt stack 0
  1941  006C42                     _sendIntArray:
  1942                           	opt stack 28
  1943                           
  1944                           ;main pic18.c: 152: for(i = 0; i < size; i++) {
  1945                           
  1946                           ;incstack = 0
  1947  006C42  0E00               	movlw	0
  1948  006C44  6E5B               	movwf	_i+1,c
  1949  006C46  0E00               	movlw	0
  1950  006C48  6E5A               	movwf	_i,c
  1951  006C4A  D00E               	goto	l1255
  1952  006C4C                     l1251:
  1953                           
  1954                           ;main pic18.c: 153: sendChar(array[i]);
  1955  006C4C  90D8               	bcf	status,0,c
  1956  006C4E  345A               	rlcf	_i,w,c
  1957  006C50  6ED9               	movwf	fsr2l,c
  1958  006C52  345B               	rlcf	_i+1,w,c
  1959  006C54  6EDA               	movwf	fsr2h,c
  1960  006C56  5003               	movf	sendIntArray@array,w,c
  1961  006C58  26D9               	addwf	fsr2l,f,c
  1962  006C5A  5004               	movf	sendIntArray@array+1,w,c
  1963  006C5C  22DA               	addwfc	fsr2h,f,c
  1964  006C5E  50DF               	movf	indf2,w,c
  1965  006C60  ECE9  F035         	call	_sendChar
  1966  006C64  4A5A               	infsnz	_i,f,c
  1967  006C66  2A5B               	incf	_i+1,f,c
  1968  006C68                     l1255:
  1969  006C68  5005               	movf	sendIntArray@size,w,c
  1970  006C6A  5C5A               	subwf	_i,w,c
  1971  006C6C  5006               	movf	sendIntArray@size+1,w,c
  1972  006C6E  585B               	subwfb	_i+1,w,c
  1973  006C70  B0D8               	btfsc	status,0,c
  1974  006C72  0012               	return	
  1975  006C74  D7EB               	goto	l1251
  1976  006C76                     __end_of_sendIntArray:
  1977                           	opt stack 0
  1978                           tblptru	equ	0xFF8
  1979                           postinc0	equ	0xFEE
  1980                           wreg	equ	0xFE8
  1981                           indf2	equ	0xFDF
  1982                           postinc2	equ	0xFDE
  1983                           postdec2	equ	0xFDD
  1984                           fsr2h	equ	0xFDA
  1985                           fsr2l	equ	0xFD9
  1986                           status	equ	0xFD8
  1987                           
  1988 ;; *************** function _sendChar *****************
  1989 ;; Defined at:
  1990 ;;		line 146 in file "main pic18.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  character       1    wreg     unsigned char 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  character       1    1[COMRAM] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;		None               void
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2004 ;;      Params:         0       0       0       0       0       0       0
  2005 ;;      Locals:         1       0       0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0
  2007 ;;      Totals:         1       0       0       0       0       0       0
  2008 ;;Total ram usage:        1 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    1
  2011 ;; This function calls:
  2012 ;;		_Write1USART
  2013 ;; This function is called by:
  2014 ;;		_sendIntArray
  2015 ;;		_sendCharArray
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text2
  2020  006BD2                     __ptext2:
  2021                           	opt stack 0
  2022  006BD2                     _sendChar:
  2023                           	opt stack 28
  2024                           
  2025                           ;incstack = 0
  2026                           ;sendChar@character stored from wreg
  2027  006BD2  6E02               	movwf	sendChar@character,c
  2028  006BD4                     l94:
  2029  006BD4  A2AC               	btfss	4012,1,c	;volatile
  2030  006BD6  D7FE               	goto	l94
  2031                           
  2032                           ;main pic18.c: 148: Write1USART(character);
  2033  006BD8  5002               	movf	sendChar@character,w,c
  2034  006BDA  ECF0  F035         	call	_Write1USART
  2035  006BDE  0012               	return	
  2036  006BE0                     __end_of_sendChar:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           indf2	equ	0xFDF
  2042                           postinc2	equ	0xFDE
  2043                           postdec2	equ	0xFDD
  2044                           fsr2h	equ	0xFDA
  2045                           fsr2l	equ	0xFD9
  2046                           status	equ	0xFD8
  2047                           
  2048 ;; *************** function _Write1USART *****************
  2049 ;; Defined at:
  2050 ;;		line 14 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/USART/u1write.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  data            1    wreg     unsigned char 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  data            1    0[COMRAM] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;		None               void
  2057 ;; Registers used:
  2058 ;;		wreg
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2064 ;;      Params:         0       0       0       0       0       0       0
  2065 ;;      Locals:         1       0       0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0
  2067 ;;      Totals:         1       0       0       0       0       0       0
  2068 ;;Total ram usage:        1 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_sendChar
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text3
  2078  006BE0                     __ptext3:
  2079                           	opt stack 0
  2080  006BE0                     _Write1USART:
  2081                           	opt stack 28
  2082                           
  2083                           ;incstack = 0
  2084                           ;Write1USART@data stored from wreg
  2085  006BE0  6E01               	movwf	Write1USART@data,c
  2086  006BE2  ACAC               	btfss	4012,6,c	;volatile
  2087  006BE4  D003               	goto	l1081
  2088  006BE6  90AC               	bcf	4012,0,c	;volatile
  2089  006BE8  B25C               	btfsc	_USART1_Status,1,c
  2090  006BEA  80AC               	bsf	4012,0,c	;volatile
  2091  006BEC                     l1081:
  2092  006BEC  C001  FFAD         	movff	Write1USART@data,4013	;volatile
  2093  006BF0  0012               	return	
  2094  006BF2                     __end_of_Write1USART:
  2095                           	opt stack 0
  2096                           tblptru	equ	0xFF8
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           indf2	equ	0xFDF
  2100                           postinc2	equ	0xFDE
  2101                           postdec2	equ	0xFDD
  2102                           fsr2h	equ	0xFDA
  2103                           fsr2l	equ	0xFD9
  2104                           status	equ	0xFD8
  2105                           
  2106 ;; *************** function _fix_fft *****************
  2107 ;; Defined at:
  2108 ;;		line 155 in file "fft.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  fr              2   12[COMRAM] PTR short 
  2111 ;;		 -> realNumbers(128), 
  2112 ;;  fi              2   14[COMRAM] PTR short 
  2113 ;;		 -> imaginaryNumbers(128), 
  2114 ;;  m               2   16[COMRAM] short 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  c               4   72[COMRAM] long 
  2117 ;;  b               2   54[COMRAM] short 
  2118 ;;  j               4   68[COMRAM] long 
  2119 ;;  l               4   64[COMRAM] long 
  2120 ;;  mr              4   60[COMRAM] long 
  2121 ;;  i               4   56[COMRAM] long 
  2122 ;;  n               4   46[COMRAM] long 
  2123 ;;  istep           4   34[COMRAM] long 
  2124 ;;  nn              4   30[COMRAM] long 
  2125 ;;  k               4   26[COMRAM] long 
  2126 ;;  ti              2   52[COMRAM] short 
  2127 ;;  tr              2   50[COMRAM] short 
  2128 ;;  wi              2   44[COMRAM] short 
  2129 ;;  wr              2   42[COMRAM] short 
  2130 ;;  qi              2   40[COMRAM] short 
  2131 ;;  qr              2   38[COMRAM] short 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2141 ;;      Params:         6       0       0       0       0       0       0
  2142 ;;      Locals:        50       0       0       0       0       0       0
  2143 ;;      Temps:          8       0       0       0       0       0       0
  2144 ;;      Totals:        64       0       0       0       0       0       0
  2145 ;;Total ram usage:       64 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    1
  2148 ;; This function calls:
  2149 ;;		___lmul
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text4
  2156  007272                     __ptext4:
  2157                           	opt stack 0
  2158  007272                     _fix_fft:
  2159                           	opt stack 29
  2160                           
  2161                           ;fft.c: 157: long int mr = 0, nn, i, j, l, k, istep, n;
  2162                           
  2163                           ;incstack = 0
  2164  007272  0E00               	movlw	0
  2165  007274  6E3D               	movwf	fix_fft@mr,c
  2166  007276  0E00               	movlw	0
  2167  007278  6E3E               	movwf	fix_fft@mr+1,c
  2168  00727A  0E00               	movlw	0
  2169  00727C  6E3F               	movwf	fix_fft@mr+2,c
  2170  00727E  0E00               	movlw	0
  2171  007280  6E40               	movwf	fix_fft@mr+3,c
  2172                           
  2173                           ;fft.c: 158: short qr, qi, tr, ti, wr, wi;
  2174                           ;fft.c: 160: n = 1 << m;
  2175  007282  C011  F013         	movff	fix_fft@m,??_fix_fft
  2176  007286  0E01               	movlw	1
  2177  007288  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2178  00728A  6A15               	clrf	(??_fix_fft+2)& (0+255),c
  2179  00728C  2A13               	incf	??_fix_fft,f,c
  2180  00728E  D003               	goto	u574
  2181  007290                     u575:
  2182  007290  90D8               	bcf	status,0,c
  2183  007292  3614               	rlcf	??_fix_fft+1,f,c
  2184  007294  3615               	rlcf	??_fix_fft+2,f,c
  2185  007296                     u574:
  2186  007296  2E13               	decfsz	??_fix_fft,f,c
  2187  007298  D7FB               	goto	u575
  2188  00729A  C014  F02F         	movff	??_fix_fft+1,fix_fft@n
  2189  00729E  C015  F030         	movff	??_fix_fft+2,fix_fft@n+1
  2190  0072A2  0E00               	movlw	0
  2191  0072A4  BE30               	btfsc	fix_fft@n+1,7,c
  2192  0072A6  0EFF               	movlw	-1
  2193  0072A8  6E31               	movwf	fix_fft@n+2,c
  2194  0072AA  6E32               	movwf	fix_fft@n+3,c
  2195                           
  2196                           ;fft.c: 161: nn = n - 1;
  2197  0072AC  0EFF               	movlw	255
  2198  0072AE  242F               	addwf	fix_fft@n,w,c
  2199  0072B0  6E1F               	movwf	fix_fft@nn,c
  2200  0072B2  0EFF               	movlw	255
  2201  0072B4  2030               	addwfc	fix_fft@n+1,w,c
  2202  0072B6  6E20               	movwf	fix_fft@nn+1,c
  2203  0072B8  0EFF               	movlw	255
  2204  0072BA  2031               	addwfc	fix_fft@n+2,w,c
  2205  0072BC  6E21               	movwf	fix_fft@nn+2,c
  2206  0072BE  0EFF               	movlw	255
  2207  0072C0  2032               	addwfc	fix_fft@n+3,w,c
  2208  0072C2  6E22               	movwf	fix_fft@nn+3,c
  2209                           
  2210                           ;fft.c: 167: for (m=1; m<=nn; ++m)
  2211  0072C4  0E00               	movlw	0
  2212  0072C6  6E12               	movwf	fix_fft@m+1,c
  2213  0072C8  0E01               	movlw	1
  2214  0072CA  6E11               	movwf	fix_fft@m,c
  2215  0072CC  D0C4               	goto	l1179
  2216  0072CE                     l109:
  2217                           
  2218                           ;fft.c: 168: {
  2219                           ;fft.c: 169: l = n;
  2220  0072CE  C02F  F041         	movff	fix_fft@n,fix_fft@l
  2221  0072D2  C030  F042         	movff	fix_fft@n+1,fix_fft@l+1
  2222  0072D6  C031  F043         	movff	fix_fft@n+2,fix_fft@l+2
  2223  0072DA  C032  F044         	movff	fix_fft@n+3,fix_fft@l+3
  2224  0072DE                     l1161:
  2225                           
  2226                           ;fft.c: 171: {
  2227                           ;fft.c: 172: l >>= 1;
  2228  0072DE  3444               	rlcf	fix_fft@l+3,w,c
  2229  0072E0  3244               	rrcf	fix_fft@l+3,f,c
  2230  0072E2  3243               	rrcf	fix_fft@l+2,f,c
  2231  0072E4  3242               	rrcf	fix_fft@l+1,f,c
  2232  0072E6  3241               	rrcf	fix_fft@l,f,c
  2233                           
  2234                           ;fft.c: 173: } while (mr+l > nn);
  2235  0072E8  5041               	movf	fix_fft@l,w,c
  2236  0072EA  243D               	addwf	fix_fft@mr,w,c
  2237  0072EC  6E13               	movwf	??_fix_fft& (0+255),c
  2238  0072EE  5042               	movf	fix_fft@l+1,w,c
  2239  0072F0  203E               	addwfc	fix_fft@mr+1,w,c
  2240  0072F2  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2241  0072F4  5043               	movf	fix_fft@l+2,w,c
  2242  0072F6  203F               	addwfc	fix_fft@mr+2,w,c
  2243  0072F8  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2244  0072FA  5044               	movf	fix_fft@l+3,w,c
  2245  0072FC  2040               	addwfc	fix_fft@mr+3,w,c
  2246  0072FE  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2247  007300  5022               	movf	fix_fft@nn+3,w,c
  2248  007302  0A80               	xorlw	128
  2249  007304  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2250  007306  5013               	movf	??_fix_fft,w,c
  2251  007308  5C1F               	subwf	fix_fft@nn,w,c
  2252  00730A  5014               	movf	??_fix_fft+1,w,c
  2253  00730C  5820               	subwfb	fix_fft@nn+1,w,c
  2254  00730E  5015               	movf	??_fix_fft+2,w,c
  2255  007310  5821               	subwfb	fix_fft@nn+2,w,c
  2256  007312  5016               	movf	??_fix_fft+3,w,c
  2257  007314  0A80               	xorlw	128
  2258  007316  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2259  007318  A0D8               	btfss	status,0,c
  2260  00731A  D7E1               	goto	l1161
  2261                           
  2262                           ;fft.c: 175: mr = (mr & (l-1)) + l;
  2263  00731C  0EFF               	movlw	255
  2264  00731E  2441               	addwf	fix_fft@l,w,c
  2265  007320  6E13               	movwf	??_fix_fft& (0+255),c
  2266  007322  0EFF               	movlw	255
  2267  007324  2042               	addwfc	fix_fft@l+1,w,c
  2268  007326  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2269  007328  0EFF               	movlw	255
  2270  00732A  2043               	addwfc	fix_fft@l+2,w,c
  2271  00732C  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2272  00732E  0EFF               	movlw	255
  2273  007330  2044               	addwfc	fix_fft@l+3,w,c
  2274  007332  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2275  007334  503D               	movf	fix_fft@mr,w,c
  2276  007336  1413               	andwf	??_fix_fft,w,c
  2277  007338  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2278  00733A  503E               	movf	fix_fft@mr+1,w,c
  2279  00733C  1414               	andwf	??_fix_fft+1,w,c
  2280  00733E  6E18               	movwf	(??_fix_fft+5)& (0+255),c
  2281  007340  503F               	movf	fix_fft@mr+2,w,c
  2282  007342  1415               	andwf	??_fix_fft+2,w,c
  2283  007344  6E19               	movwf	(??_fix_fft+6)& (0+255),c
  2284  007346  5040               	movf	fix_fft@mr+3,w,c
  2285  007348  1416               	andwf	??_fix_fft+3,w,c
  2286  00734A  6E1A               	movwf	(??_fix_fft+7)& (0+255),c
  2287  00734C  5041               	movf	fix_fft@l,w,c
  2288  00734E  2417               	addwf	??_fix_fft+4,w,c
  2289  007350  6E3D               	movwf	fix_fft@mr,c
  2290  007352  5042               	movf	fix_fft@l+1,w,c
  2291  007354  2018               	addwfc	??_fix_fft+5,w,c
  2292  007356  6E3E               	movwf	fix_fft@mr+1,c
  2293  007358  5043               	movf	fix_fft@l+2,w,c
  2294  00735A  2019               	addwfc	??_fix_fft+6,w,c
  2295  00735C  6E3F               	movwf	fix_fft@mr+2,c
  2296  00735E  5044               	movf	fix_fft@l+3,w,c
  2297  007360  201A               	addwfc	??_fix_fft+7,w,c
  2298  007362  6E40               	movwf	fix_fft@mr+3,c
  2299                           
  2300                           ;fft.c: 176: if (mr <= m) continue;
  2301  007364  C011  F013         	movff	fix_fft@m,??_fix_fft
  2302  007368  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2303  00736C  0E00               	movlw	0
  2304  00736E  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2305  007370  0EFF               	movlw	255
  2306  007372  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2307  007374  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2308  007376  5016               	movf	??_fix_fft+3,w,c
  2309  007378  0A80               	xorlw	128
  2310  00737A  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2311  00737C  503D               	movf	fix_fft@mr,w,c
  2312  00737E  5C13               	subwf	??_fix_fft,w,c
  2313  007380  503E               	movf	fix_fft@mr+1,w,c
  2314  007382  5814               	subwfb	??_fix_fft+1,w,c
  2315  007384  503F               	movf	fix_fft@mr+2,w,c
  2316  007386  5815               	subwfb	??_fix_fft+2,w,c
  2317  007388  5040               	movf	fix_fft@mr+3,w,c
  2318  00738A  0A80               	xorlw	128
  2319  00738C  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2320  00738E  B0D8               	btfsc	status,0,c
  2321  007390  D060               	goto	l1177
  2322                           
  2323                           ;fft.c: 178: tr = fr[m];
  2324  007392  90D8               	bcf	status,0,c
  2325  007394  3411               	rlcf	fix_fft@m,w,c
  2326  007396  6ED9               	movwf	fsr2l,c
  2327  007398  3412               	rlcf	fix_fft@m+1,w,c
  2328  00739A  6EDA               	movwf	fsr2h,c
  2329  00739C  500D               	movf	fix_fft@fr,w,c
  2330  00739E  26D9               	addwf	fsr2l,f,c
  2331  0073A0  500E               	movf	fix_fft@fr+1,w,c
  2332  0073A2  22DA               	addwfc	fsr2h,f,c
  2333  0073A4  CFDE F033          	movff	postinc2,fix_fft@tr
  2334  0073A8  CFDD F034          	movff	postdec2,fix_fft@tr+1
  2335                           
  2336                           ;fft.c: 179: fr[m] = fr[mr];
  2337  0073AC  90D8               	bcf	status,0,c
  2338  0073AE  343D               	rlcf	fix_fft@mr,w,c
  2339  0073B0  6ED9               	movwf	fsr2l,c
  2340  0073B2  343E               	rlcf	fix_fft@mr+1,w,c
  2341  0073B4  6EDA               	movwf	fsr2h,c
  2342  0073B6  500D               	movf	fix_fft@fr,w,c
  2343  0073B8  26D9               	addwf	fsr2l,f,c
  2344  0073BA  500E               	movf	fix_fft@fr+1,w,c
  2345  0073BC  22DA               	addwfc	fsr2h,f,c
  2346  0073BE  90D8               	bcf	status,0,c
  2347  0073C0  3411               	rlcf	fix_fft@m,w,c
  2348  0073C2  6EE1               	movwf	fsr1l,c
  2349  0073C4  3412               	rlcf	fix_fft@m+1,w,c
  2350  0073C6  6EE2               	movwf	fsr1h,c
  2351  0073C8  500D               	movf	fix_fft@fr,w,c
  2352  0073CA  26E1               	addwf	fsr1l,f,c
  2353  0073CC  500E               	movf	fix_fft@fr+1,w,c
  2354  0073CE  22E2               	addwfc	fsr1h,f,c
  2355  0073D0  CFDE FFE6          	movff	postinc2,postinc1
  2356  0073D4  CFDD FFE5          	movff	postdec2,postdec1
  2357                           
  2358                           ;fft.c: 180: fr[mr] = tr;
  2359  0073D8  90D8               	bcf	status,0,c
  2360  0073DA  343D               	rlcf	fix_fft@mr,w,c
  2361  0073DC  6ED9               	movwf	fsr2l,c
  2362  0073DE  343E               	rlcf	fix_fft@mr+1,w,c
  2363  0073E0  6EDA               	movwf	fsr2h,c
  2364  0073E2  500D               	movf	fix_fft@fr,w,c
  2365  0073E4  26D9               	addwf	fsr2l,f,c
  2366  0073E6  500E               	movf	fix_fft@fr+1,w,c
  2367  0073E8  22DA               	addwfc	fsr2h,f,c
  2368  0073EA  C033  FFDE         	movff	fix_fft@tr,postinc2
  2369  0073EE  C034  FFDD         	movff	fix_fft@tr+1,postdec2
  2370                           
  2371                           ;fft.c: 181: ti = fi[m];
  2372  0073F2  90D8               	bcf	status,0,c
  2373  0073F4  3411               	rlcf	fix_fft@m,w,c
  2374  0073F6  6ED9               	movwf	fsr2l,c
  2375  0073F8  3412               	rlcf	fix_fft@m+1,w,c
  2376  0073FA  6EDA               	movwf	fsr2h,c
  2377  0073FC  500F               	movf	fix_fft@fi,w,c
  2378  0073FE  26D9               	addwf	fsr2l,f,c
  2379  007400  5010               	movf	fix_fft@fi+1,w,c
  2380  007402  22DA               	addwfc	fsr2h,f,c
  2381  007404  CFDE F035          	movff	postinc2,fix_fft@ti
  2382  007408  CFDD F036          	movff	postdec2,fix_fft@ti+1
  2383                           
  2384                           ;fft.c: 182: fi[m] = fi[mr];
  2385  00740C  90D8               	bcf	status,0,c
  2386  00740E  343D               	rlcf	fix_fft@mr,w,c
  2387  007410  6ED9               	movwf	fsr2l,c
  2388  007412  343E               	rlcf	fix_fft@mr+1,w,c
  2389  007414  6EDA               	movwf	fsr2h,c
  2390  007416  500F               	movf	fix_fft@fi,w,c
  2391  007418  26D9               	addwf	fsr2l,f,c
  2392  00741A  5010               	movf	fix_fft@fi+1,w,c
  2393  00741C  22DA               	addwfc	fsr2h,f,c
  2394  00741E  90D8               	bcf	status,0,c
  2395  007420  3411               	rlcf	fix_fft@m,w,c
  2396  007422  6EE1               	movwf	fsr1l,c
  2397  007424  3412               	rlcf	fix_fft@m+1,w,c
  2398  007426  6EE2               	movwf	fsr1h,c
  2399  007428  500F               	movf	fix_fft@fi,w,c
  2400  00742A  26E1               	addwf	fsr1l,f,c
  2401  00742C  5010               	movf	fix_fft@fi+1,w,c
  2402  00742E  22E2               	addwfc	fsr1h,f,c
  2403  007430  CFDE FFE6          	movff	postinc2,postinc1
  2404  007434  CFDD FFE5          	movff	postdec2,postdec1
  2405                           
  2406                           ;fft.c: 183: fi[mr] = ti;
  2407  007438  90D8               	bcf	status,0,c
  2408  00743A  343D               	rlcf	fix_fft@mr,w,c
  2409  00743C  6ED9               	movwf	fsr2l,c
  2410  00743E  343E               	rlcf	fix_fft@mr+1,w,c
  2411  007440  6EDA               	movwf	fsr2h,c
  2412  007442  500F               	movf	fix_fft@fi,w,c
  2413  007444  26D9               	addwf	fsr2l,f,c
  2414  007446  5010               	movf	fix_fft@fi+1,w,c
  2415  007448  22DA               	addwfc	fsr2h,f,c
  2416  00744A  C035  FFDE         	movff	fix_fft@ti,postinc2
  2417  00744E  C036  FFDD         	movff	fix_fft@ti+1,postdec2
  2418  007452                     l1177:
  2419  007452  4A11               	infsnz	fix_fft@m,f,c
  2420  007454  2A12               	incf	fix_fft@m+1,f,c
  2421  007456                     l1179:
  2422  007456  C011  F013         	movff	fix_fft@m,??_fix_fft
  2423  00745A  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2424  00745E  0E00               	movlw	0
  2425  007460  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2426  007462  0EFF               	movlw	255
  2427  007464  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2428  007466  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2429  007468  5022               	movf	fix_fft@nn+3,w,c
  2430  00746A  0A80               	xorlw	128
  2431  00746C  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2432  00746E  5013               	movf	??_fix_fft,w,c
  2433  007470  5C1F               	subwf	fix_fft@nn,w,c
  2434  007472  5014               	movf	??_fix_fft+1,w,c
  2435  007474  5820               	subwfb	fix_fft@nn+1,w,c
  2436  007476  5015               	movf	??_fix_fft+2,w,c
  2437  007478  5821               	subwfb	fix_fft@nn+2,w,c
  2438  00747A  5016               	movf	??_fix_fft+3,w,c
  2439  00747C  0A80               	xorlw	128
  2440  00747E  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2441  007480  B0D8               	btfsc	status,0,c
  2442  007482  D725               	goto	l109
  2443                           
  2444                           ;fft.c: 184: }
  2445                           ;fft.c: 186: l = 1;
  2446  007484  0E01               	movlw	1
  2447  007486  6E41               	movwf	fix_fft@l,c
  2448  007488  0E00               	movlw	0
  2449  00748A  6E42               	movwf	fix_fft@l+1,c
  2450  00748C  0E00               	movlw	0
  2451  00748E  6E43               	movwf	fix_fft@l+2,c
  2452  007490  0E00               	movlw	0
  2453  007492  6E44               	movwf	fix_fft@l+3,c
  2454                           
  2455                           ;fft.c: 187: k = 10-1;
  2456  007494  0E09               	movlw	9
  2457  007496  6E1B               	movwf	fix_fft@k,c
  2458  007498  0E00               	movlw	0
  2459  00749A  6E1C               	movwf	fix_fft@k+1,c
  2460  00749C  0E00               	movlw	0
  2461  00749E  6E1D               	movwf	fix_fft@k+2,c
  2462  0074A0  0E00               	movlw	0
  2463  0074A2  6E1E               	movwf	fix_fft@k+3,c
  2464                           
  2465                           ;fft.c: 189: while (l < n)
  2466  0074A4  D29D               	goto	l115
  2467  0074A6                     l1183:
  2468                           
  2469                           ;fft.c: 190: {
  2470                           ;fft.c: 203: long int c;
  2471                           ;fft.c: 204: short b;
  2472                           ;fft.c: 206: istep = l << 1;
  2473  0074A6  90D8               	bcf	status,0,c
  2474  0074A8  3441               	rlcf	fix_fft@l,w,c
  2475  0074AA  6E23               	movwf	fix_fft@istep,c
  2476  0074AC  3442               	rlcf	fix_fft@l+1,w,c
  2477  0074AE  6E24               	movwf	fix_fft@istep+1,c
  2478  0074B0  3443               	rlcf	fix_fft@l+2,w,c
  2479  0074B2  6E25               	movwf	fix_fft@istep+2,c
  2480  0074B4  3444               	rlcf	fix_fft@l+3,w,c
  2481  0074B6  6E26               	movwf	fix_fft@istep+3,c
  2482                           
  2483                           ;fft.c: 207: for (m=0; m<l; ++m)
  2484  0074B8  0E00               	movlw	0
  2485  0074BA  6E12               	movwf	fix_fft@m+1,c
  2486  0074BC  0E00               	movlw	0
  2487  0074BE  6E11               	movwf	fix_fft@m,c
  2488  0074C0  D268               	goto	l1243
  2489  0074C2                     l1187:
  2490                           
  2491                           ;fft.c: 208: {
  2492                           ;fft.c: 209: j = m << k;
  2493  0074C2  C01B  F013         	movff	fix_fft@k,??_fix_fft
  2494  0074C6  C011  F014         	movff	fix_fft@m,??_fix_fft+1
  2495  0074CA  C012  F015         	movff	fix_fft@m+1,??_fix_fft+2
  2496  0074CE  2A13               	incf	??_fix_fft,f,c
  2497  0074D0  D003               	goto	u614
  2498  0074D2                     u615:
  2499  0074D2  90D8               	bcf	status,0,c
  2500  0074D4  3614               	rlcf	??_fix_fft+1,f,c
  2501  0074D6  3615               	rlcf	??_fix_fft+2,f,c
  2502  0074D8                     u614:
  2503  0074D8  2E13               	decfsz	??_fix_fft,f,c
  2504  0074DA  D7FB               	goto	u615
  2505  0074DC  C014  F045         	movff	??_fix_fft+1,fix_fft@j
  2506  0074E0  C015  F046         	movff	??_fix_fft+2,fix_fft@j+1
  2507  0074E4  0E00               	movlw	0
  2508  0074E6  BE46               	btfsc	fix_fft@j+1,7,c
  2509  0074E8  0EFF               	movlw	-1
  2510  0074EA  6E47               	movwf	fix_fft@j+2,c
  2511  0074EC  6E48               	movwf	fix_fft@j+3,c
  2512                           
  2513                           ;fft.c: 211: wr = Sinewave[j+1024/4];
  2514  0074EE  0E00               	movlw	0
  2515  0074F0  6E13               	movwf	??_fix_fft& (0+255),c
  2516  0074F2  0E02               	movlw	2
  2517  0074F4  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2518  0074F6  C045  F015         	movff	fix_fft@j,??_fix_fft+2
  2519  0074FA  C046  F016         	movff	fix_fft@j+1,??_fix_fft+3
  2520  0074FE  90D8               	bcf	status,0,c
  2521  007500  3615               	rlcf	??_fix_fft+2,f,c
  2522  007502  3616               	rlcf	??_fix_fft+3,f,c
  2523  007504  5013               	movf	??_fix_fft,w,c
  2524  007506  2615               	addwf	??_fix_fft+2,f,c
  2525  007508  5014               	movf	??_fix_fft+1,w,c
  2526  00750A  2216               	addwfc	??_fix_fft+3,f,c
  2527  00750C  0EFF               	movlw	low _Sinewave
  2528  00750E  2415               	addwf	??_fix_fft+2,w,c
  2529  007510  6EF6               	movwf	tblptrl,c
  2530  007512  0E79               	movlw	high _Sinewave
  2531  007514  2016               	addwfc	??_fix_fft+3,w,c
  2532  007516  6EF7               	movwf	tblptrh,c
  2533  007518                     	if	0	;There are less than 3 active tblptr bytes
  2534  007518                     	endif
  2535  007518  0009               	tblrd		*+
  2536  00751A  CFF5 F02B          	movff	tablat,fix_fft@wr
  2537  00751E  000A               	tblrd		*-
  2538  007520  CFF5 F02C          	movff	tablat,fix_fft@wr+1
  2539                           
  2540                           ;fft.c: 212: wi = -Sinewave[j];
  2541  007524  C045  F013         	movff	fix_fft@j,??_fix_fft
  2542  007528  C046  F014         	movff	fix_fft@j+1,??_fix_fft+1
  2543  00752C  90D8               	bcf	status,0,c
  2544  00752E  3613               	rlcf	??_fix_fft,f,c
  2545  007530  3614               	rlcf	??_fix_fft+1,f,c
  2546  007532  0EFF               	movlw	low _Sinewave
  2547  007534  2413               	addwf	??_fix_fft,w,c
  2548  007536  6EF6               	movwf	tblptrl,c
  2549  007538  0E79               	movlw	high _Sinewave
  2550  00753A  2014               	addwfc	??_fix_fft+1,w,c
  2551  00753C  6EF7               	movwf	tblptrh,c
  2552  00753E                     	if	0	;There are less than 3 active tblptr bytes
  2553  00753E                     	endif
  2554  00753E  0009               	tblrd		*+
  2555  007540  CFF5 F015          	movff	tablat,??_fix_fft+2
  2556  007544  0009               	tblrd		*+
  2557  007546  CFF5 F016          	movff	tablat,??_fix_fft+3
  2558  00754A  1E15               	comf	??_fix_fft+2,f,c
  2559  00754C  1E16               	comf	??_fix_fft+3,f,c
  2560  00754E  4A15               	infsnz	??_fix_fft+2,f,c
  2561  007550  2A16               	incf	??_fix_fft+3,f,c
  2562  007552  C015  F02D         	movff	??_fix_fft+2,fix_fft@wi
  2563  007556  C016  F02E         	movff	??_fix_fft+3,fix_fft@wi+1
  2564                           
  2565                           ;fft.c: 214: wr >>= 1;
  2566  00755A  342C               	rlcf	fix_fft@wr+1,w,c
  2567  00755C  322C               	rrcf	fix_fft@wr+1,f,c
  2568  00755E  322B               	rrcf	fix_fft@wr,f,c
  2569                           
  2570                           ;fft.c: 215: wi >>= 1;
  2571  007560  342E               	rlcf	fix_fft@wi+1,w,c
  2572  007562  322E               	rrcf	fix_fft@wi+1,f,c
  2573  007564  322D               	rrcf	fix_fft@wi,f,c
  2574                           
  2575                           ;fft.c: 217: for (i=m; i<n; i+=istep)
  2576  007566  C011  F039         	movff	fix_fft@m,fix_fft@i
  2577  00756A  C012  F03A         	movff	fix_fft@m+1,fix_fft@i+1
  2578  00756E  0E00               	movlw	0
  2579  007570  BE3A               	btfsc	fix_fft@i+1,7,c
  2580  007572  0EFF               	movlw	-1
  2581  007574  6E3B               	movwf	fix_fft@i+2,c
  2582  007576  6E3C               	movwf	fix_fft@i+3,c
  2583  007578  D1FC               	goto	l1239
  2584  00757A                     l1195:
  2585                           
  2586                           ;fft.c: 218: {
  2587                           ;fft.c: 219: j = i + l;
  2588  00757A  5041               	movf	fix_fft@l,w,c
  2589  00757C  2439               	addwf	fix_fft@i,w,c
  2590  00757E  6E45               	movwf	fix_fft@j,c
  2591  007580  5042               	movf	fix_fft@l+1,w,c
  2592  007582  203A               	addwfc	fix_fft@i+1,w,c
  2593  007584  6E46               	movwf	fix_fft@j+1,c
  2594  007586  5043               	movf	fix_fft@l+2,w,c
  2595  007588  203B               	addwfc	fix_fft@i+2,w,c
  2596  00758A  6E47               	movwf	fix_fft@j+2,c
  2597  00758C  5044               	movf	fix_fft@l+3,w,c
  2598  00758E  203C               	addwfc	fix_fft@i+3,w,c
  2599  007590  6E48               	movwf	fix_fft@j+3,c
  2600                           
  2601                           ;fft.c: 227: c = ((long int)wr * (long int)fr[j]);
  2602  007592  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2603  007596  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2604  00759A  0E00               	movlw	0
  2605  00759C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2606  00759E  0EFF               	movlw	-1
  2607  0075A0  6E03               	movwf	___lmul@multiplier+2,c
  2608  0075A2  6E04               	movwf	___lmul@multiplier+3,c
  2609  0075A4  90D8               	bcf	status,0,c
  2610  0075A6  3445               	rlcf	fix_fft@j,w,c
  2611  0075A8  6ED9               	movwf	fsr2l,c
  2612  0075AA  3446               	rlcf	fix_fft@j+1,w,c
  2613  0075AC  6EDA               	movwf	fsr2h,c
  2614  0075AE  500D               	movf	fix_fft@fr,w,c
  2615  0075B0  26D9               	addwf	fsr2l,f,c
  2616  0075B2  500E               	movf	fix_fft@fr+1,w,c
  2617  0075B4  22DA               	addwfc	fsr2h,f,c
  2618  0075B6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2619  0075BA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2620  0075BE  0E00               	movlw	0
  2621  0075C0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2622  0075C2  0EFF               	movlw	-1
  2623  0075C4  6E07               	movwf	___lmul@multiplicand+2,c
  2624  0075C6  6E08               	movwf	___lmul@multiplicand+3,c
  2625  0075C8  EC62  F036         	call	___lmul	;wreg free
  2626  0075CC  C001  F049         	movff	?___lmul,fix_fft@c
  2627  0075D0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2628  0075D4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2629  0075D8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2630                           
  2631                           ;fft.c: 228: c = c >> 14;
  2632  0075DC  0E0E               	movlw	14
  2633  0075DE  6E13               	movwf	??_fix_fft& (0+255),c
  2634  0075E0  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2635  0075E4  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2636  0075E8  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2637  0075EC  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2638  0075F0                     u625:
  2639  0075F0  6613               	tstfsz	??_fix_fft,c
  2640  0075F2  D001               	goto	u626
  2641  0075F4  D007               	goto	u627
  2642  0075F6                     u626:
  2643  0075F6  3417               	rlcf	??_fix_fft+4,w,c
  2644  0075F8  3217               	rrcf	??_fix_fft+4,f,c
  2645  0075FA  3216               	rrcf	??_fix_fft+3,f,c
  2646  0075FC  3215               	rrcf	??_fix_fft+2,f,c
  2647  0075FE  3214               	rrcf	??_fix_fft+1,f,c
  2648  007600  2E13               	decfsz	??_fix_fft,f,c
  2649  007602  D7F6               	goto	u625
  2650  007604                     u627:
  2651  007604  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2652  007608  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2653  00760C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2654  007610  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2655                           
  2656                           ;fft.c: 229: b = c & 0x01;
  2657  007614  0E01               	movlw	1
  2658  007616  1449               	andwf	fix_fft@c,w,c
  2659  007618  6E37               	movwf	fix_fft@b,c
  2660  00761A  6A38               	clrf	fix_fft@b+1,c
  2661                           
  2662                           ;fft.c: 230: tr = (c >> 1) + b;
  2663  00761C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2664  007620  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2665  007624  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2666  007628  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2667  00762C  3416               	rlcf	??_fix_fft+3,w,c
  2668  00762E  3216               	rrcf	??_fix_fft+3,f,c
  2669  007630  3215               	rrcf	??_fix_fft+2,f,c
  2670  007632  3214               	rrcf	??_fix_fft+1,f,c
  2671  007634  3213               	rrcf	??_fix_fft,f,c
  2672  007636  5037               	movf	fix_fft@b,w,c
  2673  007638  2413               	addwf	??_fix_fft,w,c
  2674  00763A  6E33               	movwf	fix_fft@tr,c
  2675  00763C  5038               	movf	fix_fft@b+1,w,c
  2676  00763E  2014               	addwfc	??_fix_fft+1,w,c
  2677  007640  6E34               	movwf	fix_fft@tr+1,c
  2678                           
  2679                           ;fft.c: 232: c = ((long int)wi * (long int)fi[j]);
  2680  007642  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2681  007646  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2682  00764A  0E00               	movlw	0
  2683  00764C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2684  00764E  0EFF               	movlw	-1
  2685  007650  6E03               	movwf	___lmul@multiplier+2,c
  2686  007652  6E04               	movwf	___lmul@multiplier+3,c
  2687  007654  90D8               	bcf	status,0,c
  2688  007656  3445               	rlcf	fix_fft@j,w,c
  2689  007658  6ED9               	movwf	fsr2l,c
  2690  00765A  3446               	rlcf	fix_fft@j+1,w,c
  2691  00765C  6EDA               	movwf	fsr2h,c
  2692  00765E  500F               	movf	fix_fft@fi,w,c
  2693  007660  26D9               	addwf	fsr2l,f,c
  2694  007662  5010               	movf	fix_fft@fi+1,w,c
  2695  007664  22DA               	addwfc	fsr2h,f,c
  2696  007666  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2697  00766A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2698  00766E  0E00               	movlw	0
  2699  007670  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2700  007672  0EFF               	movlw	-1
  2701  007674  6E07               	movwf	___lmul@multiplicand+2,c
  2702  007676  6E08               	movwf	___lmul@multiplicand+3,c
  2703  007678  EC62  F036         	call	___lmul	;wreg free
  2704  00767C  C001  F049         	movff	?___lmul,fix_fft@c
  2705  007680  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2706  007684  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2707  007688  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2708                           
  2709                           ;fft.c: 233: c = c >> 14;
  2710  00768C  0E0E               	movlw	14
  2711  00768E  6E13               	movwf	??_fix_fft& (0+255),c
  2712  007690  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2713  007694  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2714  007698  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2715  00769C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2716  0076A0                     u635:
  2717  0076A0  6613               	tstfsz	??_fix_fft,c
  2718  0076A2  D001               	goto	u636
  2719  0076A4  D007               	goto	u637
  2720  0076A6                     u636:
  2721  0076A6  3417               	rlcf	??_fix_fft+4,w,c
  2722  0076A8  3217               	rrcf	??_fix_fft+4,f,c
  2723  0076AA  3216               	rrcf	??_fix_fft+3,f,c
  2724  0076AC  3215               	rrcf	??_fix_fft+2,f,c
  2725  0076AE  3214               	rrcf	??_fix_fft+1,f,c
  2726  0076B0  2E13               	decfsz	??_fix_fft,f,c
  2727  0076B2  D7F6               	goto	u635
  2728  0076B4                     u637:
  2729  0076B4  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2730  0076B8  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2731  0076BC  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2732  0076C0  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2733                           
  2734                           ;fft.c: 234: b = c & 0x01;
  2735  0076C4  0E01               	movlw	1
  2736  0076C6  1449               	andwf	fix_fft@c,w,c
  2737  0076C8  6E37               	movwf	fix_fft@b,c
  2738  0076CA  6A38               	clrf	fix_fft@b+1,c
  2739                           
  2740                           ;fft.c: 235: tr = tr - ((c >> 1) + b);
  2741  0076CC  C049  F013         	movff	fix_fft@c,??_fix_fft
  2742  0076D0  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2743  0076D4  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2744  0076D8  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2745  0076DC  3416               	rlcf	??_fix_fft+3,w,c
  2746  0076DE  3216               	rrcf	??_fix_fft+3,f,c
  2747  0076E0  3215               	rrcf	??_fix_fft+2,f,c
  2748  0076E2  3214               	rrcf	??_fix_fft+1,f,c
  2749  0076E4  3213               	rrcf	??_fix_fft,f,c
  2750  0076E6  5037               	movf	fix_fft@b,w,c
  2751  0076E8  2613               	addwf	??_fix_fft,f,c
  2752  0076EA  5038               	movf	fix_fft@b+1,w,c
  2753  0076EC  2214               	addwfc	??_fix_fft+1,f,c
  2754  0076EE  1E13               	comf	??_fix_fft,f,c
  2755  0076F0  1E14               	comf	??_fix_fft+1,f,c
  2756  0076F2  4A13               	infsnz	??_fix_fft,f,c
  2757  0076F4  2A14               	incf	??_fix_fft+1,f,c
  2758  0076F6  5033               	movf	fix_fft@tr,w,c
  2759  0076F8  2413               	addwf	??_fix_fft,w,c
  2760  0076FA  6E33               	movwf	fix_fft@tr,c
  2761  0076FC  5034               	movf	fix_fft@tr+1,w,c
  2762  0076FE  2014               	addwfc	??_fix_fft+1,w,c
  2763  007700  6E34               	movwf	fix_fft@tr+1,c
  2764                           
  2765                           ;fft.c: 238: c = ((long int)wr * (long int)fi[j]);
  2766  007702  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2767  007706  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2768  00770A  0E00               	movlw	0
  2769  00770C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2770  00770E  0EFF               	movlw	-1
  2771  007710  6E03               	movwf	___lmul@multiplier+2,c
  2772  007712  6E04               	movwf	___lmul@multiplier+3,c
  2773  007714  90D8               	bcf	status,0,c
  2774  007716  3445               	rlcf	fix_fft@j,w,c
  2775  007718  6ED9               	movwf	fsr2l,c
  2776  00771A  3446               	rlcf	fix_fft@j+1,w,c
  2777  00771C  6EDA               	movwf	fsr2h,c
  2778  00771E  500F               	movf	fix_fft@fi,w,c
  2779  007720  26D9               	addwf	fsr2l,f,c
  2780  007722  5010               	movf	fix_fft@fi+1,w,c
  2781  007724  22DA               	addwfc	fsr2h,f,c
  2782  007726  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2783  00772A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2784  00772E  0E00               	movlw	0
  2785  007730  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2786  007732  0EFF               	movlw	-1
  2787  007734  6E07               	movwf	___lmul@multiplicand+2,c
  2788  007736  6E08               	movwf	___lmul@multiplicand+3,c
  2789  007738  EC62  F036         	call	___lmul	;wreg free
  2790  00773C  C001  F049         	movff	?___lmul,fix_fft@c
  2791  007740  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2792  007744  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2793  007748  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2794                           
  2795                           ;fft.c: 239: c = c >> 14;
  2796  00774C  0E0E               	movlw	14
  2797  00774E  6E13               	movwf	??_fix_fft& (0+255),c
  2798  007750  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2799  007754  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2800  007758  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2801  00775C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2802  007760                     u645:
  2803  007760  6613               	tstfsz	??_fix_fft,c
  2804  007762  D001               	goto	u646
  2805  007764  D007               	goto	u647
  2806  007766                     u646:
  2807  007766  3417               	rlcf	??_fix_fft+4,w,c
  2808  007768  3217               	rrcf	??_fix_fft+4,f,c
  2809  00776A  3216               	rrcf	??_fix_fft+3,f,c
  2810  00776C  3215               	rrcf	??_fix_fft+2,f,c
  2811  00776E  3214               	rrcf	??_fix_fft+1,f,c
  2812  007770  2E13               	decfsz	??_fix_fft,f,c
  2813  007772  D7F6               	goto	u645
  2814  007774                     u647:
  2815  007774  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2816  007778  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2817  00777C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2818  007780  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2819                           
  2820                           ;fft.c: 240: b = c & 0x01;
  2821  007784  0E01               	movlw	1
  2822  007786  1449               	andwf	fix_fft@c,w,c
  2823  007788  6E37               	movwf	fix_fft@b,c
  2824  00778A  6A38               	clrf	fix_fft@b+1,c
  2825                           
  2826                           ;fft.c: 241: ti = (c >> 1) + b;
  2827  00778C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2828  007790  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2829  007794  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2830  007798  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2831  00779C  3416               	rlcf	??_fix_fft+3,w,c
  2832  00779E  3216               	rrcf	??_fix_fft+3,f,c
  2833  0077A0  3215               	rrcf	??_fix_fft+2,f,c
  2834  0077A2  3214               	rrcf	??_fix_fft+1,f,c
  2835  0077A4  3213               	rrcf	??_fix_fft,f,c
  2836  0077A6  5037               	movf	fix_fft@b,w,c
  2837  0077A8  2413               	addwf	??_fix_fft,w,c
  2838  0077AA  6E35               	movwf	fix_fft@ti,c
  2839  0077AC  5038               	movf	fix_fft@b+1,w,c
  2840  0077AE  2014               	addwfc	??_fix_fft+1,w,c
  2841  0077B0  6E36               	movwf	fix_fft@ti+1,c
  2842                           
  2843                           ;fft.c: 243: c = ((long int)wi * (long int)fr[j]);
  2844  0077B2  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2845  0077B6  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2846  0077BA  0E00               	movlw	0
  2847  0077BC  BE02               	btfsc	___lmul@multiplier+1,7,c
  2848  0077BE  0EFF               	movlw	-1
  2849  0077C0  6E03               	movwf	___lmul@multiplier+2,c
  2850  0077C2  6E04               	movwf	___lmul@multiplier+3,c
  2851  0077C4  90D8               	bcf	status,0,c
  2852  0077C6  3445               	rlcf	fix_fft@j,w,c
  2853  0077C8  6ED9               	movwf	fsr2l,c
  2854  0077CA  3446               	rlcf	fix_fft@j+1,w,c
  2855  0077CC  6EDA               	movwf	fsr2h,c
  2856  0077CE  500D               	movf	fix_fft@fr,w,c
  2857  0077D0  26D9               	addwf	fsr2l,f,c
  2858  0077D2  500E               	movf	fix_fft@fr+1,w,c
  2859  0077D4  22DA               	addwfc	fsr2h,f,c
  2860  0077D6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2861  0077DA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2862  0077DE  0E00               	movlw	0
  2863  0077E0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2864  0077E2  0EFF               	movlw	-1
  2865  0077E4  6E07               	movwf	___lmul@multiplicand+2,c
  2866  0077E6  6E08               	movwf	___lmul@multiplicand+3,c
  2867  0077E8  EC62  F036         	call	___lmul	;wreg free
  2868  0077EC  C001  F049         	movff	?___lmul,fix_fft@c
  2869  0077F0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2870  0077F4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2871  0077F8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2872                           
  2873                           ;fft.c: 244: c = c >> 14;
  2874  0077FC  0E0E               	movlw	14
  2875  0077FE  6E13               	movwf	??_fix_fft& (0+255),c
  2876  007800  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2877  007804  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2878  007808  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2879  00780C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2880  007810                     u655:
  2881  007810  6613               	tstfsz	??_fix_fft,c
  2882  007812  D001               	goto	u656
  2883  007814  D007               	goto	u657
  2884  007816                     u656:
  2885  007816  3417               	rlcf	??_fix_fft+4,w,c
  2886  007818  3217               	rrcf	??_fix_fft+4,f,c
  2887  00781A  3216               	rrcf	??_fix_fft+3,f,c
  2888  00781C  3215               	rrcf	??_fix_fft+2,f,c
  2889  00781E  3214               	rrcf	??_fix_fft+1,f,c
  2890  007820  2E13               	decfsz	??_fix_fft,f,c
  2891  007822  D7F6               	goto	u655
  2892  007824                     u657:
  2893  007824  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2894  007828  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2895  00782C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2896  007830  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2897                           
  2898                           ;fft.c: 245: b = c & 0x01;
  2899  007834  0E01               	movlw	1
  2900  007836  1449               	andwf	fix_fft@c,w,c
  2901  007838  6E37               	movwf	fix_fft@b,c
  2902  00783A  6A38               	clrf	fix_fft@b+1,c
  2903                           
  2904                           ;fft.c: 246: ti = ti + ((c >> 1) + b);
  2905  00783C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2906  007840  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2907  007844  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2908  007848  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2909  00784C  3416               	rlcf	??_fix_fft+3,w,c
  2910  00784E  3216               	rrcf	??_fix_fft+3,f,c
  2911  007850  3215               	rrcf	??_fix_fft+2,f,c
  2912  007852  3214               	rrcf	??_fix_fft+1,f,c
  2913  007854  3213               	rrcf	??_fix_fft,f,c
  2914  007856  5037               	movf	fix_fft@b,w,c
  2915  007858  2613               	addwf	??_fix_fft,f,c
  2916  00785A  5038               	movf	fix_fft@b+1,w,c
  2917  00785C  2214               	addwfc	??_fix_fft+1,f,c
  2918  00785E  5035               	movf	fix_fft@ti,w,c
  2919  007860  2413               	addwf	??_fix_fft,w,c
  2920  007862  6E35               	movwf	fix_fft@ti,c
  2921  007864  5036               	movf	fix_fft@ti+1,w,c
  2922  007866  2014               	addwfc	??_fix_fft+1,w,c
  2923  007868  6E36               	movwf	fix_fft@ti+1,c
  2924                           
  2925                           ;fft.c: 248: qr = fr[i];
  2926  00786A  90D8               	bcf	status,0,c
  2927  00786C  3439               	rlcf	fix_fft@i,w,c
  2928  00786E  6ED9               	movwf	fsr2l,c
  2929  007870  343A               	rlcf	fix_fft@i+1,w,c
  2930  007872  6EDA               	movwf	fsr2h,c
  2931  007874  500D               	movf	fix_fft@fr,w,c
  2932  007876  26D9               	addwf	fsr2l,f,c
  2933  007878  500E               	movf	fix_fft@fr+1,w,c
  2934  00787A  22DA               	addwfc	fsr2h,f,c
  2935  00787C  CFDE F027          	movff	postinc2,fix_fft@qr
  2936  007880  CFDD F028          	movff	postdec2,fix_fft@qr+1
  2937                           
  2938                           ;fft.c: 249: qi = fi[i];
  2939  007884  90D8               	bcf	status,0,c
  2940  007886  3439               	rlcf	fix_fft@i,w,c
  2941  007888  6ED9               	movwf	fsr2l,c
  2942  00788A  343A               	rlcf	fix_fft@i+1,w,c
  2943  00788C  6EDA               	movwf	fsr2h,c
  2944  00788E  500F               	movf	fix_fft@fi,w,c
  2945  007890  26D9               	addwf	fsr2l,f,c
  2946  007892  5010               	movf	fix_fft@fi+1,w,c
  2947  007894  22DA               	addwfc	fsr2h,f,c
  2948  007896  CFDE F029          	movff	postinc2,fix_fft@qi
  2949  00789A  CFDD F02A          	movff	postdec2,fix_fft@qi+1
  2950                           
  2951                           ;fft.c: 250: qr >>= 1;
  2952  00789E  3428               	rlcf	fix_fft@qr+1,w,c
  2953  0078A0  3228               	rrcf	fix_fft@qr+1,f,c
  2954  0078A2  3227               	rrcf	fix_fft@qr,f,c
  2955                           
  2956                           ;fft.c: 251: qi >>= 1;
  2957  0078A4  342A               	rlcf	fix_fft@qi+1,w,c
  2958  0078A6  322A               	rrcf	fix_fft@qi+1,f,c
  2959  0078A8  3229               	rrcf	fix_fft@qi,f,c
  2960                           
  2961                           ;fft.c: 253: fr[j] = qr - tr;
  2962  0078AA  C033  F013         	movff	fix_fft@tr,??_fix_fft
  2963  0078AE  C034  F014         	movff	fix_fft@tr+1,??_fix_fft+1
  2964  0078B2  1E13               	comf	??_fix_fft,f,c
  2965  0078B4  1E14               	comf	??_fix_fft+1,f,c
  2966  0078B6  4A13               	infsnz	??_fix_fft,f,c
  2967  0078B8  2A14               	incf	??_fix_fft+1,f,c
  2968  0078BA  5027               	movf	fix_fft@qr,w,c
  2969  0078BC  2613               	addwf	??_fix_fft,f,c
  2970  0078BE  5028               	movf	fix_fft@qr+1,w,c
  2971  0078C0  2214               	addwfc	??_fix_fft+1,f,c
  2972  0078C2  90D8               	bcf	status,0,c
  2973  0078C4  3445               	rlcf	fix_fft@j,w,c
  2974  0078C6  6ED9               	movwf	fsr2l,c
  2975  0078C8  3446               	rlcf	fix_fft@j+1,w,c
  2976  0078CA  6EDA               	movwf	fsr2h,c
  2977  0078CC  500D               	movf	fix_fft@fr,w,c
  2978  0078CE  26D9               	addwf	fsr2l,f,c
  2979  0078D0  500E               	movf	fix_fft@fr+1,w,c
  2980  0078D2  22DA               	addwfc	fsr2h,f,c
  2981  0078D4  C013  FFDE         	movff	??_fix_fft,postinc2
  2982  0078D8  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2983                           
  2984                           ;fft.c: 254: fi[j] = qi - ti;
  2985  0078DC  C035  F013         	movff	fix_fft@ti,??_fix_fft
  2986  0078E0  C036  F014         	movff	fix_fft@ti+1,??_fix_fft+1
  2987  0078E4  1E13               	comf	??_fix_fft,f,c
  2988  0078E6  1E14               	comf	??_fix_fft+1,f,c
  2989  0078E8  4A13               	infsnz	??_fix_fft,f,c
  2990  0078EA  2A14               	incf	??_fix_fft+1,f,c
  2991  0078EC  5029               	movf	fix_fft@qi,w,c
  2992  0078EE  2613               	addwf	??_fix_fft,f,c
  2993  0078F0  502A               	movf	fix_fft@qi+1,w,c
  2994  0078F2  2214               	addwfc	??_fix_fft+1,f,c
  2995  0078F4  90D8               	bcf	status,0,c
  2996  0078F6  3445               	rlcf	fix_fft@j,w,c
  2997  0078F8  6ED9               	movwf	fsr2l,c
  2998  0078FA  3446               	rlcf	fix_fft@j+1,w,c
  2999  0078FC  6EDA               	movwf	fsr2h,c
  3000  0078FE  500F               	movf	fix_fft@fi,w,c
  3001  007900  26D9               	addwf	fsr2l,f,c
  3002  007902  5010               	movf	fix_fft@fi+1,w,c
  3003  007904  22DA               	addwfc	fsr2h,f,c
  3004  007906  C013  FFDE         	movff	??_fix_fft,postinc2
  3005  00790A  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3006                           
  3007                           ;fft.c: 255: fr[i] = qr + tr;
  3008  00790E  C027  F013         	movff	fix_fft@qr,??_fix_fft
  3009  007912  C028  F014         	movff	fix_fft@qr+1,??_fix_fft+1
  3010  007916  5033               	movf	fix_fft@tr,w,c
  3011  007918  2613               	addwf	??_fix_fft,f,c
  3012  00791A  5034               	movf	fix_fft@tr+1,w,c
  3013  00791C  2214               	addwfc	??_fix_fft+1,f,c
  3014  00791E  90D8               	bcf	status,0,c
  3015  007920  3439               	rlcf	fix_fft@i,w,c
  3016  007922  6ED9               	movwf	fsr2l,c
  3017  007924  343A               	rlcf	fix_fft@i+1,w,c
  3018  007926  6EDA               	movwf	fsr2h,c
  3019  007928  500D               	movf	fix_fft@fr,w,c
  3020  00792A  26D9               	addwf	fsr2l,f,c
  3021  00792C  500E               	movf	fix_fft@fr+1,w,c
  3022  00792E  22DA               	addwfc	fsr2h,f,c
  3023  007930  C013  FFDE         	movff	??_fix_fft,postinc2
  3024  007934  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3025                           
  3026                           ;fft.c: 256: fi[i] = qi + ti;
  3027  007938  C029  F013         	movff	fix_fft@qi,??_fix_fft
  3028  00793C  C02A  F014         	movff	fix_fft@qi+1,??_fix_fft+1
  3029  007940  5035               	movf	fix_fft@ti,w,c
  3030  007942  2613               	addwf	??_fix_fft,f,c
  3031  007944  5036               	movf	fix_fft@ti+1,w,c
  3032  007946  2214               	addwfc	??_fix_fft+1,f,c
  3033  007948  90D8               	bcf	status,0,c
  3034  00794A  3439               	rlcf	fix_fft@i,w,c
  3035  00794C  6ED9               	movwf	fsr2l,c
  3036  00794E  343A               	rlcf	fix_fft@i+1,w,c
  3037  007950  6EDA               	movwf	fsr2h,c
  3038  007952  500F               	movf	fix_fft@fi,w,c
  3039  007954  26D9               	addwf	fsr2l,f,c
  3040  007956  5010               	movf	fix_fft@fi+1,w,c
  3041  007958  22DA               	addwfc	fsr2h,f,c
  3042  00795A  C013  FFDE         	movff	??_fix_fft,postinc2
  3043  00795E  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3044  007962  5023               	movf	fix_fft@istep,w,c
  3045  007964  2639               	addwf	fix_fft@i,f,c
  3046  007966  5024               	movf	fix_fft@istep+1,w,c
  3047  007968  223A               	addwfc	fix_fft@i+1,f,c
  3048  00796A  5025               	movf	fix_fft@istep+2,w,c
  3049  00796C  223B               	addwfc	fix_fft@i+2,f,c
  3050  00796E  5026               	movf	fix_fft@istep+3,w,c
  3051  007970  223C               	addwfc	fix_fft@i+3,f,c
  3052  007972                     l1239:
  3053  007972  503C               	movf	fix_fft@i+3,w,c
  3054  007974  0A80               	xorlw	128
  3055  007976  6E13               	movwf	??_fix_fft& (0+255),c
  3056  007978  502F               	movf	fix_fft@n,w,c
  3057  00797A  5C39               	subwf	fix_fft@i,w,c
  3058  00797C  5030               	movf	fix_fft@n+1,w,c
  3059  00797E  583A               	subwfb	fix_fft@i+1,w,c
  3060  007980  5031               	movf	fix_fft@n+2,w,c
  3061  007982  583B               	subwfb	fix_fft@i+2,w,c
  3062  007984  5032               	movf	fix_fft@n+3,w,c
  3063  007986  0A80               	xorlw	128
  3064  007988  5813               	subwfb	??_fix_fft& (0+255),w,c
  3065  00798A  A0D8               	btfss	status,0,c
  3066  00798C  D5F6               	goto	l1195
  3067  00798E  4A11               	infsnz	fix_fft@m,f,c
  3068  007990  2A12               	incf	fix_fft@m+1,f,c
  3069  007992                     l1243:
  3070  007992  C011  F013         	movff	fix_fft@m,??_fix_fft
  3071  007996  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  3072  00799A  0E00               	movlw	0
  3073  00799C  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  3074  00799E  0EFF               	movlw	255
  3075  0079A0  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  3076  0079A2  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  3077  0079A4  5016               	movf	??_fix_fft+3,w,c
  3078  0079A6  0A80               	xorlw	128
  3079  0079A8  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  3080  0079AA  5041               	movf	fix_fft@l,w,c
  3081  0079AC  5C13               	subwf	??_fix_fft,w,c
  3082  0079AE  5042               	movf	fix_fft@l+1,w,c
  3083  0079B0  5814               	subwfb	??_fix_fft+1,w,c
  3084  0079B2  5043               	movf	fix_fft@l+2,w,c
  3085  0079B4  5815               	subwfb	??_fix_fft+2,w,c
  3086  0079B6  5044               	movf	fix_fft@l+3,w,c
  3087  0079B8  0A80               	xorlw	128
  3088  0079BA  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  3089  0079BC  A0D8               	btfss	status,0,c
  3090  0079BE  D581               	goto	l1187
  3091                           
  3092                           ;fft.c: 257: }
  3093                           ;fft.c: 258: }
  3094                           ;fft.c: 260: --k;
  3095  0079C0  0EFF               	movlw	255
  3096  0079C2  261B               	addwf	fix_fft@k,f,c
  3097  0079C4  0EFF               	movlw	255
  3098  0079C6  221C               	addwfc	fix_fft@k+1,f,c
  3099  0079C8  0EFF               	movlw	255
  3100  0079CA  221D               	addwfc	fix_fft@k+2,f,c
  3101  0079CC  0EFF               	movlw	255
  3102  0079CE  221E               	addwfc	fix_fft@k+3,f,c
  3103                           
  3104                           ;fft.c: 261: l = istep;
  3105  0079D0  C023  F041         	movff	fix_fft@istep,fix_fft@l
  3106  0079D4  C024  F042         	movff	fix_fft@istep+1,fix_fft@l+1
  3107  0079D8  C025  F043         	movff	fix_fft@istep+2,fix_fft@l+2
  3108  0079DC  C026  F044         	movff	fix_fft@istep+3,fix_fft@l+3
  3109  0079E0                     l115:
  3110  0079E0  5044               	movf	fix_fft@l+3,w,c
  3111  0079E2  0A80               	xorlw	128
  3112  0079E4  6E13               	movwf	??_fix_fft& (0+255),c
  3113  0079E6  502F               	movf	fix_fft@n,w,c
  3114  0079E8  5C41               	subwf	fix_fft@l,w,c
  3115  0079EA  5030               	movf	fix_fft@n+1,w,c
  3116  0079EC  5842               	subwfb	fix_fft@l+1,w,c
  3117  0079EE  5031               	movf	fix_fft@n+2,w,c
  3118  0079F0  5843               	subwfb	fix_fft@l+2,w,c
  3119  0079F2  5032               	movf	fix_fft@n+3,w,c
  3120  0079F4  0A80               	xorlw	128
  3121  0079F6  5813               	subwfb	??_fix_fft& (0+255),w,c
  3122  0079F8  B0D8               	btfsc	status,0,c
  3123  0079FA  0012               	return	
  3124  0079FC  D554               	goto	l1183
  3125  0079FE                     __end_of_fix_fft:
  3126                           	opt stack 0
  3127                           tblptru	equ	0xFF8
  3128                           tblptrh	equ	0xFF7
  3129                           tblptrl	equ	0xFF6
  3130                           tablat	equ	0xFF5
  3131                           postinc0	equ	0xFEE
  3132                           wreg	equ	0xFE8
  3133                           postinc1	equ	0xFE6
  3134                           postdec1	equ	0xFE5
  3135                           fsr1h	equ	0xFE2
  3136                           fsr1l	equ	0xFE1
  3137                           indf2	equ	0xFDF
  3138                           postinc2	equ	0xFDE
  3139                           postdec2	equ	0xFDD
  3140                           fsr2h	equ	0xFDA
  3141                           fsr2l	equ	0xFD9
  3142                           status	equ	0xFD8
  3143                           
  3144 ;; *************** function ___lmul *****************
  3145 ;; Defined at:
  3146 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul32.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  multiplier      4    0[COMRAM] unsigned long 
  3149 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  product         4    8[COMRAM] unsigned long 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  4    0[COMRAM] unsigned long 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3161 ;;      Params:         8       0       0       0       0       0       0
  3162 ;;      Locals:         4       0       0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0
  3164 ;;      Totals:        12       0       0       0       0       0       0
  3165 ;;Total ram usage:       12 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_fix_fft
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text5
  3175  006CC4                     __ptext5:
  3176                           	opt stack 0
  3177  006CC4                     ___lmul:
  3178                           	opt stack 29
  3179                           
  3180                           ;incstack = 0
  3181  006CC4  0E00               	movlw	0
  3182  006CC6  6E09               	movwf	___lmul@product,c
  3183  006CC8  0E00               	movlw	0
  3184  006CCA  6E0A               	movwf	___lmul@product+1,c
  3185  006CCC  0E00               	movlw	0
  3186  006CCE  6E0B               	movwf	___lmul@product+2,c
  3187  006CD0  0E00               	movlw	0
  3188  006CD2  6E0C               	movwf	___lmul@product+3,c
  3189  006CD4                     l1089:
  3190  006CD4  A001               	btfss	___lmul@multiplier,0,c
  3191  006CD6  D008               	goto	l1093
  3192  006CD8  5005               	movf	___lmul@multiplicand,w,c
  3193  006CDA  2609               	addwf	___lmul@product,f,c
  3194  006CDC  5006               	movf	___lmul@multiplicand+1,w,c
  3195  006CDE  220A               	addwfc	___lmul@product+1,f,c
  3196  006CE0  5007               	movf	___lmul@multiplicand+2,w,c
  3197  006CE2  220B               	addwfc	___lmul@product+2,f,c
  3198  006CE4  5008               	movf	___lmul@multiplicand+3,w,c
  3199  006CE6  220C               	addwfc	___lmul@product+3,f,c
  3200  006CE8                     l1093:
  3201  006CE8  90D8               	bcf	status,0,c
  3202  006CEA  3605               	rlcf	___lmul@multiplicand,f,c
  3203  006CEC  3606               	rlcf	___lmul@multiplicand+1,f,c
  3204  006CEE  3607               	rlcf	___lmul@multiplicand+2,f,c
  3205  006CF0  3608               	rlcf	___lmul@multiplicand+3,f,c
  3206  006CF2  90D8               	bcf	status,0,c
  3207  006CF4  3204               	rrcf	___lmul@multiplier+3,f,c
  3208  006CF6  3203               	rrcf	___lmul@multiplier+2,f,c
  3209  006CF8  3202               	rrcf	___lmul@multiplier+1,f,c
  3210  006CFA  3201               	rrcf	___lmul@multiplier,f,c
  3211  006CFC  5004               	movf	___lmul@multiplier+3,w,c
  3212  006CFE  1001               	iorwf	___lmul@multiplier,w,c
  3213  006D00  1002               	iorwf	___lmul@multiplier+1,w,c
  3214  006D02  1003               	iorwf	___lmul@multiplier+2,w,c
  3215  006D04  A4D8               	btfss	status,2,c
  3216  006D06  D7E6               	goto	l1089
  3217  006D08  C009  F001         	movff	___lmul@product,?___lmul
  3218  006D0C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3219  006D10  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3220  006D14  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3221  006D18  0012               	return	
  3222  006D1A                     __end_of___lmul:
  3223                           	opt stack 0
  3224                           tblptru	equ	0xFF8
  3225                           tblptrh	equ	0xFF7
  3226                           tblptrl	equ	0xFF6
  3227                           tablat	equ	0xFF5
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           postinc1	equ	0xFE6
  3231                           postdec1	equ	0xFE5
  3232                           fsr1h	equ	0xFE2
  3233                           fsr1l	equ	0xFE1
  3234                           indf2	equ	0xFDF
  3235                           postinc2	equ	0xFDE
  3236                           postdec2	equ	0xFDD
  3237                           fsr2h	equ	0xFDA
  3238                           fsr2l	equ	0xFD9
  3239                           status	equ	0xFD8
  3240                           
  3241 ;; *************** function ___wmul *****************
  3242 ;; Defined at:
  3243 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul16.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  multiplier      2    0[COMRAM] unsigned int 
  3246 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  product         2    4[COMRAM] unsigned int 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  2    0[COMRAM] unsigned int 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0, prodl, prodh
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3258 ;;      Params:         4       0       0       0       0       0       0
  3259 ;;      Locals:         2       0       0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0
  3261 ;;      Totals:         6       0       0       0       0       0       0
  3262 ;;Total ram usage:        6 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_main
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text6
  3272  006BF2                     __ptext6:
  3273                           	opt stack 0
  3274  006BF2                     ___wmul:
  3275                           	opt stack 30
  3276                           
  3277                           ;incstack = 0
  3278  006BF2  5001               	movf	___wmul@multiplier,w,c
  3279  006BF4  0203               	mulwf	___wmul@multiplicand,c
  3280  006BF6  CFF3 F005          	movff	prodl,___wmul@product
  3281  006BFA  CFF4 F006          	movff	prodh,___wmul@product+1
  3282  006BFE  5001               	movf	___wmul@multiplier,w,c
  3283  006C00  0204               	mulwf	___wmul@multiplicand+1,c
  3284  006C02  50F3               	movf	prodl,w,c
  3285  006C04  2606               	addwf	___wmul@product+1,f,c
  3286  006C06  5002               	movf	___wmul@multiplier+1,w,c
  3287  006C08  0203               	mulwf	___wmul@multiplicand,c
  3288  006C0A  50F3               	movf	prodl,w,c
  3289  006C0C  2606               	addwf	___wmul@product+1,f,c
  3290  006C0E  C005  F001         	movff	___wmul@product,?___wmul
  3291  006C12  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3292  006C16  0012               	return	
  3293  006C18                     __end_of___wmul:
  3294                           	opt stack 0
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           prodh	equ	0xFF4
  3300                           prodl	equ	0xFF3
  3301                           postinc0	equ	0xFEE
  3302                           wreg	equ	0xFE8
  3303                           postinc1	equ	0xFE6
  3304                           postdec1	equ	0xFE5
  3305                           fsr1h	equ	0xFE2
  3306                           fsr1l	equ	0xFE1
  3307                           indf2	equ	0xFDF
  3308                           postinc2	equ	0xFDE
  3309                           postdec2	equ	0xFDD
  3310                           fsr2h	equ	0xFDA
  3311                           fsr2l	equ	0xFD9
  3312                           status	equ	0xFD8
  3313                           
  3314 ;; *************** function _OpenADC *****************
  3315 ;; Defined at:
  3316 ;;		line 305 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcopen.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  config          1    wreg     unsigned char 
  3319 ;;  config2         1    0[COMRAM] unsigned char 
  3320 ;;  config3         1    1[COMRAM] unsigned char 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  config          1    4[COMRAM] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;		None               void
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3332 ;;      Params:         2       0       0       0       0       0       0
  3333 ;;      Locals:         1       0       0       0       0       0       0
  3334 ;;      Temps:          2       0       0       0       0       0       0
  3335 ;;      Totals:         5       0       0       0       0       0       0
  3336 ;;Total ram usage:        5 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_main
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text7
  3346  006C76                     __ptext7:
  3347                           	opt stack 0
  3348  006C76                     _OpenADC:
  3349                           	opt stack 30
  3350                           
  3351                           ;incstack = 0
  3352                           ;OpenADC@config stored from wreg
  3353  006C76  6E05               	movwf	OpenADC@config,c
  3354  006C78  0E00               	movlw	0
  3355  006C7A  6EC2               	movwf	4034,c	;volatile
  3356  006C7C  0E00               	movlw	0
  3357  006C7E  6EC1               	movwf	4033,c	;volatile
  3358  006C80  0E00               	movlw	0
  3359  006C82  6EC0               	movwf	4032,c	;volatile
  3360  006C84  5001               	movf	OpenADC@config2,w,c
  3361  006C86  0B7C               	andlw	124
  3362  006C88  6EC2               	movwf	4034,c	;volatile
  3363  006C8A  C002  FFC1         	movff	OpenADC@config3,4033	;volatile
  3364  006C8E  C005  F003         	movff	OpenADC@config,??_OpenADC
  3365  006C92  90D8               	bcf	status,0,c
  3366  006C94  3603               	rlcf	??_OpenADC,f,c
  3367  006C96  90D8               	bcf	status,0,c
  3368  006C98  3603               	rlcf	??_OpenADC,f,c
  3369  006C9A  0E38               	movlw	56
  3370  006C9C  1603               	andwf	??_OpenADC,f,c
  3371  006C9E  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  3372  006CA2  3A04               	swapf	??_OpenADC+1,f,c
  3373  006CA4  0E0F               	movlw	15
  3374  006CA6  1604               	andwf	??_OpenADC+1,f,c
  3375  006CA8  0E07               	movlw	7
  3376  006CAA  1604               	andwf	??_OpenADC+1,f,c
  3377  006CAC  5005               	movf	OpenADC@config,w,c
  3378  006CAE  0B80               	andlw	128
  3379  006CB0  1004               	iorwf	??_OpenADC+1,w,c
  3380  006CB2  1003               	iorwf	??_OpenADC,w,c
  3381  006CB4  6EC0               	movwf	4032,c	;volatile
  3382  006CB6  AE01               	btfss	OpenADC@config2,7,c
  3383  006CB8  D003               	goto	l151
  3384  006CBA  9C9E               	bcf	3998,6,c	;volatile
  3385  006CBC  8C9D               	bsf	3997,6,c	;volatile
  3386  006CBE  8CF2               	bsf	intcon,6,c	;volatile
  3387  006CC0                     l151:
  3388  006CC0  80C2               	bsf	4034,0,c	;volatile
  3389  006CC2  0012               	return	
  3390  006CC4                     __end_of_OpenADC:
  3391                           	opt stack 0
  3392                           tblptru	equ	0xFF8
  3393                           tblptrh	equ	0xFF7
  3394                           tblptrl	equ	0xFF6
  3395                           tablat	equ	0xFF5
  3396                           prodh	equ	0xFF4
  3397                           prodl	equ	0xFF3
  3398                           intcon	equ	0xFF2
  3399                           postinc0	equ	0xFEE
  3400                           wreg	equ	0xFE8
  3401                           postinc1	equ	0xFE6
  3402                           postdec1	equ	0xFE5
  3403                           fsr1h	equ	0xFE2
  3404                           fsr1l	equ	0xFE1
  3405                           indf2	equ	0xFDF
  3406                           postinc2	equ	0xFDE
  3407                           postdec2	equ	0xFDD
  3408                           fsr2h	equ	0xFDA
  3409                           fsr2l	equ	0xFD9
  3410                           status	equ	0xFD8
  3411                           
  3412 ;; *************** function _Open1USART *****************
  3413 ;; Defined at:
  3414 ;;		line 124 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/USART/u1open.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  config          1    wreg     unsigned char 
  3417 ;;  spbrg           2    0[COMRAM] unsigned int 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  config          1    5[COMRAM] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;		None               void
  3422 ;; Registers used:
  3423 ;;		wreg, status,2
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3429 ;;      Params:         2       0       0       0       0       0       0
  3430 ;;      Locals:         1       0       0       0       0       0       0
  3431 ;;      Temps:          3       0       0       0       0       0       0
  3432 ;;      Totals:         6       0       0       0       0       0       0
  3433 ;;Total ram usage:        6 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text8
  3443  006D1A                     __ptext8:
  3444                           	opt stack 0
  3445  006D1A                     _Open1USART:
  3446                           	opt stack 30
  3447                           
  3448                           ;incstack = 0
  3449                           ;Open1USART@config stored from wreg
  3450  006D1A  6E06               	movwf	Open1USART@config,c
  3451  006D1C  0E00               	movlw	0
  3452  006D1E  6EAC               	movwf	4012,c	;volatile
  3453  006D20  0E00               	movlw	0
  3454  006D22  6EAB               	movwf	4011,c	;volatile
  3455  006D24  B006               	btfsc	Open1USART@config,0,c
  3456  006D26  88AC               	bsf	4012,4,c	;volatile
  3457  006D28  A206               	btfss	Open1USART@config,1,c
  3458  006D2A  D002               	goto	l1119
  3459  006D2C  8CAC               	bsf	4012,6,c	;volatile
  3460  006D2E  8CAB               	bsf	4011,6,c	;volatile
  3461  006D30                     l1119:
  3462  006D30  B406               	btfsc	Open1USART@config,2,c
  3463  006D32  8EAC               	bsf	4012,7,c	;volatile
  3464  006D34  A606               	btfss	Open1USART@config,3,c
  3465  006D36  D002               	goto	l172
  3466  006D38  88AB               	bsf	4011,4,c	;volatile
  3467  006D3A  D001               	goto	l1127
  3468  006D3C                     l172:
  3469  006D3C  8AAB               	bsf	4011,5,c	;volatile
  3470  006D3E                     l1127:
  3471  006D3E  B806               	btfsc	Open1USART@config,4,c
  3472  006D40  84AC               	bsf	4012,2,c	;volatile
  3473  006D42  BA06               	btfsc	Open1USART@config,5,c
  3474  006D44  86AB               	bsf	4011,3,c	;volatile
  3475  006D46  AC06               	btfss	Open1USART@config,6,c
  3476  006D48  D002               	goto	l176
  3477  006D4A  8A9D               	bsf	3997,5,c	;volatile
  3478  006D4C  D001               	goto	l1139
  3479  006D4E                     l176:
  3480  006D4E  9A9D               	bcf	3997,5,c	;volatile
  3481  006D50                     l1139:
  3482  006D50  AE06               	btfss	Open1USART@config,7,c
  3483  006D52  D002               	goto	l178
  3484  006D54  889D               	bsf	3997,4,c	;volatile
  3485  006D56  D001               	goto	l179
  3486  006D58                     l178:
  3487  006D58  989D               	bcf	3997,4,c	;volatile
  3488  006D5A                     l179:
  3489  006D5A  C001  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3490  006D5E  C002  F003         	movff	Open1USART@spbrg+1,??_Open1USART
  3491  006D62  C003  F004         	movff	??_Open1USART,??_Open1USART+1
  3492  006D66  6A05               	clrf	(??_Open1USART+2)& (0+255),c
  3493  006D68  5004               	movf	??_Open1USART+1,w,c
  3494  006D6A  6EB0               	movwf	4016,c	;volatile
  3495  006D6C  8AAC               	bsf	4012,5,c	;volatile
  3496  006D6E  8EAB               	bsf	4011,7,c	;volatile
  3497  006D70  0012               	return	
  3498  006D72                     __end_of_Open1USART:
  3499                           	opt stack 0
  3500                           tblptru	equ	0xFF8
  3501                           tblptrh	equ	0xFF7
  3502                           tblptrl	equ	0xFF6
  3503                           tablat	equ	0xFF5
  3504                           prodh	equ	0xFF4
  3505                           prodl	equ	0xFF3
  3506                           intcon	equ	0xFF2
  3507                           postinc0	equ	0xFEE
  3508                           wreg	equ	0xFE8
  3509                           postinc1	equ	0xFE6
  3510                           postdec1	equ	0xFE5
  3511                           fsr1h	equ	0xFE2
  3512                           fsr1l	equ	0xFE1
  3513                           indf2	equ	0xFDF
  3514                           postinc2	equ	0xFDE
  3515                           postdec2	equ	0xFDD
  3516                           fsr2h	equ	0xFDA
  3517                           fsr2l	equ	0xFD9
  3518                           status	equ	0xFD8
  3519                           
  3520 ;; *************** function _ConvertADC *****************
  3521 ;; Defined at:
  3522 ;;		line 22 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcconv.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;		None               void
  3529 ;; Registers used:
  3530 ;;		None
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3536 ;;      Params:         0       0       0       0       0       0       0
  3537 ;;      Locals:         0       0       0       0       0       0       0
  3538 ;;      Temps:          0       0       0       0       0       0       0
  3539 ;;      Totals:         0       0       0       0       0       0       0
  3540 ;;Total ram usage:        0 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_main
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text9
  3550  006BC2                     __ptext9:
  3551                           	opt stack 0
  3552  006BC2                     _ConvertADC:
  3553                           	opt stack 30
  3554                           
  3555                           ;incstack = 0
  3556  006BC2  82C2               	bsf	4034,1,c	;volatile
  3557  006BC4  0012               	return	
  3558  006BC6                     __end_of_ConvertADC:
  3559                           	opt stack 0
  3560                           tblptru	equ	0xFF8
  3561                           tblptrh	equ	0xFF7
  3562                           tblptrl	equ	0xFF6
  3563                           tablat	equ	0xFF5
  3564                           prodh	equ	0xFF4
  3565                           prodl	equ	0xFF3
  3566                           intcon	equ	0xFF2
  3567                           postinc0	equ	0xFEE
  3568                           wreg	equ	0xFE8
  3569                           postinc1	equ	0xFE6
  3570                           postdec1	equ	0xFE5
  3571                           fsr1h	equ	0xFE2
  3572                           fsr1l	equ	0xFE1
  3573                           indf2	equ	0xFDF
  3574                           postinc2	equ	0xFDE
  3575                           postdec2	equ	0xFDD
  3576                           fsr2h	equ	0xFDA
  3577                           fsr2l	equ	0xFD9
  3578                           status	equ	0xFD8
  3579                           
  3580 ;; *************** function _BusyADC *****************
  3581 ;; Defined at:
  3582 ;;		line 26 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcbusy.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      unsigned char 
  3589 ;; Registers used:
  3590 ;;		wreg
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3596 ;;      Params:         0       0       0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text10
  3610  006BC6                     __ptext10:
  3611                           	opt stack 0
  3612  006BC6                     _BusyADC:
  3613                           	opt stack 30
  3614                           
  3615                           ;incstack = 0
  3616  006BC6  A2C2               	btfss	4034,1,c	;volatile
  3617  006BC8  D002               	goto	u560
  3618  006BCA  0E01               	movlw	1
  3619  006BCC  0012               	return	
  3620  006BCE                     u560:
  3621  006BCE  0E00               	movlw	0
  3622  006BD0  0012               	return	
  3623  006BD2                     __end_of_BusyADC:
  3624                           	opt stack 0
  3625                           tblptru	equ	0xFF8
  3626                           tblptrh	equ	0xFF7
  3627                           tblptrl	equ	0xFF6
  3628                           tablat	equ	0xFF5
  3629                           prodh	equ	0xFF4
  3630                           prodl	equ	0xFF3
  3631                           intcon	equ	0xFF2
  3632                           postinc0	equ	0xFEE
  3633                           wreg	equ	0xFE8
  3634                           postinc1	equ	0xFE6
  3635                           postdec1	equ	0xFE5
  3636                           fsr1h	equ	0xFE2
  3637                           fsr1l	equ	0xFE1
  3638                           indf2	equ	0xFDF
  3639                           postinc2	equ	0xFDE
  3640                           postdec2	equ	0xFDD
  3641                           fsr2h	equ	0xFDA
  3642                           fsr2l	equ	0xFD9
  3643                           status	equ	0xFD8
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           intcon	equ	0xFF2
  3651                           postinc0	equ	0xFEE
  3652                           wreg	equ	0xFE8
  3653                           postinc1	equ	0xFE6
  3654                           postdec1	equ	0xFE5
  3655                           fsr1h	equ	0xFE2
  3656                           fsr1l	equ	0xFE1
  3657                           indf2	equ	0xFDF
  3658                           postinc2	equ	0xFDE
  3659                           postdec2	equ	0xFDD
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8
  3663                           
  3664                           	psect	rparam
  3665  0000                     tblptru	equ	0xFF8
  3666                           tblptrh	equ	0xFF7
  3667                           tblptrl	equ	0xFF6
  3668                           tablat	equ	0xFF5
  3669                           prodh	equ	0xFF4
  3670                           prodl	equ	0xFF3
  3671                           intcon	equ	0xFF2
  3672                           postinc0	equ	0xFEE
  3673                           wreg	equ	0xFE8
  3674                           postinc1	equ	0xFE6
  3675                           postdec1	equ	0xFE5
  3676                           fsr1h	equ	0xFE2
  3677                           fsr1l	equ	0xFE1
  3678                           indf2	equ	0xFDF
  3679                           postinc2	equ	0xFDE
  3680                           postdec2	equ	0xFDD
  3681                           fsr2h	equ	0xFDA
  3682                           fsr2l	equ	0xFD9
  3683                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1536
    Data        0
    BSS         265
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      93
    BANK0           160     14     151
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fix_fft@fi	PTR short  size(2) Largest target is 128
		 -> imaginaryNumbers(BANK1[128]), 

    fix_fft@fr	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 

    sendIntArray@array	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_fix_fft
    _sendIntArray->_sendChar
    _sendChar->_Write1USART
    _fix_fft->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    4487
                                             76 COMRAM    13    13      0
                                              0 BANK0     14    14      0
                            _BusyADC
                         _ConvertADC
                         _Open1USART
                            _OpenADC
                             ___wmul
                            _fix_fft
                       _sendIntArray
 ---------------------------------------------------------------------------------
 (1) _sendIntArray                                         4     0      4     194
                                              2 COMRAM     4     0      4
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      44
                                              1 COMRAM     1     1      0
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fix_fft                                             64    58      6    2782
                                             12 COMRAM    64    58      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     444
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     371
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     238
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Open1USART
   _OpenADC
   ___wmul
   _fix_fft
     ___lmul
   _sendIntArray
     _sendChar
       _Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      E      97       4       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5D       1       97.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     174       9        0.0%
DATA                 0      0     174      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Dec  4 17:57:12 2014

                      _i 005A                       l94 6BD4      ___wmul@multiplicand 0003  
                    l115 79E0                      l109 72CE                      l151 6CC0  
                    l172 6D3C                      l176 6D4E                      l178 6D58  
                    l179 6D5A                      u614 74D8                      u615 74D2  
                    u560 6BCE                      u625 75F0                      u626 75F6  
                    u635 76A0                      u627 7604                      u636 76A6  
                    u645 7760                      u637 76B4                      u646 7766  
                    u574 7296                      u655 7810                      u647 7774  
                    u575 7290                      u656 7816                      u657 7824  
                    u755 7038                      u827 6E8E                      u756 703E  
                    u757 704C                      u785 71F4                      u786 71FA  
                    u787 7208                      wreg 000FE8               _TXSTA1bits 000FAC  
           __CFG_LVP$OFF 000000                     l1127 6D3E                     l1119 6D30  
                   l1161 72DE                     l1081 6BEC                     l1305 6E9C  
                   l1139 6D50                     l1243 7992                     l1251 6C4C  
                   l1093 6CE8                     l1325 701C                     l1341 7226  
                   l1239 7972                     l1183 74A6                     l1255 6C68  
                   l1335 71A6                     l1327 705C                     l1089 6CD4  
                   l1177 7452                     l1329 70BA                     l1195 757A  
                   l1187 74C2                     l1179 7456                     l1339 7218  
                   l1347 7258                     l1293 6E0E                     l1285 6DE0  
                   _LATC 000F8B                     _PIE1 000F9D                     _data 0060  
                   _main 6D72                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        __end_of_BusyADC 6BD2          __end_of_OpenADC 6CC4                    ?_main 0001  
                  _TRISC 000F94      ___lmul@multiplicand 0005          __end_of_fix_fft 79FE  
                  _input 005D                    main@i 00EB                    main@k 00F1  
             _ConvertADC 6BC2                    tablat 000FF5                    status 000FD8  
          main@adc_value 00E5           __CFG_PBADEN$ON 000000          __initialization 6C18  
           __end_of_main 7272               _Open1USART 6D1A                   ??_main 004D  
          __activetblptr 000002             fix_fft@istep 0023         __end_of_Sinewave 7FFF  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _ANSELC 000F3A  
         __CFG_WDTEN$OFF 000000                   _RCSTA1 000FAB                   _SPBRG1 000FAF  
              ??_BusyADC 0001                   _TXREG1 000FAD                   _TXSTA1 000FAC  
              ??_OpenADC 0003                   ___lmul 6CC4                   ___wmul 6BF2  
                 clear_0 6C1E                   clear_1 6C2A         __end_of_sendChar 6BE0  
              ??_fix_fft 0013             __mediumconst 79FE                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8              ?_ConvertADC 0001  
             __accesstop 0060  __end_of__initialization 6C38           __pcstackCOMRAM 0001  
            ?_Open1USART 0001            ?_sendIntArray 0003               __pbssBANK0 0060  
             __pbssBANK1 0100          __CFG_PLLCFG$OFF 000000            ??_Write1USART 0001  
                ?___lmul 0001                  ?___wmul 0001           ___lmul@product 0009  
    __size_of_ConvertADC 0004         Open1USART@config 0006           ??_sendIntArray 0007  
      __CFG_PRICLKEN$OFF 000000                  _SPBRGH1 000FB0      __size_of_Open1USART 0058  
                _BusyADC 6BC6                ?_sendChar 0001                  _OpenADC 6C76  
                __Hparam 0000                  __Lparam 0000      __end_of_Write1USART 6BF2  
        __size_of___lmul 0056          __size_of___wmul 0026                  __pcinit 6C18  
                __ramtop 0600                  __ptext0 6D72                  __ptext1 6C42  
                __ptext2 6BD2                  __ptext3 6BE0                  __ptext4 7272  
                __ptext5 6CC4                  __ptext6 6BF2                  __ptext7 6C76  
                __ptext8 6D1A                  __ptext9 6BC2                  _fix_fft 7272  
         OpenADC@config2 0001           OpenADC@config3 0002     end_of_initialization 6C38  
          __Lmediumconst 79FE               ??_sendChar 0002                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE        sendIntArray@array 0003         __CFG_FOSC$INTIO7 000000  
              _TRISAbits 000F92                _TRISCbits 000F94             ??_ConvertADC 0001  
            _Write1USART 6BE0     __end_of_sendIntArray 6C76           __end_of___lmul 6D1A  
         __end_of___wmul 6C18             ??_Open1USART 0003       __end_of_ConvertADC 6BC6  
    start_initialization 6C18       __end_of_Open1USART 6D72         _imaginaryNumbers 0100  
               ??___lmul 0009                 ??___wmul 0005              __pbssCOMRAM 005A  
          __pcstackBANK0 00E5                _baud_rate 00F3                 ?_BusyADC 0001  
              __pnvBANK0 00F3                 ?_OpenADC 0001        __size_of_sendChar 000E  
          __pmediumconst 79FE          Open1USART@spbrg 0001                 ?_fix_fft 000D  
        Write1USART@data 0001    __size_of_sendIntArray 0034           ___wmul@product 0005  
          OpenADC@config 0005                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
       sendIntArray@size 0005               _ADCON0bits 000FC2        ___wmul@multiplier 0001  
              main@place 00ED             _sendIntArray 6C42                fix_fft@fi 000F  
              fix_fft@fr 000D                fix_fft@nn 001F                fix_fft@qi 0029  
              fix_fft@mr 003D                fix_fft@ti 0035                fix_fft@qr 0027  
              fix_fft@wi 002D                fix_fft@tr 0033                fix_fft@wr 002B  
      ___lmul@multiplier 0001             ?_Write1USART 0001         __size_of_BusyADC 000C  
               __Hrparam 0000         __size_of_OpenADC 004E                 __Lrparam 0000  
               _Sinewave 79FF               _ANSELAbits 000F38         __size_of_fix_fft 078C  
               __ptext10 6BC6              _realNumbers 0065            __size_of_main 0500  
               _sendChar 6BD2                 main@root 00E7                 fix_fft@b 0037  
               fix_fft@c 0049                 fix_fft@i 0039                 fix_fft@j 0045  
               fix_fft@k 001B                 fix_fft@l 0041                 fix_fft@m 0011  
               fix_fft@n 002F            _USART1_Status 005C              _OSCTUNEbits 000F9B  
             _INTCONbits 000FF2               _RCSTA1bits 000FAB               _OSCCONbits 000FD3  
      sendChar@character 0002     __size_of_Write1USART 0012  
