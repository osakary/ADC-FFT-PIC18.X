

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Dec 04 14:01:22 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	mediumconst
    29  0079FE                     __pmediumconst:
    30                           	opt stack 0
    31  0079FE  00                 	db	0
    32  0079FF                     _Sinewave:
    33                           	opt stack 0
    34  0079FF  0000               	dw	0
    35  007A01  00C9               	dw	201
    36  007A03  0192               	dw	402
    37  007A05  025B               	dw	603
    38  007A07  0324               	dw	804
    39  007A09  03ED               	dw	1005
    40  007A0B  04B6               	dw	1206
    41  007A0D  057E               	dw	1406
    42  007A0F  0647               	dw	1607
    43  007A11  0710               	dw	1808
    44  007A13  07D9               	dw	2009
    45  007A15  08A1               	dw	2209
    46  007A17  096A               	dw	2410
    47  007A19  0A32               	dw	2610
    48  007A1B  0AFB               	dw	2811
    49  007A1D  0BC3               	dw	3011
    50  007A1F  0C8B               	dw	3211
    51  007A21  0D53               	dw	3411
    52  007A23  0E1B               	dw	3611
    53  007A25  0EE3               	dw	3811
    54  007A27  0FAB               	dw	4011
    55  007A29  1072               	dw	4210
    56  007A2B  1139               	dw	4409
    57  007A2D  1200               	dw	4608
    58  007A2F  12C7               	dw	4807
    59  007A31  138E               	dw	5006
    60  007A33  1455               	dw	5205
    61  007A35  151B               	dw	5403
    62  007A37  15E1               	dw	5601
    63  007A39  16A7               	dw	5799
    64  007A3B  176D               	dw	5997
    65  007A3D  1833               	dw	6195
    66  007A3F  18F8               	dw	6392
    67  007A41  19BD               	dw	6589
    68  007A43  1A82               	dw	6786
    69  007A45  1B46               	dw	6982
    70  007A47  1C0B               	dw	7179
    71  007A49  1CCF               	dw	7375
    72  007A4B  1D93               	dw	7571
    73  007A4D  1E56               	dw	7766
    74  007A4F  1F19               	dw	7961
    75  007A51  1FDC               	dw	8156
    76  007A53  209F               	dw	8351
    77  007A55  2161               	dw	8545
    78  007A57  2223               	dw	8739
    79  007A59  22E4               	dw	8932
    80  007A5B  23A6               	dw	9126
    81  007A5D  2467               	dw	9319
    82  007A5F  2527               	dw	9511
    83  007A61  25E7               	dw	9703
    84  007A63  26A7               	dw	9895
    85  007A65  2767               	dw	10087
    86  007A67  2826               	dw	10278
    87  007A69  28E5               	dw	10469
    88  007A6B  29A3               	dw	10659
    89  007A6D  2A61               	dw	10849
    90  007A6F  2B1E               	dw	11038
    91  007A71  2BDB               	dw	11227
    92  007A73  2C98               	dw	11416
    93  007A75  2D54               	dw	11604
    94  007A77  2E10               	dw	11792
    95  007A79  2ECC               	dw	11980
    96  007A7B  2F86               	dw	12166
    97  007A7D  3041               	dw	12353
    98  007A7F  30FB               	dw	12539
    99  007A81  31B4               	dw	12724
   100  007A83  326D               	dw	12909
   101  007A85  3326               	dw	13094
   102  007A87  33DE               	dw	13278
   103  007A89  3496               	dw	13462
   104  007A8B  354D               	dw	13645
   105  007A8D  3603               	dw	13827
   106  007A8F  36B9               	dw	14009
   107  007A91  376F               	dw	14191
   108  007A93  3824               	dw	14372
   109  007A95  38D8               	dw	14552
   110  007A97  398C               	dw	14732
   111  007A99  3A3F               	dw	14911
   112  007A9B  3AF2               	dw	15090
   113  007A9D  3BA4               	dw	15268
   114  007A9F  3C56               	dw	15446
   115  007AA1  3D07               	dw	15623
   116  007AA3  3DB7               	dw	15799
   117  007AA5  3E67               	dw	15975
   118  007AA7  3F16               	dw	16150
   119  007AA9  3FC5               	dw	16325
   120  007AAB  4073               	dw	16499
   121  007AAD  4120               	dw	16672
   122  007AAF  41CD               	dw	16845
   123  007AB1  4279               	dw	17017
   124  007AB3  4325               	dw	17189
   125  007AB5  43D0               	dw	17360
   126  007AB7  447A               	dw	17530
   127  007AB9  4523               	dw	17699
   128  007ABB  45CC               	dw	17868
   129  007ABD  4674               	dw	18036
   130  007ABF  471C               	dw	18204
   131  007AC1  47C3               	dw	18371
   132  007AC3  4869               	dw	18537
   133  007AC5  490E               	dw	18702
   134  007AC7  49B3               	dw	18867
   135  007AC9  4A57               	dw	19031
   136  007ACB  4AFA               	dw	19194
   137  007ACD  4B9D               	dw	19357
   138  007ACF  4C3F               	dw	19519
   139  007AD1  4CE0               	dw	19680
   140  007AD3  4D80               	dw	19840
   141  007AD5  4E20               	dw	20000
   142  007AD7  4EBF               	dw	20159
   143  007AD9  4F5D               	dw	20317
   144  007ADB  4FFA               	dw	20474
   145  007ADD  5097               	dw	20631
   146  007ADF  5133               	dw	20787
   147  007AE1  51CE               	dw	20942
   148  007AE3  5268               	dw	21096
   149  007AE5  5301               	dw	21249
   150  007AE7  539A               	dw	21402
   151  007AE9  5432               	dw	21554
   152  007AEB  54C9               	dw	21705
   153  007AED  555F               	dw	21855
   154  007AEF  55F4               	dw	22004
   155  007AF1  5689               	dw	22153
   156  007AF3  571D               	dw	22301
   157  007AF5  57B0               	dw	22448
   158  007AF7  5842               	dw	22594
   159  007AF9  58D3               	dw	22739
   160  007AFB  5963               	dw	22883
   161  007AFD  59F3               	dw	23027
   162  007AFF  5A81               	dw	23169
   163  007B01  5B0F               	dw	23311
   164  007B03  5B9C               	dw	23452
   165  007B05  5C28               	dw	23592
   166  007B07  5CB3               	dw	23731
   167  007B09  5D3D               	dw	23869
   168  007B0B  5DC6               	dw	24006
   169  007B0D  5E4F               	dw	24143
   170  007B0F  5ED6               	dw	24278
   171  007B11  5F5D               	dw	24413
   172  007B13  5FE2               	dw	24546
   173  007B15  6067               	dw	24679
   174  007B17  60EB               	dw	24811
   175  007B19  616E               	dw	24942
   176  007B1B  61F0               	dw	25072
   177  007B1D  6271               	dw	25201
   178  007B1F  62F1               	dw	25329
   179  007B21  6370               	dw	25456
   180  007B23  63EE               	dw	25582
   181  007B25  646B               	dw	25707
   182  007B27  64E7               	dw	25831
   183  007B29  6562               	dw	25954
   184  007B2B  65DD               	dw	26077
   185  007B2D  6656               	dw	26198
   186  007B2F  66CE               	dw	26318
   187  007B31  6745               	dw	26437
   188  007B33  67BC               	dw	26556
   189  007B35  6831               	dw	26673
   190  007B37  68A5               	dw	26789
   191  007B39  6919               	dw	26905
   192  007B3B  698B               	dw	27019
   193  007B3D  69FC               	dw	27132
   194  007B3F  6A6C               	dw	27244
   195  007B41  6ADB               	dw	27355
   196  007B43  6B4A               	dw	27466
   197  007B45  6BB7               	dw	27575
   198  007B47  6C23               	dw	27683
   199  007B49  6C8E               	dw	27790
   200  007B4B  6CF8               	dw	27896
   201  007B4D  6D61               	dw	28001
   202  007B4F  6DC9               	dw	28105
   203  007B51  6E30               	dw	28208
   204  007B53  6E95               	dw	28309
   205  007B55  6EFA               	dw	28410
   206  007B57  6F5E               	dw	28510
   207  007B59  6FC0               	dw	28608
   208  007B5B  7022               	dw	28706
   209  007B5D  7082               	dw	28802
   210  007B5F  70E1               	dw	28897
   211  007B61  7140               	dw	28992
   212  007B63  719D               	dw	29085
   213  007B65  71F9               	dw	29177
   214  007B67  7254               	dw	29268
   215  007B69  72AE               	dw	29358
   216  007B6B  7306               	dw	29446
   217  007B6D  735E               	dw	29534
   218  007B6F  73B5               	dw	29621
   219  007B71  740A               	dw	29706
   220  007B73  745E               	dw	29790
   221  007B75  74B1               	dw	29873
   222  007B77  7503               	dw	29955
   223  007B79  7554               	dw	30036
   224  007B7B  75A4               	dw	30116
   225  007B7D  75F3               	dw	30195
   226  007B7F  7640               	dw	30272
   227  007B81  768D               	dw	30349
   228  007B83  76D8               	dw	30424
   229  007B85  7722               	dw	30498
   230  007B87  776B               	dw	30571
   231  007B89  77B3               	dw	30643
   232  007B8B  77F9               	dw	30713
   233  007B8D  783F               	dw	30783
   234  007B8F  7883               	dw	30851
   235  007B91  78C6               	dw	30918
   236  007B93  7908               	dw	30984
   237  007B95  7949               	dw	31049
   238  007B97  7989               	dw	31113
   239  007B99  79C7               	dw	31175
   240  007B9B  7A04               	dw	31236
   241  007B9D  7A41               	dw	31297
   242  007B9F  7A7C               	dw	31356
   243  007BA1  7AB5               	dw	31413
   244  007BA3  7AEE               	dw	31470
   245  007BA5  7B25               	dw	31525
   246  007BA7  7B5C               	dw	31580
   247  007BA9  7B91               	dw	31633
   248  007BAB  7BC4               	dw	31684
   249  007BAD  7BF7               	dw	31735
   250  007BAF  7C29               	dw	31785
   251  007BB1  7C59               	dw	31833
   252  007BB3  7C88               	dw	31880
   253  007BB5  7CB6               	dw	31926
   254  007BB7  7CE2               	dw	31970
   255  007BB9  7D0E               	dw	32014
   256  007BBB  7D38               	dw	32056
   257  007BBD  7D61               	dw	32097
   258  007BBF  7D89               	dw	32137
   259  007BC1  7DB0               	dw	32176
   260  007BC3  7DD5               	dw	32213
   261  007BC5  7DF9               	dw	32249
   262  007BC7  7E1C               	dw	32284
   263  007BC9  7E3E               	dw	32318
   264  007BCB  7E5E               	dw	32350
   265  007BCD  7E7E               	dw	32382
   266  007BCF  7E9C               	dw	32412
   267  007BD1  7EB9               	dw	32441
   268  007BD3  7ED4               	dw	32468
   269  007BD5  7EEF               	dw	32495
   270  007BD7  7F08               	dw	32520
   271  007BD9  7F20               	dw	32544
   272  007BDB  7F37               	dw	32567
   273  007BDD  7F4C               	dw	32588
   274  007BDF  7F61               	dw	32609
   275  007BE1  7F74               	dw	32628
   276  007BE3  7F86               	dw	32646
   277  007BE5  7F96               	dw	32662
   278  007BE7  7FA6               	dw	32678
   279  007BE9  7FB4               	dw	32692
   280  007BEB  7FC1               	dw	32705
   281  007BED  7FCD               	dw	32717
   282  007BEF  7FD7               	dw	32727
   283  007BF1  7FE0               	dw	32736
   284  007BF3  7FE8               	dw	32744
   285  007BF5  7FEF               	dw	32751
   286  007BF7  7FF5               	dw	32757
   287  007BF9  7FF9               	dw	32761
   288  007BFB  7FFC               	dw	32764
   289  007BFD  7FFE               	dw	32766
   290  007BFF  7FFF               	dw	32767
   291  007C01  7FFE               	dw	32766
   292  007C03  7FFC               	dw	32764
   293  007C05  7FF9               	dw	32761
   294  007C07  7FF5               	dw	32757
   295  007C09  7FEF               	dw	32751
   296  007C0B  7FE8               	dw	32744
   297  007C0D  7FE0               	dw	32736
   298  007C0F  7FD7               	dw	32727
   299  007C11  7FCD               	dw	32717
   300  007C13  7FC1               	dw	32705
   301  007C15  7FB4               	dw	32692
   302  007C17  7FA6               	dw	32678
   303  007C19  7F96               	dw	32662
   304  007C1B  7F86               	dw	32646
   305  007C1D  7F74               	dw	32628
   306  007C1F  7F61               	dw	32609
   307  007C21  7F4C               	dw	32588
   308  007C23  7F37               	dw	32567
   309  007C25  7F20               	dw	32544
   310  007C27  7F08               	dw	32520
   311  007C29  7EEF               	dw	32495
   312  007C2B  7ED4               	dw	32468
   313  007C2D  7EB9               	dw	32441
   314  007C2F  7E9C               	dw	32412
   315  007C31  7E7E               	dw	32382
   316  007C33  7E5E               	dw	32350
   317  007C35  7E3E               	dw	32318
   318  007C37  7E1C               	dw	32284
   319  007C39  7DF9               	dw	32249
   320  007C3B  7DD5               	dw	32213
   321  007C3D  7DB0               	dw	32176
   322  007C3F  7D89               	dw	32137
   323  007C41  7D61               	dw	32097
   324  007C43  7D38               	dw	32056
   325  007C45  7D0E               	dw	32014
   326  007C47  7CE2               	dw	31970
   327  007C49  7CB6               	dw	31926
   328  007C4B  7C88               	dw	31880
   329  007C4D  7C59               	dw	31833
   330  007C4F  7C29               	dw	31785
   331  007C51  7BF7               	dw	31735
   332  007C53  7BC4               	dw	31684
   333  007C55  7B91               	dw	31633
   334  007C57  7B5C               	dw	31580
   335  007C59  7B25               	dw	31525
   336  007C5B  7AEE               	dw	31470
   337  007C5D  7AB5               	dw	31413
   338  007C5F  7A7C               	dw	31356
   339  007C61  7A41               	dw	31297
   340  007C63  7A04               	dw	31236
   341  007C65  79C7               	dw	31175
   342  007C67  7989               	dw	31113
   343  007C69  7949               	dw	31049
   344  007C6B  7908               	dw	30984
   345  007C6D  78C6               	dw	30918
   346  007C6F  7883               	dw	30851
   347  007C71  783F               	dw	30783
   348  007C73  77F9               	dw	30713
   349  007C75  77B3               	dw	30643
   350  007C77  776B               	dw	30571
   351  007C79  7722               	dw	30498
   352  007C7B  76D8               	dw	30424
   353  007C7D  768D               	dw	30349
   354  007C7F  7640               	dw	30272
   355  007C81  75F3               	dw	30195
   356  007C83  75A4               	dw	30116
   357  007C85  7554               	dw	30036
   358  007C87  7503               	dw	29955
   359  007C89  74B1               	dw	29873
   360  007C8B  745E               	dw	29790
   361  007C8D  740A               	dw	29706
   362  007C8F  73B5               	dw	29621
   363  007C91  735E               	dw	29534
   364  007C93  7306               	dw	29446
   365  007C95  72AE               	dw	29358
   366  007C97  7254               	dw	29268
   367  007C99  71F9               	dw	29177
   368  007C9B  719D               	dw	29085
   369  007C9D  7140               	dw	28992
   370  007C9F  70E1               	dw	28897
   371  007CA1  7082               	dw	28802
   372  007CA3  7022               	dw	28706
   373  007CA5  6FC0               	dw	28608
   374  007CA7  6F5E               	dw	28510
   375  007CA9  6EFA               	dw	28410
   376  007CAB  6E95               	dw	28309
   377  007CAD  6E30               	dw	28208
   378  007CAF  6DC9               	dw	28105
   379  007CB1  6D61               	dw	28001
   380  007CB3  6CF8               	dw	27896
   381  007CB5  6C8E               	dw	27790
   382  007CB7  6C23               	dw	27683
   383  007CB9  6BB7               	dw	27575
   384  007CBB  6B4A               	dw	27466
   385  007CBD  6ADB               	dw	27355
   386  007CBF  6A6C               	dw	27244
   387  007CC1  69FC               	dw	27132
   388  007CC3  698B               	dw	27019
   389  007CC5  6919               	dw	26905
   390  007CC7  68A5               	dw	26789
   391  007CC9  6831               	dw	26673
   392  007CCB  67BC               	dw	26556
   393  007CCD  6745               	dw	26437
   394  007CCF  66CE               	dw	26318
   395  007CD1  6656               	dw	26198
   396  007CD3  65DD               	dw	26077
   397  007CD5  6562               	dw	25954
   398  007CD7  64E7               	dw	25831
   399  007CD9  646B               	dw	25707
   400  007CDB  63EE               	dw	25582
   401  007CDD  6370               	dw	25456
   402  007CDF  62F1               	dw	25329
   403  007CE1  6271               	dw	25201
   404  007CE3  61F0               	dw	25072
   405  007CE5  616E               	dw	24942
   406  007CE7  60EB               	dw	24811
   407  007CE9  6067               	dw	24679
   408  007CEB  5FE2               	dw	24546
   409  007CED  5F5D               	dw	24413
   410  007CEF  5ED6               	dw	24278
   411  007CF1  5E4F               	dw	24143
   412  007CF3  5DC6               	dw	24006
   413  007CF5  5D3D               	dw	23869
   414  007CF7  5CB3               	dw	23731
   415  007CF9  5C28               	dw	23592
   416  007CFB  5B9C               	dw	23452
   417  007CFD  5B0F               	dw	23311
   418  007CFF  5A81               	dw	23169
   419  007D01  59F3               	dw	23027
   420  007D03  5963               	dw	22883
   421  007D05  58D3               	dw	22739
   422  007D07  5842               	dw	22594
   423  007D09  57B0               	dw	22448
   424  007D0B  571D               	dw	22301
   425  007D0D  5689               	dw	22153
   426  007D0F  55F4               	dw	22004
   427  007D11  555F               	dw	21855
   428  007D13  54C9               	dw	21705
   429  007D15  5432               	dw	21554
   430  007D17  539A               	dw	21402
   431  007D19  5301               	dw	21249
   432  007D1B  5268               	dw	21096
   433  007D1D  51CE               	dw	20942
   434  007D1F  5133               	dw	20787
   435  007D21  5097               	dw	20631
   436  007D23  4FFA               	dw	20474
   437  007D25  4F5D               	dw	20317
   438  007D27  4EBF               	dw	20159
   439  007D29  4E20               	dw	20000
   440  007D2B  4D80               	dw	19840
   441  007D2D  4CE0               	dw	19680
   442  007D2F  4C3F               	dw	19519
   443  007D31  4B9D               	dw	19357
   444  007D33  4AFA               	dw	19194
   445  007D35  4A57               	dw	19031
   446  007D37  49B3               	dw	18867
   447  007D39  490E               	dw	18702
   448  007D3B  4869               	dw	18537
   449  007D3D  47C3               	dw	18371
   450  007D3F  471C               	dw	18204
   451  007D41  4674               	dw	18036
   452  007D43  45CC               	dw	17868
   453  007D45  4523               	dw	17699
   454  007D47  447A               	dw	17530
   455  007D49  43D0               	dw	17360
   456  007D4B  4325               	dw	17189
   457  007D4D  4279               	dw	17017
   458  007D4F  41CD               	dw	16845
   459  007D51  4120               	dw	16672
   460  007D53  4073               	dw	16499
   461  007D55  3FC5               	dw	16325
   462  007D57  3F16               	dw	16150
   463  007D59  3E67               	dw	15975
   464  007D5B  3DB7               	dw	15799
   465  007D5D  3D07               	dw	15623
   466  007D5F  3C56               	dw	15446
   467  007D61  3BA4               	dw	15268
   468  007D63  3AF2               	dw	15090
   469  007D65  3A3F               	dw	14911
   470  007D67  398C               	dw	14732
   471  007D69  38D8               	dw	14552
   472  007D6B  3824               	dw	14372
   473  007D6D  376F               	dw	14191
   474  007D6F  36B9               	dw	14009
   475  007D71  3603               	dw	13827
   476  007D73  354D               	dw	13645
   477  007D75  3496               	dw	13462
   478  007D77  33DE               	dw	13278
   479  007D79  3326               	dw	13094
   480  007D7B  326D               	dw	12909
   481  007D7D  31B4               	dw	12724
   482  007D7F  30FB               	dw	12539
   483  007D81  3041               	dw	12353
   484  007D83  2F86               	dw	12166
   485  007D85  2ECC               	dw	11980
   486  007D87  2E10               	dw	11792
   487  007D89  2D54               	dw	11604
   488  007D8B  2C98               	dw	11416
   489  007D8D  2BDB               	dw	11227
   490  007D8F  2B1E               	dw	11038
   491  007D91  2A61               	dw	10849
   492  007D93  29A3               	dw	10659
   493  007D95  28E5               	dw	10469
   494  007D97  2826               	dw	10278
   495  007D99  2767               	dw	10087
   496  007D9B  26A7               	dw	9895
   497  007D9D  25E7               	dw	9703
   498  007D9F  2527               	dw	9511
   499  007DA1  2467               	dw	9319
   500  007DA3  23A6               	dw	9126
   501  007DA5  22E4               	dw	8932
   502  007DA7  2223               	dw	8739
   503  007DA9  2161               	dw	8545
   504  007DAB  209F               	dw	8351
   505  007DAD  1FDC               	dw	8156
   506  007DAF  1F19               	dw	7961
   507  007DB1  1E56               	dw	7766
   508  007DB3  1D93               	dw	7571
   509  007DB5  1CCF               	dw	7375
   510  007DB7  1C0B               	dw	7179
   511  007DB9  1B46               	dw	6982
   512  007DBB  1A82               	dw	6786
   513  007DBD  19BD               	dw	6589
   514  007DBF  18F8               	dw	6392
   515  007DC1  1833               	dw	6195
   516  007DC3  176D               	dw	5997
   517  007DC5  16A7               	dw	5799
   518  007DC7  15E1               	dw	5601
   519  007DC9  151B               	dw	5403
   520  007DCB  1455               	dw	5205
   521  007DCD  138E               	dw	5006
   522  007DCF  12C7               	dw	4807
   523  007DD1  1200               	dw	4608
   524  007DD3  1139               	dw	4409
   525  007DD5  1072               	dw	4210
   526  007DD7  0FAB               	dw	4011
   527  007DD9  0EE3               	dw	3811
   528  007DDB  0E1B               	dw	3611
   529  007DDD  0D53               	dw	3411
   530  007DDF  0C8B               	dw	3211
   531  007DE1  0BC3               	dw	3011
   532  007DE3  0AFB               	dw	2811
   533  007DE5  0A32               	dw	2610
   534  007DE7  096A               	dw	2410
   535  007DE9  08A1               	dw	2209
   536  007DEB  07D9               	dw	2009
   537  007DED  0710               	dw	1808
   538  007DEF  0647               	dw	1607
   539  007DF1  057E               	dw	1406
   540  007DF3  04B6               	dw	1206
   541  007DF5  03ED               	dw	1005
   542  007DF7  0324               	dw	804
   543  007DF9  025B               	dw	603
   544  007DFB  0192               	dw	402
   545  007DFD  00C9               	dw	201
   546  007DFF  0000               	dw	0
   547  007E01  FF37               	dw	65335
   548  007E03  FE6E               	dw	65134
   549  007E05  FDA5               	dw	64933
   550  007E07  FCDC               	dw	64732
   551  007E09  FC13               	dw	64531
   552  007E0B  FB4A               	dw	64330
   553  007E0D  FA82               	dw	64130
   554  007E0F  F9B9               	dw	63929
   555  007E11  F8F0               	dw	63728
   556  007E13  F827               	dw	63527
   557  007E15  F75F               	dw	63327
   558  007E17  F696               	dw	63126
   559  007E19  F5CE               	dw	62926
   560  007E1B  F505               	dw	62725
   561  007E1D  F43D               	dw	62525
   562  007E1F  F375               	dw	62325
   563  007E21  F2AD               	dw	62125
   564  007E23  F1E5               	dw	61925
   565  007E25  F11D               	dw	61725
   566  007E27  F055               	dw	61525
   567  007E29  EF8E               	dw	61326
   568  007E2B  EEC7               	dw	61127
   569  007E2D  EE00               	dw	60928
   570  007E2F  ED39               	dw	60729
   571  007E31  EC72               	dw	60530
   572  007E33  EBAB               	dw	60331
   573  007E35  EAE5               	dw	60133
   574  007E37  EA1F               	dw	59935
   575  007E39  E959               	dw	59737
   576  007E3B  E893               	dw	59539
   577  007E3D  E7CD               	dw	59341
   578  007E3F  E708               	dw	59144
   579  007E41  E643               	dw	58947
   580  007E43  E57E               	dw	58750
   581  007E45  E4BA               	dw	58554
   582  007E47  E3F5               	dw	58357
   583  007E49  E331               	dw	58161
   584  007E4B  E26D               	dw	57965
   585  007E4D  E1AA               	dw	57770
   586  007E4F  E0E7               	dw	57575
   587  007E51  E024               	dw	57380
   588  007E53  DF61               	dw	57185
   589  007E55  DE9F               	dw	56991
   590  007E57  DDDD               	dw	56797
   591  007E59  DD1C               	dw	56604
   592  007E5B  DC5A               	dw	56410
   593  007E5D  DB99               	dw	56217
   594  007E5F  DAD9               	dw	56025
   595  007E61  DA19               	dw	55833
   596  007E63  D959               	dw	55641
   597  007E65  D899               	dw	55449
   598  007E67  D7DA               	dw	55258
   599  007E69  D71B               	dw	55067
   600  007E6B  D65D               	dw	54877
   601  007E6D  D59F               	dw	54687
   602  007E6F  D4E2               	dw	54498
   603  007E71  D425               	dw	54309
   604  007E73  D368               	dw	54120
   605  007E75  D2AC               	dw	53932
   606  007E77  D1F0               	dw	53744
   607  007E79  D134               	dw	53556
   608  007E7B  D07A               	dw	53370
   609  007E7D  CFBF               	dw	53183
   610  007E7F  CF05               	dw	52997
   611  007E81  CE4C               	dw	52812
   612  007E83  CD93               	dw	52627
   613  007E85  CCDA               	dw	52442
   614  007E87  CC22               	dw	52258
   615  007E89  CB6A               	dw	52074
   616  007E8B  CAB3               	dw	51891
   617  007E8D  C9FD               	dw	51709
   618  007E8F  C947               	dw	51527
   619  007E91  C891               	dw	51345
   620  007E93  C7DC               	dw	51164
   621  007E95  C728               	dw	50984
   622  007E97  C674               	dw	50804
   623  007E99  C5C1               	dw	50625
   624  007E9B  C50E               	dw	50446
   625  007E9D  C45C               	dw	50268
   626  007E9F  C3AA               	dw	50090
   627  007EA1  C2F9               	dw	49913
   628  007EA3  C249               	dw	49737
   629  007EA5  C199               	dw	49561
   630  007EA7  C0EA               	dw	49386
   631  007EA9  C03B               	dw	49211
   632  007EAB  BF8D               	dw	49037
   633  007EAD  BEE0               	dw	48864
   634  007EAF  BE33               	dw	48691
   635  007EB1  BD87               	dw	48519
   636  007EB3  BCDB               	dw	48347
   637  007EB5  BC30               	dw	48176
   638  007EB7  BB86               	dw	48006
   639  007EB9  BADD               	dw	47837
   640  007EBB  BA34               	dw	47668
   641  007EBD  B98C               	dw	47500
   642  007EBF  B8E4               	dw	47332
   643  007EC1  B83D               	dw	47165
   644  007EC3  B797               	dw	46999
   645  007EC5  B6F2               	dw	46834
   646  007EC7  B64D               	dw	46669
   647  007EC9  B5A9               	dw	46505
   648  007ECB  B506               	dw	46342
   649  007ECD  B463               	dw	46179
   650  007ECF  B3C1               	dw	46017
   651  007ED1  B320               	dw	45856
   652  007ED3  B280               	dw	45696
   653  007ED5  B1E0               	dw	45536
   654  007ED7  B141               	dw	45377
   655  007ED9  B0A3               	dw	45219
   656  007EDB  B006               	dw	45062
   657  007EDD  AF69               	dw	44905
   658  007EDF  AECD               	dw	44749
   659  007EE1  AE32               	dw	44594
   660  007EE3  AD98               	dw	44440
   661  007EE5  ACFF               	dw	44287
   662  007EE7  AC66               	dw	44134
   663  007EE9  ABCE               	dw	43982
   664  007EEB  AB37               	dw	43831
   665  007EED  AAA1               	dw	43681
   666  007EEF  AA0C               	dw	43532
   667  007EF1  A977               	dw	43383
   668  007EF3  A8E3               	dw	43235
   669  007EF5  A850               	dw	43088
   670  007EF7  A7BE               	dw	42942
   671  007EF9  A72D               	dw	42797
   672  007EFB  A69D               	dw	42653
   673  007EFD  A60D               	dw	42509
   674  007EFF  A57F               	dw	42367
   675  007F01  A4F1               	dw	42225
   676  007F03  A464               	dw	42084
   677  007F05  A3D8               	dw	41944
   678  007F07  A34D               	dw	41805
   679  007F09  A2C3               	dw	41667
   680  007F0B  A23A               	dw	41530
   681  007F0D  A1B1               	dw	41393
   682  007F0F  A12A               	dw	41258
   683  007F11  A0A3               	dw	41123
   684  007F13  A01E               	dw	40990
   685  007F15  9F99               	dw	40857
   686  007F17  9F15               	dw	40725
   687  007F19  9E92               	dw	40594
   688  007F1B  9E10               	dw	40464
   689  007F1D  9D8F               	dw	40335
   690  007F1F  9D0F               	dw	40207
   691  007F21  9C90               	dw	40080
   692  007F23  9C12               	dw	39954
   693  007F25  9B95               	dw	39829
   694  007F27  9B19               	dw	39705
   695  007F29  9A9E               	dw	39582
   696  007F2B  9A23               	dw	39459
   697  007F2D  99AA               	dw	39338
   698  007F2F  9932               	dw	39218
   699  007F31  98BB               	dw	39099
   700  007F33  9844               	dw	38980
   701  007F35  97CF               	dw	38863
   702  007F37  975B               	dw	38747
   703  007F39  96E7               	dw	38631
   704  007F3B  9675               	dw	38517
   705  007F3D  9604               	dw	38404
   706  007F3F  9594               	dw	38292
   707  007F41  9525               	dw	38181
   708  007F43  94B6               	dw	38070
   709  007F45  9449               	dw	37961
   710  007F47  93DD               	dw	37853
   711  007F49  9372               	dw	37746
   712  007F4B  9308               	dw	37640
   713  007F4D  929F               	dw	37535
   714  007F4F  9237               	dw	37431
   715  007F51  91D0               	dw	37328
   716  007F53  916B               	dw	37227
   717  007F55  9106               	dw	37126
   718  007F57  90A2               	dw	37026
   719  007F59  9040               	dw	36928
   720  007F5B  8FDE               	dw	36830
   721  007F5D  8F7E               	dw	36734
   722  007F5F  8F1F               	dw	36639
   723  007F61  8EC0               	dw	36544
   724  007F63  8E63               	dw	36451
   725  007F65  8E07               	dw	36359
   726  007F67  8DAC               	dw	36268
   727  007F69  8D52               	dw	36178
   728  007F6B  8CFA               	dw	36090
   729  007F6D  8CA2               	dw	36002
   730  007F6F  8C4B               	dw	35915
   731  007F71  8BF6               	dw	35830
   732  007F73  8BA2               	dw	35746
   733  007F75  8B4F               	dw	35663
   734  007F77  8AFD               	dw	35581
   735  007F79  8AAC               	dw	35500
   736  007F7B  8A5C               	dw	35420
   737  007F7D  8A0D               	dw	35341
   738  007F7F  89C0               	dw	35264
   739  007F81  8973               	dw	35187
   740  007F83  8928               	dw	35112
   741  007F85  88DE               	dw	35038
   742  007F87  8895               	dw	34965
   743  007F89  884D               	dw	34893
   744  007F8B  8807               	dw	34823
   745  007F8D  87C1               	dw	34753
   746  007F8F  877D               	dw	34685
   747  007F91  873A               	dw	34618
   748  007F93  86F8               	dw	34552
   749  007F95  86B7               	dw	34487
   750  007F97  8677               	dw	34423
   751  007F99  8639               	dw	34361
   752  007F9B  85FC               	dw	34300
   753  007F9D  85BF               	dw	34239
   754  007F9F  8584               	dw	34180
   755  007FA1  854B               	dw	34123
   756  007FA3  8512               	dw	34066
   757  007FA5  84DB               	dw	34011
   758  007FA7  84A4               	dw	33956
   759  007FA9  846F               	dw	33903
   760  007FAB  843C               	dw	33852
   761  007FAD  8409               	dw	33801
   762  007FAF  83D7               	dw	33751
   763  007FB1  83A7               	dw	33703
   764  007FB3  8378               	dw	33656
   765  007FB5  834A               	dw	33610
   766  007FB7  831E               	dw	33566
   767  007FB9  82F2               	dw	33522
   768  007FBB  82C8               	dw	33480
   769  007FBD  829F               	dw	33439
   770  007FBF  8277               	dw	33399
   771  007FC1  8250               	dw	33360
   772  007FC3  822B               	dw	33323
   773  007FC5  8207               	dw	33287
   774  007FC7  81E4               	dw	33252
   775  007FC9  81C2               	dw	33218
   776  007FCB  81A2               	dw	33186
   777  007FCD  8182               	dw	33154
   778  007FCF  8164               	dw	33124
   779  007FD1  8147               	dw	33095
   780  007FD3  812C               	dw	33068
   781  007FD5  8111               	dw	33041
   782  007FD7  80F8               	dw	33016
   783  007FD9  80E0               	dw	32992
   784  007FDB  80C9               	dw	32969
   785  007FDD  80B4               	dw	32948
   786  007FDF  809F               	dw	32927
   787  007FE1  808C               	dw	32908
   788  007FE3  807A               	dw	32890
   789  007FE5  806A               	dw	32874
   790  007FE7  805A               	dw	32858
   791  007FE9  804C               	dw	32844
   792  007FEB  803F               	dw	32831
   793  007FED  8033               	dw	32819
   794  007FEF  8029               	dw	32809
   795  007FF1  8020               	dw	32800
   796  007FF3  8018               	dw	32792
   797  007FF5  8011               	dw	32785
   798  007FF7  800B               	dw	32779
   799  007FF9  8007               	dw	32775
   800  007FFB  8004               	dw	32772
   801  007FFD  8002               	dw	32770
   802  007FFF                     __end_of_Sinewave:
   803                           	opt stack 0
   804  0000                     _ADCON0	set	4034
   805  0000                     _ADCON0bits	set	4034
   806  0000                     _ADCON1	set	4033
   807  0000                     _ADCON2	set	4032
   808  0000                     _ADRESH	set	4036
   809  0000                     _ADRESL	set	4035
   810  0000                     _ANSELC	set	3898
   811  0000                     _INTCONbits	set	4082
   812  0000                     _LATC	set	3979
   813  0000                     _OSCCONbits	set	4051
   814  0000                     _OSCTUNEbits	set	3995
   815  0000                     _PIE1	set	3997
   816  0000                     _PIE1bits	set	3997
   817  0000                     _PIR1bits	set	3998
   818  0000                     _RCSTA1	set	4011
   819  0000                     _RCSTA1bits	set	4011
   820  0000                     _SPBRG1	set	4015
   821  0000                     _SPBRGH1	set	4016
   822  0000                     _TRISAbits	set	3986
   823  0000                     _TRISC	set	3988
   824  0000                     _TRISCbits	set	3988
   825  0000                     _TXREG1	set	4013
   826  0000                     _TXSTA1	set	4012
   827  0000                     _TXSTA1bits	set	4012
   828  007FFF  00                 	db	0	; dummy byte at the end
   829  0000                     
   830                           	psect	nvBANK0
   831  0000F3                     __pnvBANK0:
   832                           	opt stack 0
   833  0000F3                     _baud_rate:
   834                           	opt stack 0
   835  0000F3                     	ds	4
   836                           
   837                           ; #config settings
   838  0000                     
   839                           	psect	cinit
   840  006C32                     __pcinit:
   841                           	opt stack 0
   842  006C32                     start_initialization:
   843                           	opt stack 0
   844  006C32                     __initialization:
   845                           	opt stack 0
   846                           
   847                           ; Clear objects allocated to BANK1 (128 bytes)
   848  006C32  EE01  F000         	lfsr	0,__pbssBANK1
   849  006C36  0E80               	movlw	128
   850  006C38                     clear_0:
   851  006C38  6AEE               	clrf	postinc0,c
   852  006C3A  06E8               	decf	wreg,f,c
   853  006C3C  E1FD               	bnz	clear_0
   854                           
   855                           ; Clear objects allocated to BANK0 (133 bytes)
   856  006C3E  EE00  F060         	lfsr	0,__pbssBANK0
   857  006C42  0E85               	movlw	133
   858  006C44                     clear_1:
   859  006C44  6AEE               	clrf	postinc0,c
   860  006C46  06E8               	decf	wreg,f,c
   861  006C48  E1FD               	bnz	clear_1
   862                           
   863                           ; Clear objects allocated to COMRAM (4 bytes)
   864  006C4A  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   865  006C4C  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   866  006C4E  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   867  006C50  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   868  006C52                     end_of_initialization:
   869                           	opt stack 0
   870  006C52                     __end_of__initialization:
   871                           	opt stack 0
   872  006C52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   873  006C54  6EF8               	movwf	tblptru,c
   874  006C56  0100               	movlb	0
   875  006C58  EFC6  F036         	goto	_main	;jump to C main() function
   876                           tblptru	equ	0xFF8
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           
   880                           	psect	bssCOMRAM
   881  00005A                     __pbssCOMRAM:
   882                           	opt stack 0
   883  00005A                     _i:
   884                           	opt stack 0
   885  00005A                     	ds	2
   886  00005C                     _USART1_Status:
   887                           	opt stack 0
   888  00005C                     	ds	1
   889  00005D                     _input:
   890                           	opt stack 0
   891  00005D                     	ds	1
   892                           tblptru	equ	0xFF8
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           
   896                           	psect	bssBANK0
   897  000060                     __pbssBANK0:
   898                           	opt stack 0
   899  000060                     _data:
   900                           	opt stack 0
   901  000060                     	ds	5
   902  000065                     _realNumbers:
   903                           	opt stack 0
   904  000065                     	ds	128
   905                           tblptru	equ	0xFF8
   906                           postinc0	equ	0xFEE
   907                           wreg	equ	0xFE8
   908                           
   909                           	psect	bssBANK1
   910  000100                     __pbssBANK1:
   911                           	opt stack 0
   912  000100                     _imaginaryNumbers:
   913                           	opt stack 0
   914  000100                     	ds	128
   915                           tblptru	equ	0xFF8
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           
   919                           	psect	cstackBANK0
   920  0000E5                     __pcstackBANK0:
   921                           	opt stack 0
   922  0000E5                     main@adc_value:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x0
   926  0000E5                     	ds	2
   927  0000E7                     main@root:
   928                           	opt stack 0
   929                           
   930                           ; 4 bytes @ 0x2
   931  0000E7                     	ds	4
   932  0000EB                     main@i:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x6
   936  0000EB                     	ds	2
   937  0000ED                     main@place:
   938                           	opt stack 0
   939                           
   940                           ; 4 bytes @ 0x8
   941  0000ED                     	ds	4
   942  0000F1                     main@k:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0xC
   946  0000F1                     	ds	2
   947                           tblptru	equ	0xFF8
   948                           postinc0	equ	0xFEE
   949                           wreg	equ	0xFE8
   950                           
   951                           	psect	cstackCOMRAM
   952  000001                     __pcstackCOMRAM:
   953                           	opt stack 0
   954  000001                     ?_ReadADC:
   955                           	opt stack 0
   956  000001                     ?___wmul:
   957                           	opt stack 0
   958  000001                     ?___lmul:
   959                           	opt stack 0
   960  000001                     OpenADC@config2:
   961                           	opt stack 0
   962  000001                     Write1USART@data:
   963                           	opt stack 0
   964  000001                     Open1USART@spbrg:
   965                           	opt stack 0
   966  000001                     ___wmul@multiplier:
   967                           	opt stack 0
   968  000001                     ___lmul@multiplier:
   969                           	opt stack 0
   970                           
   971                           ; 4 bytes @ 0x0
   972  000001                     	ds	1
   973  000002                     OpenADC@config3:
   974                           	opt stack 0
   975  000002                     sendIntArray@array:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x1
   979  000002                     	ds	1
   980  000003                     ??_OpenADC:
   981  000003                     ??_Open1USART:
   982  000003                     ___wmul@multiplicand:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0x2
   986  000003                     	ds	1
   987  000004                     sendIntArray@size:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0x3
   991  000004                     	ds	1
   992  000005                     OpenADC@config:
   993                           	opt stack 0
   994  000005                     ___wmul@product:
   995                           	opt stack 0
   996  000005                     ___lmul@multiplicand:
   997                           	opt stack 0
   998                           
   999                           ; 4 bytes @ 0x4
  1000  000005                     	ds	1
  1001  000006                     Open1USART@config:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x5
  1005  000006                     	ds	3
  1006  000009                     ___lmul@product:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x8
  1010  000009                     	ds	4
  1011  00000D                     fix_fft@fr:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0xC
  1015  00000D                     	ds	2
  1016  00000F                     fix_fft@fi:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0xE
  1020  00000F                     	ds	2
  1021  000011                     fix_fft@m:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x10
  1025  000011                     	ds	2
  1026  000013                     ??_fix_fft:
  1027                           
  1028                           ; 0 bytes @ 0x12
  1029  000013                     	ds	8
  1030  00001B                     fix_fft@k:
  1031                           	opt stack 0
  1032                           
  1033                           ; 4 bytes @ 0x1A
  1034  00001B                     	ds	4
  1035  00001F                     fix_fft@nn:
  1036                           	opt stack 0
  1037                           
  1038                           ; 4 bytes @ 0x1E
  1039  00001F                     	ds	4
  1040  000023                     fix_fft@istep:
  1041                           	opt stack 0
  1042                           
  1043                           ; 4 bytes @ 0x22
  1044  000023                     	ds	4
  1045  000027                     fix_fft@qr:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x26
  1049  000027                     	ds	2
  1050  000029                     fix_fft@qi:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x28
  1054  000029                     	ds	2
  1055  00002B                     fix_fft@wr:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x2A
  1059  00002B                     	ds	2
  1060  00002D                     fix_fft@wi:
  1061                           	opt stack 0
  1062                           
  1063                           ; 2 bytes @ 0x2C
  1064  00002D                     	ds	2
  1065  00002F                     fix_fft@n:
  1066                           	opt stack 0
  1067                           
  1068                           ; 4 bytes @ 0x2E
  1069  00002F                     	ds	4
  1070  000033                     fix_fft@tr:
  1071                           	opt stack 0
  1072                           
  1073                           ; 2 bytes @ 0x32
  1074  000033                     	ds	2
  1075  000035                     fix_fft@ti:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x34
  1079  000035                     	ds	2
  1080  000037                     fix_fft@b:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x36
  1084  000037                     	ds	2
  1085  000039                     fix_fft@i:
  1086                           	opt stack 0
  1087                           
  1088                           ; 4 bytes @ 0x38
  1089  000039                     	ds	4
  1090  00003D                     fix_fft@mr:
  1091                           	opt stack 0
  1092                           
  1093                           ; 4 bytes @ 0x3C
  1094  00003D                     	ds	4
  1095  000041                     fix_fft@l:
  1096                           	opt stack 0
  1097                           
  1098                           ; 4 bytes @ 0x40
  1099  000041                     	ds	4
  1100  000045                     fix_fft@j:
  1101                           	opt stack 0
  1102                           
  1103                           ; 4 bytes @ 0x44
  1104  000045                     	ds	4
  1105  000049                     fix_fft@c:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x48
  1109  000049                     	ds	4
  1110  00004D                     ??_main:
  1111                           
  1112                           ; 0 bytes @ 0x4C
  1113  00004D                     	ds	13
  1114                           tblptru	equ	0xFF8
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           
  1118 ;;
  1119 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
  1120 ;;
  1121 ;; *************** function _main *****************
  1122 ;; Defined at:
  1123 ;;		line 38 in file "main pic18.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  place           4    8[BANK0 ] long 
  1128 ;;  root            4    2[BANK0 ] long 
  1129 ;;  k               2   12[BANK0 ] int 
  1130 ;;  i               2    6[BANK0 ] short 
  1131 ;;  adc_value       2    0[BANK0 ] unsigned int 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;		None               void
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1141 ;;      Params:         0       0       0       0       0       0       0
  1142 ;;      Locals:         0      14       0       0       0       0       0
  1143 ;;      Temps:         13       0       0       0       0       0       0
  1144 ;;      Totals:        13      14       0       0       0       0       0
  1145 ;;Total ram usage:       27 bytes
  1146 ;; Hardware stack levels required when called:    3
  1147 ;; This function calls:
  1148 ;;		_BusyADC
  1149 ;;		_ConvertADC
  1150 ;;		_Open1USART
  1151 ;;		_OpenADC
  1152 ;;		_ReadADC
  1153 ;;		___wmul
  1154 ;;		_fix_fft
  1155 ;;		_sendIntArray
  1156 ;; This function is called by:
  1157 ;;		Startup code after reset
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text0
  1162  006D8C                     __ptext0:
  1163                           	opt stack 0
  1164  006D8C                     _main:
  1165                           	opt stack 28
  1166                           
  1167                           ;main pic18.c: 39: unsigned int adc_value;
  1168                           ;main pic18.c: 40: TRISAbits.RA7 = 1;
  1169                           
  1170                           ;incstack = 0
  1171  006D8C  8E92               	bsf	3986,7,c	;volatile
  1172                           
  1173                           ;main pic18.c: 41: TRISC = 0x00;
  1174  006D8E  0E00               	movlw	0
  1175  006D90  6E94               	movwf	3988,c	;volatile
  1176                           
  1177                           ;main pic18.c: 42: LATC = 0x00;
  1178  006D92  0E00               	movlw	0
  1179  006D94  6E8B               	movwf	3979,c	;volatile
  1180                           
  1181                           ;main pic18.c: 43: ANSELC = 0x00;
  1182  006D96  0E00               	movlw	0
  1183  006D98  010F               	movlb	15	; () banked
  1184  006D9A  6F3A               	movwf	58,b	;volatile
  1185                           
  1186                           ; BSR set to: 15
  1187                           ;main pic18.c: 44: TRISCbits.TRISC6 = 1;
  1188  006D9C  8C94               	bsf	3988,6,c	;volatile
  1189                           
  1190                           ; BSR set to: 15
  1191                           ;main pic18.c: 45: TRISCbits.TRISC7 = 1;
  1192  006D9E  8E94               	bsf	3988,7,c	;volatile
  1193                           
  1194                           ; BSR set to: 15
  1195                           ;main pic18.c: 47: OSCCONbits.IRCF = 0b111;
  1196  006DA0  88D3               	bsf	4051,4,c	;volatile
  1197  006DA2  8AD3               	bsf	4051,5,c	;volatile
  1198  006DA4  8CD3               	bsf	4051,6,c	;volatile
  1199                           
  1200                           ;main pic18.c: 48: OSCCONbits.SCS = 0b11;
  1201  006DA6  0E03               	movlw	3
  1202  006DA8  12D3               	iorwf	4051,f,c	;volatile
  1203                           
  1204                           ; BSR set to: 15
  1205                           ;main pic18.c: 49: OSCTUNEbits.TUN = 0b01111;
  1206  006DAA  809B               	bsf	3995,0,c	;volatile
  1207  006DAC  829B               	bsf	3995,1,c	;volatile
  1208  006DAE  849B               	bsf	3995,2,c	;volatile
  1209  006DB0  869B               	bsf	3995,3,c	;volatile
  1210  006DB2  989B               	bcf	3995,4,c	;volatile
  1211  006DB4  9A9B               	bcf	3995,5,c	;volatile
  1212                           
  1213                           ;main pic18.c: 51: baud_rate = (4000000 / 9600 / 16 - 1);
  1214  006DB6  0E19               	movlw	25
  1215  006DB8  0100               	movlb	0	; () banked
  1216  006DBA  6FF3               	movwf	_baud_rate& (0+255),b
  1217  006DBC  0E00               	movlw	0
  1218  006DBE  0100               	movlb	0	; () banked
  1219  006DC0  6FF4               	movwf	(_baud_rate+1)& (0+255),b
  1220  006DC2  0E00               	movlw	0
  1221  006DC4  0100               	movlb	0	; () banked
  1222  006DC6  6FF5               	movwf	(_baud_rate+2)& (0+255),b
  1223  006DC8  0E00               	movlw	0
  1224  006DCA  0100               	movlb	0	; () banked
  1225  006DCC  6FF6               	movwf	(_baud_rate+3)& (0+255),b
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;main pic18.c: 52: OpenADC(0b11111111 &
  1229                           ;main pic18.c: 53: 0b11111111 &
  1230                           ;main pic18.c: 54: 0b11110001,
  1231                           ;main pic18.c: 55: 0b10000011 &
  1232                           ;main pic18.c: 56: 0b01111111 &
  1233                           ;main pic18.c: 57: 0b11110111 &
  1234                           ;main pic18.c: 58: 0b11111100,
  1235                           ;main pic18.c: 59: 0b1110);
  1236  006DCE  0E00               	movlw	0
  1237  006DD0  6E01               	movwf	OpenADC@config2,c
  1238  006DD2  0E0E               	movlw	14
  1239  006DD4  6E02               	movwf	OpenADC@config3,c
  1240  006DD6  0EF1               	movlw	241
  1241  006DD8  EC48  F036         	call	_OpenADC
  1242                           
  1243                           ;main pic18.c: 60: RCSTA1&=0b01001111,TXSTA1bits.TXEN=0,PIE1&=0b11001111;
  1244  006DDC  0E4F               	movlw	79
  1245  006DDE  16AB               	andwf	4011,f,c	;volatile
  1246  006DE0  9AAC               	bcf	4012,5,c	;volatile
  1247  006DE2  0ECF               	movlw	207
  1248  006DE4  169D               	andwf	3997,f,c	;volatile
  1249                           
  1250                           ;main pic18.c: 61: Open1USART( 0b01111111 &
  1251                           ;main pic18.c: 62: 0b10111111 &
  1252                           ;main pic18.c: 63: 0b11111110 &
  1253                           ;main pic18.c: 64: 0b11111101 &
  1254                           ;main pic18.c: 65: 0b11111111 &
  1255                           ;main pic18.c: 66: 0b11101111,
  1256                           ;main pic18.c: 67: baud_rate );
  1257  006DE6  C0F3  F001         	movff	_baud_rate,Open1USART@spbrg
  1258  006DEA  C0F4  F002         	movff	_baud_rate+1,Open1USART@spbrg+1
  1259  006DEE  0E2C               	movlw	44
  1260  006DF0  EC9A  F036         	call	_Open1USART
  1261  006DF4                     l1300:
  1262                           
  1263                           ;main pic18.c: 81: short i = 0;
  1264  006DF4  0E00               	movlw	0
  1265  006DF6  0100               	movlb	0	; () banked
  1266  006DF8  6FEC               	movwf	(main@i+1)& (0+255),b
  1267  006DFA  0E00               	movlw	0
  1268  006DFC  0100               	movlb	0	; () banked
  1269  006DFE  6FEB               	movwf	main@i& (0+255),b
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;main pic18.c: 82: for (i = 0; i < 64; i++) {
  1273  006E00  0E00               	movlw	0
  1274  006E02  0100               	movlb	0	; () banked
  1275  006E04  6FEC               	movwf	(main@i+1)& (0+255),b
  1276  006E06  0E00               	movlw	0
  1277  006E08  0100               	movlb	0	; () banked
  1278  006E0A  6FEB               	movwf	main@i& (0+255),b
  1279  006E0C  0100               	movlb	0	; () banked
  1280  006E0E  51EC               	movf	(main@i+1)& (0+255),w,b
  1281  006E10  0A80               	xorlw	128
  1282  006E12  0F80               	addlw	-128
  1283  006E14  0E40               	movlw	64
  1284  006E16  B4D8               	btfsc	status,2,c
  1285  006E18  5DEB               	subwf	main@i& (0+255),w,b
  1286  006E1A  B0D8               	btfsc	status,0,c
  1287  006E1C  D03F               	goto	l1320
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;main pic18.c: 84: ConvertADC();
  1291                           
  1292                           ; BSR set to: 0
  1293                           
  1294                           ; BSR set to: 0
  1295  006E1E  ECE6  F035         	call	_ConvertADC	;wreg free
  1296  006E22                     l1308:
  1297  006E22  ECED  F035         	call	_BusyADC	;wreg free
  1298  006E26  0900               	iorlw	0
  1299  006E28  A4D8               	btfss	status,2,c
  1300  006E2A  D7FB               	goto	l1308
  1301                           
  1302                           ;main pic18.c: 92: adc_value = ReadADC() >> 2;
  1303  006E2C  ECE8  F035         	call	_ReadADC	;wreg free
  1304  006E30  3402               	rlcf	?_ReadADC+1,w,c
  1305  006E32  3202               	rrcf	?_ReadADC+1,f,c
  1306  006E34  3201               	rrcf	?_ReadADC,f,c
  1307  006E36  3402               	rlcf	?_ReadADC+1,w,c
  1308  006E38  3202               	rrcf	?_ReadADC+1,f,c
  1309  006E3A  3201               	rrcf	?_ReadADC,f,c
  1310  006E3C  C001  F0E5         	movff	?_ReadADC,main@adc_value
  1311  006E40  C002  F0E6         	movff	?_ReadADC+1,main@adc_value+1
  1312                           
  1313                           ;main pic18.c: 93: realNumbers[i] = adc_value;
  1314  006E44  0E65               	movlw	low _realNumbers
  1315  006E46  6E4D               	movwf	??_main& (0+255),c
  1316  006E48  0E00               	movlw	high _realNumbers
  1317  006E4A  6E4E               	movwf	(??_main+1)& (0+255),c
  1318  006E4C  90D8               	bcf	status,0,c
  1319  006E4E  0100               	movlb	0	; () banked
  1320  006E50  35EB               	rlcf	main@i& (0+255),w,b
  1321  006E52  6ED9               	movwf	fsr2l,c
  1322  006E54  0100               	movlb	0	; () banked
  1323  006E56  35EC               	rlcf	(main@i+1)& (0+255),w,b
  1324  006E58  6EDA               	movwf	fsr2h,c
  1325  006E5A  504D               	movf	??_main,w,c
  1326  006E5C  26D9               	addwf	fsr2l,f,c
  1327  006E5E  504E               	movf	??_main+1,w,c
  1328  006E60  22DA               	addwfc	fsr2h,f,c
  1329  006E62  0100               	movlb	0	; () banked
  1330  006E64  C0E5  FFDE         	movff	main@adc_value,postinc2
  1331  006E68  0100               	movlb	0	; () banked
  1332  006E6A  C0E6  FFDD         	movff	main@adc_value+1,postdec2
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;main pic18.c: 96: imaginaryNumbers[i] = 0;
  1336  006E6E  0E00               	movlw	low _imaginaryNumbers
  1337  006E70  6E4D               	movwf	??_main& (0+255),c
  1338  006E72  0E01               	movlw	high _imaginaryNumbers
  1339  006E74  6E4E               	movwf	(??_main+1)& (0+255),c
  1340  006E76  90D8               	bcf	status,0,c
  1341  006E78  0100               	movlb	0	; () banked
  1342  006E7A  35EB               	rlcf	main@i& (0+255),w,b
  1343  006E7C  6ED9               	movwf	fsr2l,c
  1344  006E7E  0100               	movlb	0	; () banked
  1345  006E80  35EC               	rlcf	(main@i+1)& (0+255),w,b
  1346  006E82  6EDA               	movwf	fsr2h,c
  1347  006E84  504D               	movf	??_main,w,c
  1348  006E86  26D9               	addwf	fsr2l,f,c
  1349  006E88  504E               	movf	??_main+1,w,c
  1350  006E8A  22DA               	addwfc	fsr2h,f,c
  1351  006E8C  0E00               	movlw	0
  1352  006E8E  6EDE               	movwf	postinc2,c
  1353  006E90  0E00               	movlw	0
  1354  006E92  6EDD               	movwf	postdec2,c
  1355                           
  1356                           ; BSR set to: 0
  1357  006E94  0100               	movlb	0	; () banked
  1358  006E96  4BEB               	infsnz	main@i& (0+255),f,b
  1359  006E98  2BEC               	incf	(main@i+1)& (0+255),f,b
  1360  006E9A  D7B8               	goto	L1
  1361  006E9C                     l1320:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;main pic18.c: 97: }
  1365                           ;main pic18.c: 99: fix_fft(realNumbers, imaginaryNumbers, 6);
  1366  006E9C  0100               	movlb	0	; () banked
  1367  006E9E  0E00               	movlw	high _realNumbers
  1368  006EA0  6E0E               	movwf	fix_fft@fr+1,c
  1369  006EA2  0100               	movlb	0	; () banked
  1370  006EA4  0E65               	movlw	low _realNumbers
  1371  006EA6  6E0D               	movwf	fix_fft@fr,c
  1372  006EA8  0101               	movlb	1	; () banked
  1373  006EAA  0E01               	movlw	high _imaginaryNumbers
  1374  006EAC  6E10               	movwf	fix_fft@fi+1,c
  1375  006EAE  0101               	movlb	1	; () banked
  1376  006EB0  0E00               	movlw	low _imaginaryNumbers
  1377  006EB2  6E0F               	movwf	fix_fft@fi,c
  1378  006EB4  0E00               	movlw	0
  1379  006EB6  6E12               	movwf	fix_fft@m+1,c
  1380  006EB8  0E06               	movlw	6
  1381  006EBA  6E11               	movwf	fix_fft@m,c
  1382  006EBC  EC39  F039         	call	_fix_fft	;wreg free
  1383                           
  1384                           ;main pic18.c: 102: long place, root;
  1385                           ;main pic18.c: 103: int k = 0;
  1386  006EC0  0E00               	movlw	0
  1387  006EC2  0100               	movlb	0	; () banked
  1388  006EC4  6FF2               	movwf	(main@k+1)& (0+255),b
  1389  006EC6  0E00               	movlw	0
  1390  006EC8  0100               	movlb	0	; () banked
  1391  006ECA  6FF1               	movwf	main@k& (0+255),b
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;main pic18.c: 104: for (k=0; k < 32; k++) {
  1395  006ECC  0E00               	movlw	0
  1396  006ECE  0100               	movlb	0	; () banked
  1397  006ED0  6FF2               	movwf	(main@k+1)& (0+255),b
  1398  006ED2  0E00               	movlw	0
  1399  006ED4  0100               	movlb	0	; () banked
  1400  006ED6  6FF1               	movwf	main@k& (0+255),b
  1401  006ED8                     
  1402                           ; BSR set to: 0
  1403  006ED8  0100               	movlb	0	; () banked
  1404  006EDA  51F2               	movf	(main@k+1)& (0+255),w,b
  1405  006EDC  0A80               	xorlw	128
  1406  006EDE  0F80               	addlw	-128
  1407  006EE0  0E20               	movlw	32
  1408  006EE2  B4D8               	btfsc	status,2,c
  1409  006EE4  5DF1               	subwf	main@k& (0+255),w,b
  1410  006EE6  B0D8               	btfsc	status,0,c
  1411  006EE8  D1B7               	goto	l1362
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;main pic18.c: 105: realNumbers[k] = (realNumbers[k] * realNumbers[k] +
  1415                           ;main pic18.c: 106: imaginaryNumbers[k] * imaginaryNumbers[k]);
  1416                           
  1417                           ; BSR set to: 0
  1418                           
  1419                           ; BSR set to: 0
  1420  006EEA  0E65               	movlw	low _realNumbers
  1421  006EEC  6E4D               	movwf	??_main& (0+255),c
  1422  006EEE  0E00               	movlw	high _realNumbers
  1423  006EF0  6E4E               	movwf	(??_main+1)& (0+255),c
  1424  006EF2  90D8               	bcf	status,0,c
  1425  006EF4  0100               	movlb	0	; () banked
  1426  006EF6  35F1               	rlcf	main@k& (0+255),w,b
  1427  006EF8  6ED9               	movwf	fsr2l,c
  1428  006EFA  0100               	movlb	0	; () banked
  1429  006EFC  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1430  006EFE  6EDA               	movwf	fsr2h,c
  1431  006F00  504D               	movf	??_main,w,c
  1432  006F02  26D9               	addwf	fsr2l,f,c
  1433  006F04  504E               	movf	??_main+1,w,c
  1434  006F06  22DA               	addwfc	fsr2h,f,c
  1435  006F08  CFDE F001          	movff	postinc2,___wmul@multiplier
  1436  006F0C  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1437  006F10  0E65               	movlw	low _realNumbers
  1438  006F12  6E4F               	movwf	(??_main+2)& (0+255),c
  1439  006F14  0E00               	movlw	high _realNumbers
  1440  006F16  6E50               	movwf	(??_main+3)& (0+255),c
  1441  006F18  90D8               	bcf	status,0,c
  1442  006F1A  0100               	movlb	0	; () banked
  1443  006F1C  35F1               	rlcf	main@k& (0+255),w,b
  1444  006F1E  6ED9               	movwf	fsr2l,c
  1445  006F20  0100               	movlb	0	; () banked
  1446  006F22  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1447  006F24  6EDA               	movwf	fsr2h,c
  1448  006F26  504F               	movf	??_main+2,w,c
  1449  006F28  26D9               	addwf	fsr2l,f,c
  1450  006F2A  5050               	movf	??_main+3,w,c
  1451  006F2C  22DA               	addwfc	fsr2h,f,c
  1452  006F2E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1453  006F32  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1454  006F36  EC06  F036         	call	___wmul	;wreg free
  1455  006F3A  C001  F051         	movff	?___wmul,??_main+4
  1456  006F3E  C002  F052         	movff	?___wmul+1,??_main+5
  1457  006F42  0E00               	movlw	low _imaginaryNumbers
  1458  006F44  6E53               	movwf	(??_main+6)& (0+255),c
  1459  006F46  0E01               	movlw	high _imaginaryNumbers
  1460  006F48  6E54               	movwf	(??_main+7)& (0+255),c
  1461  006F4A  90D8               	bcf	status,0,c
  1462  006F4C  0100               	movlb	0	; () banked
  1463  006F4E  35F1               	rlcf	main@k& (0+255),w,b
  1464  006F50  6ED9               	movwf	fsr2l,c
  1465  006F52  0100               	movlb	0	; () banked
  1466  006F54  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1467  006F56  6EDA               	movwf	fsr2h,c
  1468  006F58  5053               	movf	??_main+6,w,c
  1469  006F5A  26D9               	addwf	fsr2l,f,c
  1470  006F5C  5054               	movf	??_main+7,w,c
  1471  006F5E  22DA               	addwfc	fsr2h,f,c
  1472  006F60  CFDE F001          	movff	postinc2,___wmul@multiplier
  1473  006F64  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1474  006F68  0E00               	movlw	low _imaginaryNumbers
  1475  006F6A  6E55               	movwf	(??_main+8)& (0+255),c
  1476  006F6C  0E01               	movlw	high _imaginaryNumbers
  1477  006F6E  6E56               	movwf	(??_main+9)& (0+255),c
  1478  006F70  90D8               	bcf	status,0,c
  1479  006F72  0100               	movlb	0	; () banked
  1480  006F74  35F1               	rlcf	main@k& (0+255),w,b
  1481  006F76  6ED9               	movwf	fsr2l,c
  1482  006F78  0100               	movlb	0	; () banked
  1483  006F7A  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1484  006F7C  6EDA               	movwf	fsr2h,c
  1485  006F7E  5055               	movf	??_main+8,w,c
  1486  006F80  26D9               	addwf	fsr2l,f,c
  1487  006F82  5056               	movf	??_main+9,w,c
  1488  006F84  22DA               	addwfc	fsr2h,f,c
  1489  006F86  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1490  006F8A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1491  006F8E  EC06  F036         	call	___wmul	;wreg free
  1492  006F92  5001               	movf	?___wmul,w,c
  1493  006F94  2651               	addwf	??_main+4,f,c
  1494  006F96  5002               	movf	?___wmul+1,w,c
  1495  006F98  2252               	addwfc	??_main+5,f,c
  1496  006F9A  0E65               	movlw	low _realNumbers
  1497  006F9C  6E57               	movwf	(??_main+10)& (0+255),c
  1498  006F9E  0E00               	movlw	high _realNumbers
  1499  006FA0  6E58               	movwf	(??_main+11)& (0+255),c
  1500  006FA2  90D8               	bcf	status,0,c
  1501  006FA4  0100               	movlb	0	; () banked
  1502  006FA6  35F1               	rlcf	main@k& (0+255),w,b
  1503  006FA8  6ED9               	movwf	fsr2l,c
  1504  006FAA  0100               	movlb	0	; () banked
  1505  006FAC  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1506  006FAE  6EDA               	movwf	fsr2h,c
  1507  006FB0  5057               	movf	??_main+10,w,c
  1508  006FB2  26D9               	addwf	fsr2l,f,c
  1509  006FB4  5058               	movf	??_main+11,w,c
  1510  006FB6  22DA               	addwfc	fsr2h,f,c
  1511  006FB8  C051  FFDE         	movff	??_main+4,postinc2
  1512  006FBC  C052  FFDD         	movff	??_main+5,postdec2
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;main pic18.c: 108: place = 0x40000000;
  1516  006FC0  0E00               	movlw	0
  1517  006FC2  0100               	movlb	0	; () banked
  1518  006FC4  6FED               	movwf	main@place& (0+255),b
  1519  006FC6  0E00               	movlw	0
  1520  006FC8  0100               	movlb	0	; () banked
  1521  006FCA  6FEE               	movwf	(main@place+1)& (0+255),b
  1522  006FCC  0E00               	movlw	0
  1523  006FCE  0100               	movlb	0	; () banked
  1524  006FD0  6FEF               	movwf	(main@place+2)& (0+255),b
  1525  006FD2  0E40               	movlw	64
  1526  006FD4  0100               	movlb	0	; () banked
  1527  006FD6  6FF0               	movwf	(main@place+3)& (0+255),b
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;main pic18.c: 109: root = 0;
  1531  006FD8  0E00               	movlw	0
  1532  006FDA  0100               	movlb	0	; () banked
  1533  006FDC  6FE7               	movwf	main@root& (0+255),b
  1534  006FDE  0E00               	movlw	0
  1535  006FE0  0100               	movlb	0	; () banked
  1536  006FE2  6FE8               	movwf	(main@root+1)& (0+255),b
  1537  006FE4  0E00               	movlw	0
  1538  006FE6  0100               	movlb	0	; () banked
  1539  006FE8  6FE9               	movwf	(main@root+2)& (0+255),b
  1540  006FEA  0E00               	movlw	0
  1541  006FEC  0100               	movlb	0	; () banked
  1542  006FEE  6FEA               	movwf	(main@root+3)& (0+255),b
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;main pic18.c: 111: if (realNumbers[k] >= 0) {
  1546  006FF0  0E65               	movlw	low _realNumbers
  1547  006FF2  6E4D               	movwf	??_main& (0+255),c
  1548  006FF4  0E00               	movlw	high _realNumbers
  1549  006FF6  6E4E               	movwf	(??_main+1)& (0+255),c
  1550  006FF8  90D8               	bcf	status,0,c
  1551  006FFA  0100               	movlb	0	; () banked
  1552  006FFC  35F1               	rlcf	main@k& (0+255),w,b
  1553  006FFE  6ED9               	movwf	fsr2l,c
  1554  007000  0100               	movlb	0	; () banked
  1555  007002  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1556  007004  6EDA               	movwf	fsr2h,c
  1557  007006  504D               	movf	??_main,w,c
  1558  007008  26D9               	addwf	fsr2l,f,c
  1559  00700A  504E               	movf	??_main+1,w,c
  1560  00700C  22DA               	addwfc	fsr2h,f,c
  1561  00700E  CFDE F04F          	movff	postinc2,??_main+2
  1562  007012  CFDD F050          	movff	postdec2,??_main+3
  1563  007016  AE50               	btfss	??_main+3,7,c
  1564  007018  D021               	goto	l1342
  1565  00701A  D105               	goto	l1356
  1566  00701C                     l1340:
  1567                           
  1568                           ; BSR set to: 0
  1569  00701C  0E02               	movlw	2
  1570  00701E  6E4D               	movwf	??_main& (0+255),c
  1571  007020  0100               	movlb	0	; () banked
  1572  007022  C0ED  F04E         	movff	main@place,??_main+1
  1573  007026  0100               	movlb	0	; () banked
  1574  007028  C0EE  F04F         	movff	main@place+1,??_main+2
  1575  00702C  0100               	movlb	0	; () banked
  1576  00702E  C0EF  F050         	movff	main@place+2,??_main+3
  1577  007032  0100               	movlb	0	; () banked
  1578  007034  C0F0  F051         	movff	main@place+3,??_main+4
  1579  007038                     u755:
  1580  007038  664D               	tstfsz	??_main,c
  1581  00703A  D001               	goto	u756
  1582  00703C  D007               	goto	u757
  1583  00703E                     u756:
  1584  00703E  3451               	rlcf	??_main+4,w,c
  1585  007040  3251               	rrcf	??_main+4,f,c
  1586  007042  3250               	rrcf	??_main+3,f,c
  1587  007044  324F               	rrcf	??_main+2,f,c
  1588  007046  324E               	rrcf	??_main+1,f,c
  1589  007048  2E4D               	decfsz	??_main,f,c
  1590  00704A  D7F6               	goto	u755
  1591  00704C                     u757:
  1592  00704C  C04E  F0ED         	movff	??_main+1,main@place
  1593  007050  C04F  F0EE         	movff	??_main+2,main@place+1
  1594  007054  C050  F0EF         	movff	??_main+3,main@place+2
  1595  007058  C051  F0F0         	movff	??_main+4,main@place+3
  1596  00705C                     l1342:
  1597                           
  1598                           ; BSR set to: 0
  1599  00705C  0E65               	movlw	low _realNumbers
  1600  00705E  6E4D               	movwf	??_main& (0+255),c
  1601  007060  0E00               	movlw	high _realNumbers
  1602  007062  6E4E               	movwf	(??_main+1)& (0+255),c
  1603  007064  90D8               	bcf	status,0,c
  1604  007066  0100               	movlb	0	; () banked
  1605  007068  35F1               	rlcf	main@k& (0+255),w,b
  1606  00706A  6ED9               	movwf	fsr2l,c
  1607  00706C  0100               	movlb	0	; () banked
  1608  00706E  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1609  007070  6EDA               	movwf	fsr2h,c
  1610  007072  504D               	movf	??_main,w,c
  1611  007074  26D9               	addwf	fsr2l,f,c
  1612  007076  504E               	movf	??_main+1,w,c
  1613  007078  22DA               	addwfc	fsr2h,f,c
  1614  00707A  CFDE F04F          	movff	postinc2,??_main+2
  1615  00707E  CFDD F050          	movff	postdec2,??_main+3
  1616  007082  C04F  F051         	movff	??_main+2,??_main+4
  1617  007086  C050  F052         	movff	??_main+3,??_main+5
  1618  00708A  0E00               	movlw	0
  1619  00708C  BE52               	btfsc	(??_main+5)& (0+255),7,c
  1620  00708E  0EFF               	movlw	255
  1621  007090  6E53               	movwf	(??_main+6)& (0+255),c
  1622  007092  6E54               	movwf	(??_main+7)& (0+255),c
  1623  007094  5054               	movf	??_main+7,w,c
  1624  007096  0A80               	xorlw	128
  1625  007098  6E55               	movwf	(??_main+8)& (0+255),c
  1626  00709A  0100               	movlb	0	; () banked
  1627  00709C  51ED               	movf	main@place& (0+255),w,b
  1628  00709E  5C51               	subwf	??_main+4,w,c
  1629  0070A0  0100               	movlb	0	; () banked
  1630  0070A2  51EE               	movf	(main@place+1)& (0+255),w,b
  1631  0070A4  5852               	subwfb	??_main+5,w,c
  1632  0070A6  0100               	movlb	0	; () banked
  1633  0070A8  51EF               	movf	(main@place+2)& (0+255),w,b
  1634  0070AA  5853               	subwfb	??_main+6,w,c
  1635  0070AC  0100               	movlb	0	; () banked
  1636  0070AE  51F0               	movf	(main@place+3)& (0+255),w,b
  1637  0070B0  0A80               	xorlw	128
  1638  0070B2  5855               	subwfb	(??_main+8)& (0+255),w,c
  1639  0070B4  B0D8               	btfsc	status,0,c
  1640  0070B6  D0B0               	goto	l1354
  1641  0070B8  D7B1               	goto	l1340
  1642  0070BA                     l1344:
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;main pic18.c: 116: if (realNumbers[k] >= root + place) {
  1646  0070BA  0100               	movlb	0	; () banked
  1647  0070BC  51ED               	movf	main@place& (0+255),w,b
  1648  0070BE  0100               	movlb	0	; () banked
  1649  0070C0  25E7               	addwf	main@root& (0+255),w,b
  1650  0070C2  6E4D               	movwf	??_main& (0+255),c
  1651  0070C4  0100               	movlb	0	; () banked
  1652  0070C6  51EE               	movf	(main@place+1)& (0+255),w,b
  1653  0070C8  0100               	movlb	0	; () banked
  1654  0070CA  21E8               	addwfc	(main@root+1)& (0+255),w,b
  1655  0070CC  6E4E               	movwf	(??_main+1)& (0+255),c
  1656  0070CE  0100               	movlb	0	; () banked
  1657  0070D0  51EF               	movf	(main@place+2)& (0+255),w,b
  1658  0070D2  0100               	movlb	0	; () banked
  1659  0070D4  21E9               	addwfc	(main@root+2)& (0+255),w,b
  1660  0070D6  6E4F               	movwf	(??_main+2)& (0+255),c
  1661  0070D8  0100               	movlb	0	; () banked
  1662  0070DA  51F0               	movf	(main@place+3)& (0+255),w,b
  1663  0070DC  0100               	movlb	0	; () banked
  1664  0070DE  21EA               	addwfc	(main@root+3)& (0+255),w,b
  1665  0070E0  6E50               	movwf	(??_main+3)& (0+255),c
  1666  0070E2  0E65               	movlw	low _realNumbers
  1667  0070E4  6E51               	movwf	(??_main+4)& (0+255),c
  1668  0070E6  0E00               	movlw	high _realNumbers
  1669  0070E8  6E52               	movwf	(??_main+5)& (0+255),c
  1670  0070EA  90D8               	bcf	status,0,c
  1671  0070EC  0100               	movlb	0	; () banked
  1672  0070EE  35F1               	rlcf	main@k& (0+255),w,b
  1673  0070F0  6ED9               	movwf	fsr2l,c
  1674  0070F2  0100               	movlb	0	; () banked
  1675  0070F4  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1676  0070F6  6EDA               	movwf	fsr2h,c
  1677  0070F8  5051               	movf	??_main+4,w,c
  1678  0070FA  26D9               	addwf	fsr2l,f,c
  1679  0070FC  5052               	movf	??_main+5,w,c
  1680  0070FE  22DA               	addwfc	fsr2h,f,c
  1681  007100  CFDE F053          	movff	postinc2,??_main+6
  1682  007104  CFDD F054          	movff	postdec2,??_main+7
  1683  007108  C053  F055         	movff	??_main+6,??_main+8
  1684  00710C  C054  F056         	movff	??_main+7,??_main+9
  1685  007110  0E00               	movlw	0
  1686  007112  BE56               	btfsc	(??_main+9)& (0+255),7,c
  1687  007114  0EFF               	movlw	255
  1688  007116  6E57               	movwf	(??_main+10)& (0+255),c
  1689  007118  6E58               	movwf	(??_main+11)& (0+255),c
  1690  00711A  5058               	movf	??_main+11,w,c
  1691  00711C  0A80               	xorlw	128
  1692  00711E  6E59               	movwf	(??_main+12)& (0+255),c
  1693  007120  504D               	movf	??_main,w,c
  1694  007122  5C55               	subwf	??_main+8,w,c
  1695  007124  504E               	movf	??_main+1,w,c
  1696  007126  5856               	subwfb	??_main+9,w,c
  1697  007128  504F               	movf	??_main+2,w,c
  1698  00712A  5857               	subwfb	??_main+10,w,c
  1699  00712C  5050               	movf	??_main+3,w,c
  1700  00712E  0A80               	xorlw	128
  1701  007130  5859               	subwfb	(??_main+12)& (0+255),w,c
  1702  007132  A0D8               	btfss	status,0,c
  1703  007134  D038               	goto	l1350
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;main pic18.c: 117: realNumbers[k] -= root + place;
  1707  007136  0100               	movlb	0	; () banked
  1708  007138  C0E7  F04D         	movff	main@root,??_main
  1709  00713C  0100               	movlb	0	; () banked
  1710  00713E  C0E8  F04E         	movff	main@root+1,??_main+1
  1711  007142  0100               	movlb	0	; () banked
  1712  007144  51ED               	movf	main@place& (0+255),w,b
  1713  007146  264D               	addwf	??_main,f,c
  1714  007148  0100               	movlb	0	; () banked
  1715  00714A  51EE               	movf	(main@place+1)& (0+255),w,b
  1716  00714C  224E               	addwfc	??_main+1,f,c
  1717  00714E  0E65               	movlw	low _realNumbers
  1718  007150  6E4F               	movwf	(??_main+2)& (0+255),c
  1719  007152  0E00               	movlw	high _realNumbers
  1720  007154  6E50               	movwf	(??_main+3)& (0+255),c
  1721  007156  90D8               	bcf	status,0,c
  1722  007158  0100               	movlb	0	; () banked
  1723  00715A  35F1               	rlcf	main@k& (0+255),w,b
  1724  00715C  6ED9               	movwf	fsr2l,c
  1725  00715E  0100               	movlb	0	; () banked
  1726  007160  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1727  007162  6EDA               	movwf	fsr2h,c
  1728  007164  504F               	movf	??_main+2,w,c
  1729  007166  26D9               	addwf	fsr2l,f,c
  1730  007168  5050               	movf	??_main+3,w,c
  1731  00716A  22DA               	addwfc	fsr2h,f,c
  1732  00716C  504D               	movf	??_main,w,c
  1733  00716E  5EDE               	subwf	postinc2,f,c
  1734  007170  504E               	movf	??_main+1,w,c
  1735  007172  5ADD               	subwfb	postdec2,f,c
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;main pic18.c: 118: root += place * 2;
  1739  007174  90D8               	bcf	status,0,c
  1740  007176  0100               	movlb	0	; () banked
  1741  007178  35ED               	rlcf	main@place& (0+255),w,b
  1742  00717A  6E4D               	movwf	??_main& (0+255),c
  1743  00717C  0100               	movlb	0	; () banked
  1744  00717E  35EE               	rlcf	(main@place+1)& (0+255),w,b
  1745  007180  6E4E               	movwf	(??_main+1)& (0+255),c
  1746  007182  0100               	movlb	0	; () banked
  1747  007184  35EF               	rlcf	(main@place+2)& (0+255),w,b
  1748  007186  6E4F               	movwf	(??_main+2)& (0+255),c
  1749  007188  0100               	movlb	0	; () banked
  1750  00718A  35F0               	rlcf	(main@place+3)& (0+255),w,b
  1751  00718C  6E50               	movwf	(??_main+3)& (0+255),c
  1752  00718E  504D               	movf	??_main,w,c
  1753  007190  0100               	movlb	0	; () banked
  1754  007192  27E7               	addwf	main@root& (0+255),f,b
  1755  007194  504E               	movf	??_main+1,w,c
  1756  007196  0100               	movlb	0	; () banked
  1757  007198  23E8               	addwfc	(main@root+1)& (0+255),f,b
  1758  00719A  504F               	movf	??_main+2,w,c
  1759  00719C  0100               	movlb	0	; () banked
  1760  00719E  23E9               	addwfc	(main@root+2)& (0+255),f,b
  1761  0071A0  5050               	movf	??_main+3,w,c
  1762  0071A2  0100               	movlb	0	; () banked
  1763  0071A4  23EA               	addwfc	(main@root+3)& (0+255),f,b
  1764  0071A6                     l1350:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;main pic18.c: 119: }
  1768                           ;main pic18.c: 121: root = root >> 1;
  1769  0071A6  0100               	movlb	0	; () banked
  1770  0071A8  C0E7  F04D         	movff	main@root,??_main
  1771  0071AC  0100               	movlb	0	; () banked
  1772  0071AE  C0E8  F04E         	movff	main@root+1,??_main+1
  1773  0071B2  0100               	movlb	0	; () banked
  1774  0071B4  C0E9  F04F         	movff	main@root+2,??_main+2
  1775  0071B8  0100               	movlb	0	; () banked
  1776  0071BA  C0EA  F050         	movff	main@root+3,??_main+3
  1777  0071BE  3450               	rlcf	??_main+3,w,c
  1778  0071C0  3250               	rrcf	??_main+3,f,c
  1779  0071C2  324F               	rrcf	??_main+2,f,c
  1780  0071C4  324E               	rrcf	??_main+1,f,c
  1781  0071C6  324D               	rrcf	??_main,f,c
  1782  0071C8  C04D  F0E7         	movff	??_main,main@root
  1783  0071CC  C04E  F0E8         	movff	??_main+1,main@root+1
  1784  0071D0  C04F  F0E9         	movff	??_main+2,main@root+2
  1785  0071D4  C050  F0EA         	movff	??_main+3,main@root+3
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main pic18.c: 122: place = place >> 2;
  1789  0071D8  0E02               	movlw	2
  1790  0071DA  6E4D               	movwf	??_main& (0+255),c
  1791  0071DC  0100               	movlb	0	; () banked
  1792  0071DE  C0ED  F04E         	movff	main@place,??_main+1
  1793  0071E2  0100               	movlb	0	; () banked
  1794  0071E4  C0EE  F04F         	movff	main@place+1,??_main+2
  1795  0071E8  0100               	movlb	0	; () banked
  1796  0071EA  C0EF  F050         	movff	main@place+2,??_main+3
  1797  0071EE  0100               	movlb	0	; () banked
  1798  0071F0  C0F0  F051         	movff	main@place+3,??_main+4
  1799  0071F4                     u785:
  1800  0071F4  664D               	tstfsz	??_main,c
  1801  0071F6  D001               	goto	u786
  1802  0071F8  D007               	goto	u787
  1803  0071FA                     u786:
  1804  0071FA  3451               	rlcf	??_main+4,w,c
  1805  0071FC  3251               	rrcf	??_main+4,f,c
  1806  0071FE  3250               	rrcf	??_main+3,f,c
  1807  007200  324F               	rrcf	??_main+2,f,c
  1808  007202  324E               	rrcf	??_main+1,f,c
  1809  007204  2E4D               	decfsz	??_main,f,c
  1810  007206  D7F6               	goto	u785
  1811  007208                     u787:
  1812  007208  C04E  F0ED         	movff	??_main+1,main@place
  1813  00720C  C04F  F0EE         	movff	??_main+2,main@place+1
  1814  007210  C050  F0EF         	movff	??_main+3,main@place+2
  1815  007214  C051  F0F0         	movff	??_main+4,main@place+3
  1816  007218                     l1354:
  1817                           
  1818                           ; BSR set to: 0
  1819  007218  0100               	movlb	0	; () banked
  1820  00721A  51F0               	movf	(main@place+3)& (0+255),w,b
  1821  00721C  11ED               	iorwf	main@place& (0+255),w,b
  1822  00721E  11EE               	iorwf	(main@place+1)& (0+255),w,b
  1823  007220  11EF               	iorwf	(main@place+2)& (0+255),w,b
  1824  007222  A4D8               	btfss	status,2,c
  1825  007224  D74A               	goto	l1344
  1826  007226                     l1356:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;main pic18.c: 123: }
  1830                           ;main pic18.c: 124: }
  1831                           ;main pic18.c: 126: realNumbers[k] = root;
  1832  007226  0E65               	movlw	low _realNumbers
  1833  007228  6E4D               	movwf	??_main& (0+255),c
  1834  00722A  0E00               	movlw	high _realNumbers
  1835  00722C  6E4E               	movwf	(??_main+1)& (0+255),c
  1836  00722E  90D8               	bcf	status,0,c
  1837  007230  0100               	movlb	0	; () banked
  1838  007232  35F1               	rlcf	main@k& (0+255),w,b
  1839  007234  6ED9               	movwf	fsr2l,c
  1840  007236  0100               	movlb	0	; () banked
  1841  007238  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1842  00723A  6EDA               	movwf	fsr2h,c
  1843  00723C  504D               	movf	??_main,w,c
  1844  00723E  26D9               	addwf	fsr2l,f,c
  1845  007240  504E               	movf	??_main+1,w,c
  1846  007242  22DA               	addwfc	fsr2h,f,c
  1847  007244  0100               	movlb	0	; () banked
  1848  007246  C0E7  FFDE         	movff	main@root,postinc2
  1849  00724A  0100               	movlb	0	; () banked
  1850  00724C  C0E8  FFDD         	movff	main@root+1,postdec2
  1851                           
  1852                           ; BSR set to: 0
  1853  007250  0100               	movlb	0	; () banked
  1854  007252  4BF1               	infsnz	main@k& (0+255),f,b
  1855  007254  2BF2               	incf	(main@k+1)& (0+255),f,b
  1856  007256  D640               	goto	L2
  1857  007258                     l1362:
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;main pic18.c: 127: }
  1861                           ;main pic18.c: 129: sendIntArray(realNumbers, 64);
  1862  007258  0100               	movlb	0	; () banked
  1863  00725A  0E00               	movlw	high _realNumbers
  1864  00725C  6E03               	movwf	sendIntArray@array+1,c
  1865  00725E  0100               	movlb	0	; () banked
  1866  007260  0E65               	movlw	low _realNumbers
  1867  007262  6E02               	movwf	sendIntArray@array,c
  1868  007264  0E00               	movlw	0
  1869  007266  6E05               	movwf	sendIntArray@size+1,c
  1870  007268  0E40               	movlw	64
  1871  00726A  6E04               	movwf	sendIntArray@size,c
  1872  00726C  EC2E  F036         	call	_sendIntArray	;wreg free
  1873  007270  D5C1               	goto	l1300
  1874  007272                     __end_of_main:
  1875                           	opt stack 0
  1876                           tblptru	equ	0xFF8
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           postinc2	equ	0xFDE
  1880                           postdec2	equ	0xFDD
  1881                           fsr2h	equ	0xFDA
  1882                           fsr2l	equ	0xFD9
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function _sendIntArray *****************
  1886 ;; Defined at:
  1887 ;;		line 190 in file "main pic18.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  array           2    1[COMRAM] PTR short 
  1890 ;;		 -> realNumbers(128), 
  1891 ;;  size            2    3[COMRAM] unsigned int 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;		None               void
  1896 ;; Registers used:
  1897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1903 ;;      Params:         4       0       0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0
  1906 ;;      Totals:         4       0       0       0       0       0       0
  1907 ;;Total ram usage:        4 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    2
  1910 ;; This function calls:
  1911 ;;		_sendChar
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text1
  1918  006C5C                     __ptext1:
  1919                           	opt stack 0
  1920  006C5C                     _sendIntArray:
  1921                           	opt stack 28
  1922                           
  1923                           ;main pic18.c: 191: for(i = 0; i < size; i++) {
  1924                           
  1925                           ;incstack = 0
  1926  006C5C  0E00               	movlw	0
  1927  006C5E  6E5B               	movwf	_i+1,c
  1928  006C60  0E00               	movlw	0
  1929  006C62  6E5A               	movwf	_i,c
  1930  006C64  D00E               	goto	l1270
  1931  006C66                     l1266:
  1932                           
  1933                           ;main pic18.c: 192: sendChar(array[i]);
  1934  006C66  90D8               	bcf	status,0,c
  1935  006C68  345A               	rlcf	_i,w,c
  1936  006C6A  6ED9               	movwf	fsr2l,c
  1937  006C6C  345B               	rlcf	_i+1,w,c
  1938  006C6E  6EDA               	movwf	fsr2h,c
  1939  006C70  5002               	movf	sendIntArray@array,w,c
  1940  006C72  26D9               	addwf	fsr2l,f,c
  1941  006C74  5003               	movf	sendIntArray@array+1,w,c
  1942  006C76  22DA               	addwfc	fsr2h,f,c
  1943  006C78  50DF               	movf	indf2,w,c
  1944  006C7A  ECFC  F035         	call	_sendChar
  1945  006C7E  4A5A               	infsnz	_i,f,c
  1946  006C80  2A5B               	incf	_i+1,f,c
  1947  006C82                     l1270:
  1948  006C82  5004               	movf	sendIntArray@size,w,c
  1949  006C84  5C5A               	subwf	_i,w,c
  1950  006C86  5005               	movf	sendIntArray@size+1,w,c
  1951  006C88  585B               	subwfb	_i+1,w,c
  1952  006C8A  B0D8               	btfsc	status,0,c
  1953  006C8C  0012               	return	
  1954  006C8E  D7EB               	goto	l1266
  1955  006C90                     __end_of_sendIntArray:
  1956                           	opt stack 0
  1957                           tblptru	equ	0xFF8
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           indf2	equ	0xFDF
  1961                           postinc2	equ	0xFDE
  1962                           postdec2	equ	0xFDD
  1963                           fsr2h	equ	0xFDA
  1964                           fsr2l	equ	0xFD9
  1965                           status	equ	0xFD8
  1966                           
  1967 ;; *************** function _sendChar *****************
  1968 ;; Defined at:
  1969 ;;		line 184 in file "main pic18.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  character       1    wreg     unsigned char 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  character       1    0[COMRAM] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;		None               void
  1976 ;; Registers used:
  1977 ;;		wreg, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1983 ;;      Params:         0       0       0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0
  1986 ;;      Totals:         0       0       0       0       0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    1
  1990 ;; This function calls:
  1991 ;;		_Write1USART
  1992 ;; This function is called by:
  1993 ;;		_sendIntArray
  1994 ;;		_sendCharArray
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text2
  1999  006BF8                     __ptext2:
  2000                           	opt stack 0
  2001  006BF8                     _sendChar:
  2002                           	opt stack 28
  2003  006BF8                     l90:
  2004  006BF8  A2AC               	btfss	4012,1,c	;volatile
  2005  006BFA  D7FE               	goto	l90
  2006                           
  2007                           ;main pic18.c: 186: Write1USART(0x55);
  2008  006BFC  0E55               	movlw	85
  2009  006BFE  ECF3  F035         	call	_Write1USART
  2010                           
  2011                           ;main pic18.c: 187: _delay(10);
  2012  006C02  0E03               	movlw	3
  2013  006C04                     u827:
  2014  006C04  2EE8               	decfsz	wreg,f,c
  2015  006C06  D7FE               	goto	u827
  2016  006C08  F000               	nop	
  2017  006C0A  0012               	return	
  2018  006C0C                     __end_of_sendChar:
  2019                           	opt stack 0
  2020                           tblptru	equ	0xFF8
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           indf2	equ	0xFDF
  2024                           postinc2	equ	0xFDE
  2025                           postdec2	equ	0xFDD
  2026                           fsr2h	equ	0xFDA
  2027                           fsr2l	equ	0xFD9
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _Write1USART *****************
  2031 ;; Defined at:
  2032 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1write.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  data            1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  data            1    0[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;		None               void
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2046 ;;      Params:         0       0       0       0       0       0       0
  2047 ;;      Locals:         1       0       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0
  2049 ;;      Totals:         1       0       0       0       0       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_sendChar
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text3
  2060  006BE6                     __ptext3:
  2061                           	opt stack 0
  2062  006BE6                     _Write1USART:
  2063                           	opt stack 28
  2064                           
  2065                           ;incstack = 0
  2066                           ;Write1USART@data stored from wreg
  2067  006BE6  6E01               	movwf	Write1USART@data,c
  2068  006BE8  ACAC               	btfss	4012,6,c	;volatile
  2069  006BEA  D003               	goto	l1090
  2070  006BEC  90AC               	bcf	4012,0,c	;volatile
  2071  006BEE  B25C               	btfsc	_USART1_Status,1,c
  2072  006BF0  80AC               	bsf	4012,0,c	;volatile
  2073  006BF2                     l1090:
  2074  006BF2  C001  FFAD         	movff	Write1USART@data,4013	;volatile
  2075  006BF6  0012               	return	
  2076  006BF8                     __end_of_Write1USART:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           postinc0	equ	0xFEE
  2080                           wreg	equ	0xFE8
  2081                           indf2	equ	0xFDF
  2082                           postinc2	equ	0xFDE
  2083                           postdec2	equ	0xFDD
  2084                           fsr2h	equ	0xFDA
  2085                           fsr2l	equ	0xFD9
  2086                           status	equ	0xFD8
  2087                           
  2088 ;; *************** function _fix_fft *****************
  2089 ;; Defined at:
  2090 ;;		line 155 in file "fft.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  fr              2   12[COMRAM] PTR short 
  2093 ;;		 -> realNumbers(128), 
  2094 ;;  fi              2   14[COMRAM] PTR short 
  2095 ;;		 -> imaginaryNumbers(128), 
  2096 ;;  m               2   16[COMRAM] short 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  c               4   72[COMRAM] long 
  2099 ;;  b               2   54[COMRAM] short 
  2100 ;;  j               4   68[COMRAM] long 
  2101 ;;  l               4   64[COMRAM] long 
  2102 ;;  mr              4   60[COMRAM] long 
  2103 ;;  i               4   56[COMRAM] long 
  2104 ;;  n               4   46[COMRAM] long 
  2105 ;;  istep           4   34[COMRAM] long 
  2106 ;;  nn              4   30[COMRAM] long 
  2107 ;;  k               4   26[COMRAM] long 
  2108 ;;  ti              2   52[COMRAM] short 
  2109 ;;  tr              2   50[COMRAM] short 
  2110 ;;  wi              2   44[COMRAM] short 
  2111 ;;  wr              2   42[COMRAM] short 
  2112 ;;  qi              2   40[COMRAM] short 
  2113 ;;  qr              2   38[COMRAM] short 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2123 ;;      Params:         6       0       0       0       0       0       0
  2124 ;;      Locals:        50       0       0       0       0       0       0
  2125 ;;      Temps:          8       0       0       0       0       0       0
  2126 ;;      Totals:        64       0       0       0       0       0       0
  2127 ;;Total ram usage:       64 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    1
  2130 ;; This function calls:
  2131 ;;		___lmul
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text4
  2138  007272                     __ptext4:
  2139                           	opt stack 0
  2140  007272                     _fix_fft:
  2141                           	opt stack 29
  2142                           
  2143                           ;fft.c: 157: long int mr = 0, nn, i, j, l, k, istep, n;
  2144                           
  2145                           ;incstack = 0
  2146  007272  0E00               	movlw	0
  2147  007274  6E3D               	movwf	fix_fft@mr,c
  2148  007276  0E00               	movlw	0
  2149  007278  6E3E               	movwf	fix_fft@mr+1,c
  2150  00727A  0E00               	movlw	0
  2151  00727C  6E3F               	movwf	fix_fft@mr+2,c
  2152  00727E  0E00               	movlw	0
  2153  007280  6E40               	movwf	fix_fft@mr+3,c
  2154                           
  2155                           ;fft.c: 158: short qr, qi, tr, ti, wr, wi;
  2156                           ;fft.c: 160: n = 1 << m;
  2157  007282  C011  F013         	movff	fix_fft@m,??_fix_fft
  2158  007286  0E01               	movlw	1
  2159  007288  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2160  00728A  6A15               	clrf	(??_fix_fft+2)& (0+255),c
  2161  00728C  2A13               	incf	??_fix_fft,f,c
  2162  00728E  D003               	goto	u574
  2163  007290                     u575:
  2164  007290  90D8               	bcf	status,0,c
  2165  007292  3614               	rlcf	??_fix_fft+1,f,c
  2166  007294  3615               	rlcf	??_fix_fft+2,f,c
  2167  007296                     u574:
  2168  007296  2E13               	decfsz	??_fix_fft,f,c
  2169  007298  D7FB               	goto	u575
  2170  00729A  C014  F02F         	movff	??_fix_fft+1,fix_fft@n
  2171  00729E  C015  F030         	movff	??_fix_fft+2,fix_fft@n+1
  2172  0072A2  0E00               	movlw	0
  2173  0072A4  BE30               	btfsc	fix_fft@n+1,7,c
  2174  0072A6  0EFF               	movlw	-1
  2175  0072A8  6E31               	movwf	fix_fft@n+2,c
  2176  0072AA  6E32               	movwf	fix_fft@n+3,c
  2177                           
  2178                           ;fft.c: 161: nn = n - 1;
  2179  0072AC  0EFF               	movlw	255
  2180  0072AE  242F               	addwf	fix_fft@n,w,c
  2181  0072B0  6E1F               	movwf	fix_fft@nn,c
  2182  0072B2  0EFF               	movlw	255
  2183  0072B4  2030               	addwfc	fix_fft@n+1,w,c
  2184  0072B6  6E20               	movwf	fix_fft@nn+1,c
  2185  0072B8  0EFF               	movlw	255
  2186  0072BA  2031               	addwfc	fix_fft@n+2,w,c
  2187  0072BC  6E21               	movwf	fix_fft@nn+2,c
  2188  0072BE  0EFF               	movlw	255
  2189  0072C0  2032               	addwfc	fix_fft@n+3,w,c
  2190  0072C2  6E22               	movwf	fix_fft@nn+3,c
  2191                           
  2192                           ;fft.c: 167: for (m=1; m<=nn; ++m)
  2193  0072C4  0E00               	movlw	0
  2194  0072C6  6E12               	movwf	fix_fft@m+1,c
  2195  0072C8  0E01               	movlw	1
  2196  0072CA  6E11               	movwf	fix_fft@m,c
  2197  0072CC  D0C4               	goto	l1194
  2198  0072CE                     l105:
  2199                           
  2200                           ;fft.c: 168: {
  2201                           ;fft.c: 169: l = n;
  2202  0072CE  C02F  F041         	movff	fix_fft@n,fix_fft@l
  2203  0072D2  C030  F042         	movff	fix_fft@n+1,fix_fft@l+1
  2204  0072D6  C031  F043         	movff	fix_fft@n+2,fix_fft@l+2
  2205  0072DA  C032  F044         	movff	fix_fft@n+3,fix_fft@l+3
  2206  0072DE                     l1176:
  2207                           
  2208                           ;fft.c: 171: {
  2209                           ;fft.c: 172: l >>= 1;
  2210  0072DE  3444               	rlcf	fix_fft@l+3,w,c
  2211  0072E0  3244               	rrcf	fix_fft@l+3,f,c
  2212  0072E2  3243               	rrcf	fix_fft@l+2,f,c
  2213  0072E4  3242               	rrcf	fix_fft@l+1,f,c
  2214  0072E6  3241               	rrcf	fix_fft@l,f,c
  2215                           
  2216                           ;fft.c: 173: } while (mr+l > nn);
  2217  0072E8  5041               	movf	fix_fft@l,w,c
  2218  0072EA  243D               	addwf	fix_fft@mr,w,c
  2219  0072EC  6E13               	movwf	??_fix_fft& (0+255),c
  2220  0072EE  5042               	movf	fix_fft@l+1,w,c
  2221  0072F0  203E               	addwfc	fix_fft@mr+1,w,c
  2222  0072F2  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2223  0072F4  5043               	movf	fix_fft@l+2,w,c
  2224  0072F6  203F               	addwfc	fix_fft@mr+2,w,c
  2225  0072F8  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2226  0072FA  5044               	movf	fix_fft@l+3,w,c
  2227  0072FC  2040               	addwfc	fix_fft@mr+3,w,c
  2228  0072FE  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2229  007300  5022               	movf	fix_fft@nn+3,w,c
  2230  007302  0A80               	xorlw	128
  2231  007304  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2232  007306  5013               	movf	??_fix_fft,w,c
  2233  007308  5C1F               	subwf	fix_fft@nn,w,c
  2234  00730A  5014               	movf	??_fix_fft+1,w,c
  2235  00730C  5820               	subwfb	fix_fft@nn+1,w,c
  2236  00730E  5015               	movf	??_fix_fft+2,w,c
  2237  007310  5821               	subwfb	fix_fft@nn+2,w,c
  2238  007312  5016               	movf	??_fix_fft+3,w,c
  2239  007314  0A80               	xorlw	128
  2240  007316  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2241  007318  A0D8               	btfss	status,0,c
  2242  00731A  D7E1               	goto	l1176
  2243                           
  2244                           ;fft.c: 175: mr = (mr & (l-1)) + l;
  2245  00731C  0EFF               	movlw	255
  2246  00731E  2441               	addwf	fix_fft@l,w,c
  2247  007320  6E13               	movwf	??_fix_fft& (0+255),c
  2248  007322  0EFF               	movlw	255
  2249  007324  2042               	addwfc	fix_fft@l+1,w,c
  2250  007326  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2251  007328  0EFF               	movlw	255
  2252  00732A  2043               	addwfc	fix_fft@l+2,w,c
  2253  00732C  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2254  00732E  0EFF               	movlw	255
  2255  007330  2044               	addwfc	fix_fft@l+3,w,c
  2256  007332  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2257  007334  503D               	movf	fix_fft@mr,w,c
  2258  007336  1413               	andwf	??_fix_fft,w,c
  2259  007338  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2260  00733A  503E               	movf	fix_fft@mr+1,w,c
  2261  00733C  1414               	andwf	??_fix_fft+1,w,c
  2262  00733E  6E18               	movwf	(??_fix_fft+5)& (0+255),c
  2263  007340  503F               	movf	fix_fft@mr+2,w,c
  2264  007342  1415               	andwf	??_fix_fft+2,w,c
  2265  007344  6E19               	movwf	(??_fix_fft+6)& (0+255),c
  2266  007346  5040               	movf	fix_fft@mr+3,w,c
  2267  007348  1416               	andwf	??_fix_fft+3,w,c
  2268  00734A  6E1A               	movwf	(??_fix_fft+7)& (0+255),c
  2269  00734C  5041               	movf	fix_fft@l,w,c
  2270  00734E  2417               	addwf	??_fix_fft+4,w,c
  2271  007350  6E3D               	movwf	fix_fft@mr,c
  2272  007352  5042               	movf	fix_fft@l+1,w,c
  2273  007354  2018               	addwfc	??_fix_fft+5,w,c
  2274  007356  6E3E               	movwf	fix_fft@mr+1,c
  2275  007358  5043               	movf	fix_fft@l+2,w,c
  2276  00735A  2019               	addwfc	??_fix_fft+6,w,c
  2277  00735C  6E3F               	movwf	fix_fft@mr+2,c
  2278  00735E  5044               	movf	fix_fft@l+3,w,c
  2279  007360  201A               	addwfc	??_fix_fft+7,w,c
  2280  007362  6E40               	movwf	fix_fft@mr+3,c
  2281                           
  2282                           ;fft.c: 176: if (mr <= m) continue;
  2283  007364  C011  F013         	movff	fix_fft@m,??_fix_fft
  2284  007368  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2285  00736C  0E00               	movlw	0
  2286  00736E  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2287  007370  0EFF               	movlw	255
  2288  007372  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2289  007374  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2290  007376  5016               	movf	??_fix_fft+3,w,c
  2291  007378  0A80               	xorlw	128
  2292  00737A  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2293  00737C  503D               	movf	fix_fft@mr,w,c
  2294  00737E  5C13               	subwf	??_fix_fft,w,c
  2295  007380  503E               	movf	fix_fft@mr+1,w,c
  2296  007382  5814               	subwfb	??_fix_fft+1,w,c
  2297  007384  503F               	movf	fix_fft@mr+2,w,c
  2298  007386  5815               	subwfb	??_fix_fft+2,w,c
  2299  007388  5040               	movf	fix_fft@mr+3,w,c
  2300  00738A  0A80               	xorlw	128
  2301  00738C  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2302  00738E  B0D8               	btfsc	status,0,c
  2303  007390  D060               	goto	l1192
  2304                           
  2305                           ;fft.c: 178: tr = fr[m];
  2306  007392  90D8               	bcf	status,0,c
  2307  007394  3411               	rlcf	fix_fft@m,w,c
  2308  007396  6ED9               	movwf	fsr2l,c
  2309  007398  3412               	rlcf	fix_fft@m+1,w,c
  2310  00739A  6EDA               	movwf	fsr2h,c
  2311  00739C  500D               	movf	fix_fft@fr,w,c
  2312  00739E  26D9               	addwf	fsr2l,f,c
  2313  0073A0  500E               	movf	fix_fft@fr+1,w,c
  2314  0073A2  22DA               	addwfc	fsr2h,f,c
  2315  0073A4  CFDE F033          	movff	postinc2,fix_fft@tr
  2316  0073A8  CFDD F034          	movff	postdec2,fix_fft@tr+1
  2317                           
  2318                           ;fft.c: 179: fr[m] = fr[mr];
  2319  0073AC  90D8               	bcf	status,0,c
  2320  0073AE  343D               	rlcf	fix_fft@mr,w,c
  2321  0073B0  6ED9               	movwf	fsr2l,c
  2322  0073B2  343E               	rlcf	fix_fft@mr+1,w,c
  2323  0073B4  6EDA               	movwf	fsr2h,c
  2324  0073B6  500D               	movf	fix_fft@fr,w,c
  2325  0073B8  26D9               	addwf	fsr2l,f,c
  2326  0073BA  500E               	movf	fix_fft@fr+1,w,c
  2327  0073BC  22DA               	addwfc	fsr2h,f,c
  2328  0073BE  90D8               	bcf	status,0,c
  2329  0073C0  3411               	rlcf	fix_fft@m,w,c
  2330  0073C2  6EE1               	movwf	fsr1l,c
  2331  0073C4  3412               	rlcf	fix_fft@m+1,w,c
  2332  0073C6  6EE2               	movwf	fsr1h,c
  2333  0073C8  500D               	movf	fix_fft@fr,w,c
  2334  0073CA  26E1               	addwf	fsr1l,f,c
  2335  0073CC  500E               	movf	fix_fft@fr+1,w,c
  2336  0073CE  22E2               	addwfc	fsr1h,f,c
  2337  0073D0  CFDE FFE6          	movff	postinc2,postinc1
  2338  0073D4  CFDD FFE5          	movff	postdec2,postdec1
  2339                           
  2340                           ;fft.c: 180: fr[mr] = tr;
  2341  0073D8  90D8               	bcf	status,0,c
  2342  0073DA  343D               	rlcf	fix_fft@mr,w,c
  2343  0073DC  6ED9               	movwf	fsr2l,c
  2344  0073DE  343E               	rlcf	fix_fft@mr+1,w,c
  2345  0073E0  6EDA               	movwf	fsr2h,c
  2346  0073E2  500D               	movf	fix_fft@fr,w,c
  2347  0073E4  26D9               	addwf	fsr2l,f,c
  2348  0073E6  500E               	movf	fix_fft@fr+1,w,c
  2349  0073E8  22DA               	addwfc	fsr2h,f,c
  2350  0073EA  C033  FFDE         	movff	fix_fft@tr,postinc2
  2351  0073EE  C034  FFDD         	movff	fix_fft@tr+1,postdec2
  2352                           
  2353                           ;fft.c: 181: ti = fi[m];
  2354  0073F2  90D8               	bcf	status,0,c
  2355  0073F4  3411               	rlcf	fix_fft@m,w,c
  2356  0073F6  6ED9               	movwf	fsr2l,c
  2357  0073F8  3412               	rlcf	fix_fft@m+1,w,c
  2358  0073FA  6EDA               	movwf	fsr2h,c
  2359  0073FC  500F               	movf	fix_fft@fi,w,c
  2360  0073FE  26D9               	addwf	fsr2l,f,c
  2361  007400  5010               	movf	fix_fft@fi+1,w,c
  2362  007402  22DA               	addwfc	fsr2h,f,c
  2363  007404  CFDE F035          	movff	postinc2,fix_fft@ti
  2364  007408  CFDD F036          	movff	postdec2,fix_fft@ti+1
  2365                           
  2366                           ;fft.c: 182: fi[m] = fi[mr];
  2367  00740C  90D8               	bcf	status,0,c
  2368  00740E  343D               	rlcf	fix_fft@mr,w,c
  2369  007410  6ED9               	movwf	fsr2l,c
  2370  007412  343E               	rlcf	fix_fft@mr+1,w,c
  2371  007414  6EDA               	movwf	fsr2h,c
  2372  007416  500F               	movf	fix_fft@fi,w,c
  2373  007418  26D9               	addwf	fsr2l,f,c
  2374  00741A  5010               	movf	fix_fft@fi+1,w,c
  2375  00741C  22DA               	addwfc	fsr2h,f,c
  2376  00741E  90D8               	bcf	status,0,c
  2377  007420  3411               	rlcf	fix_fft@m,w,c
  2378  007422  6EE1               	movwf	fsr1l,c
  2379  007424  3412               	rlcf	fix_fft@m+1,w,c
  2380  007426  6EE2               	movwf	fsr1h,c
  2381  007428  500F               	movf	fix_fft@fi,w,c
  2382  00742A  26E1               	addwf	fsr1l,f,c
  2383  00742C  5010               	movf	fix_fft@fi+1,w,c
  2384  00742E  22E2               	addwfc	fsr1h,f,c
  2385  007430  CFDE FFE6          	movff	postinc2,postinc1
  2386  007434  CFDD FFE5          	movff	postdec2,postdec1
  2387                           
  2388                           ;fft.c: 183: fi[mr] = ti;
  2389  007438  90D8               	bcf	status,0,c
  2390  00743A  343D               	rlcf	fix_fft@mr,w,c
  2391  00743C  6ED9               	movwf	fsr2l,c
  2392  00743E  343E               	rlcf	fix_fft@mr+1,w,c
  2393  007440  6EDA               	movwf	fsr2h,c
  2394  007442  500F               	movf	fix_fft@fi,w,c
  2395  007444  26D9               	addwf	fsr2l,f,c
  2396  007446  5010               	movf	fix_fft@fi+1,w,c
  2397  007448  22DA               	addwfc	fsr2h,f,c
  2398  00744A  C035  FFDE         	movff	fix_fft@ti,postinc2
  2399  00744E  C036  FFDD         	movff	fix_fft@ti+1,postdec2
  2400  007452                     l1192:
  2401  007452  4A11               	infsnz	fix_fft@m,f,c
  2402  007454  2A12               	incf	fix_fft@m+1,f,c
  2403  007456                     l1194:
  2404  007456  C011  F013         	movff	fix_fft@m,??_fix_fft
  2405  00745A  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2406  00745E  0E00               	movlw	0
  2407  007460  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2408  007462  0EFF               	movlw	255
  2409  007464  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2410  007466  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2411  007468  5022               	movf	fix_fft@nn+3,w,c
  2412  00746A  0A80               	xorlw	128
  2413  00746C  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2414  00746E  5013               	movf	??_fix_fft,w,c
  2415  007470  5C1F               	subwf	fix_fft@nn,w,c
  2416  007472  5014               	movf	??_fix_fft+1,w,c
  2417  007474  5820               	subwfb	fix_fft@nn+1,w,c
  2418  007476  5015               	movf	??_fix_fft+2,w,c
  2419  007478  5821               	subwfb	fix_fft@nn+2,w,c
  2420  00747A  5016               	movf	??_fix_fft+3,w,c
  2421  00747C  0A80               	xorlw	128
  2422  00747E  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2423  007480  B0D8               	btfsc	status,0,c
  2424  007482  D725               	goto	l105
  2425                           
  2426                           ;fft.c: 184: }
  2427                           ;fft.c: 186: l = 1;
  2428  007484  0E01               	movlw	1
  2429  007486  6E41               	movwf	fix_fft@l,c
  2430  007488  0E00               	movlw	0
  2431  00748A  6E42               	movwf	fix_fft@l+1,c
  2432  00748C  0E00               	movlw	0
  2433  00748E  6E43               	movwf	fix_fft@l+2,c
  2434  007490  0E00               	movlw	0
  2435  007492  6E44               	movwf	fix_fft@l+3,c
  2436                           
  2437                           ;fft.c: 187: k = 10-1;
  2438  007494  0E09               	movlw	9
  2439  007496  6E1B               	movwf	fix_fft@k,c
  2440  007498  0E00               	movlw	0
  2441  00749A  6E1C               	movwf	fix_fft@k+1,c
  2442  00749C  0E00               	movlw	0
  2443  00749E  6E1D               	movwf	fix_fft@k+2,c
  2444  0074A0  0E00               	movlw	0
  2445  0074A2  6E1E               	movwf	fix_fft@k+3,c
  2446                           
  2447                           ;fft.c: 189: while (l < n)
  2448  0074A4  D29D               	goto	l111
  2449  0074A6                     l1198:
  2450                           
  2451                           ;fft.c: 190: {
  2452                           ;fft.c: 203: long int c;
  2453                           ;fft.c: 204: short b;
  2454                           ;fft.c: 206: istep = l << 1;
  2455  0074A6  90D8               	bcf	status,0,c
  2456  0074A8  3441               	rlcf	fix_fft@l,w,c
  2457  0074AA  6E23               	movwf	fix_fft@istep,c
  2458  0074AC  3442               	rlcf	fix_fft@l+1,w,c
  2459  0074AE  6E24               	movwf	fix_fft@istep+1,c
  2460  0074B0  3443               	rlcf	fix_fft@l+2,w,c
  2461  0074B2  6E25               	movwf	fix_fft@istep+2,c
  2462  0074B4  3444               	rlcf	fix_fft@l+3,w,c
  2463  0074B6  6E26               	movwf	fix_fft@istep+3,c
  2464                           
  2465                           ;fft.c: 207: for (m=0; m<l; ++m)
  2466  0074B8  0E00               	movlw	0
  2467  0074BA  6E12               	movwf	fix_fft@m+1,c
  2468  0074BC  0E00               	movlw	0
  2469  0074BE  6E11               	movwf	fix_fft@m,c
  2470  0074C0  D268               	goto	l1258
  2471  0074C2                     l1202:
  2472                           
  2473                           ;fft.c: 208: {
  2474                           ;fft.c: 209: j = m << k;
  2475  0074C2  C01B  F013         	movff	fix_fft@k,??_fix_fft
  2476  0074C6  C011  F014         	movff	fix_fft@m,??_fix_fft+1
  2477  0074CA  C012  F015         	movff	fix_fft@m+1,??_fix_fft+2
  2478  0074CE  2A13               	incf	??_fix_fft,f,c
  2479  0074D0  D003               	goto	u614
  2480  0074D2                     u615:
  2481  0074D2  90D8               	bcf	status,0,c
  2482  0074D4  3614               	rlcf	??_fix_fft+1,f,c
  2483  0074D6  3615               	rlcf	??_fix_fft+2,f,c
  2484  0074D8                     u614:
  2485  0074D8  2E13               	decfsz	??_fix_fft,f,c
  2486  0074DA  D7FB               	goto	u615
  2487  0074DC  C014  F045         	movff	??_fix_fft+1,fix_fft@j
  2488  0074E0  C015  F046         	movff	??_fix_fft+2,fix_fft@j+1
  2489  0074E4  0E00               	movlw	0
  2490  0074E6  BE46               	btfsc	fix_fft@j+1,7,c
  2491  0074E8  0EFF               	movlw	-1
  2492  0074EA  6E47               	movwf	fix_fft@j+2,c
  2493  0074EC  6E48               	movwf	fix_fft@j+3,c
  2494                           
  2495                           ;fft.c: 211: wr = Sinewave[j+1024/4];
  2496  0074EE  0E00               	movlw	0
  2497  0074F0  6E13               	movwf	??_fix_fft& (0+255),c
  2498  0074F2  0E02               	movlw	2
  2499  0074F4  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2500  0074F6  C045  F015         	movff	fix_fft@j,??_fix_fft+2
  2501  0074FA  C046  F016         	movff	fix_fft@j+1,??_fix_fft+3
  2502  0074FE  90D8               	bcf	status,0,c
  2503  007500  3615               	rlcf	??_fix_fft+2,f,c
  2504  007502  3616               	rlcf	??_fix_fft+3,f,c
  2505  007504  5013               	movf	??_fix_fft,w,c
  2506  007506  2615               	addwf	??_fix_fft+2,f,c
  2507  007508  5014               	movf	??_fix_fft+1,w,c
  2508  00750A  2216               	addwfc	??_fix_fft+3,f,c
  2509  00750C  0EFF               	movlw	low _Sinewave
  2510  00750E  2415               	addwf	??_fix_fft+2,w,c
  2511  007510  6EF6               	movwf	tblptrl,c
  2512  007512  0E79               	movlw	high _Sinewave
  2513  007514  2016               	addwfc	??_fix_fft+3,w,c
  2514  007516  6EF7               	movwf	tblptrh,c
  2515  007518                     	if	0	;There are less than 3 active tblptr bytes
  2516  007518                     	endif
  2517  007518  0009               	tblrd		*+
  2518  00751A  CFF5 F02B          	movff	tablat,fix_fft@wr
  2519  00751E  000A               	tblrd		*-
  2520  007520  CFF5 F02C          	movff	tablat,fix_fft@wr+1
  2521                           
  2522                           ;fft.c: 212: wi = -Sinewave[j];
  2523  007524  C045  F013         	movff	fix_fft@j,??_fix_fft
  2524  007528  C046  F014         	movff	fix_fft@j+1,??_fix_fft+1
  2525  00752C  90D8               	bcf	status,0,c
  2526  00752E  3613               	rlcf	??_fix_fft,f,c
  2527  007530  3614               	rlcf	??_fix_fft+1,f,c
  2528  007532  0EFF               	movlw	low _Sinewave
  2529  007534  2413               	addwf	??_fix_fft,w,c
  2530  007536  6EF6               	movwf	tblptrl,c
  2531  007538  0E79               	movlw	high _Sinewave
  2532  00753A  2014               	addwfc	??_fix_fft+1,w,c
  2533  00753C  6EF7               	movwf	tblptrh,c
  2534  00753E                     	if	0	;There are less than 3 active tblptr bytes
  2535  00753E                     	endif
  2536  00753E  0009               	tblrd		*+
  2537  007540  CFF5 F015          	movff	tablat,??_fix_fft+2
  2538  007544  0009               	tblrd		*+
  2539  007546  CFF5 F016          	movff	tablat,??_fix_fft+3
  2540  00754A  1E15               	comf	??_fix_fft+2,f,c
  2541  00754C  1E16               	comf	??_fix_fft+3,f,c
  2542  00754E  4A15               	infsnz	??_fix_fft+2,f,c
  2543  007550  2A16               	incf	??_fix_fft+3,f,c
  2544  007552  C015  F02D         	movff	??_fix_fft+2,fix_fft@wi
  2545  007556  C016  F02E         	movff	??_fix_fft+3,fix_fft@wi+1
  2546                           
  2547                           ;fft.c: 214: wr >>= 1;
  2548  00755A  342C               	rlcf	fix_fft@wr+1,w,c
  2549  00755C  322C               	rrcf	fix_fft@wr+1,f,c
  2550  00755E  322B               	rrcf	fix_fft@wr,f,c
  2551                           
  2552                           ;fft.c: 215: wi >>= 1;
  2553  007560  342E               	rlcf	fix_fft@wi+1,w,c
  2554  007562  322E               	rrcf	fix_fft@wi+1,f,c
  2555  007564  322D               	rrcf	fix_fft@wi,f,c
  2556                           
  2557                           ;fft.c: 217: for (i=m; i<n; i+=istep)
  2558  007566  C011  F039         	movff	fix_fft@m,fix_fft@i
  2559  00756A  C012  F03A         	movff	fix_fft@m+1,fix_fft@i+1
  2560  00756E  0E00               	movlw	0
  2561  007570  BE3A               	btfsc	fix_fft@i+1,7,c
  2562  007572  0EFF               	movlw	-1
  2563  007574  6E3B               	movwf	fix_fft@i+2,c
  2564  007576  6E3C               	movwf	fix_fft@i+3,c
  2565  007578  D1FC               	goto	l1254
  2566  00757A                     l1210:
  2567                           
  2568                           ;fft.c: 218: {
  2569                           ;fft.c: 219: j = i + l;
  2570  00757A  5041               	movf	fix_fft@l,w,c
  2571  00757C  2439               	addwf	fix_fft@i,w,c
  2572  00757E  6E45               	movwf	fix_fft@j,c
  2573  007580  5042               	movf	fix_fft@l+1,w,c
  2574  007582  203A               	addwfc	fix_fft@i+1,w,c
  2575  007584  6E46               	movwf	fix_fft@j+1,c
  2576  007586  5043               	movf	fix_fft@l+2,w,c
  2577  007588  203B               	addwfc	fix_fft@i+2,w,c
  2578  00758A  6E47               	movwf	fix_fft@j+2,c
  2579  00758C  5044               	movf	fix_fft@l+3,w,c
  2580  00758E  203C               	addwfc	fix_fft@i+3,w,c
  2581  007590  6E48               	movwf	fix_fft@j+3,c
  2582                           
  2583                           ;fft.c: 227: c = ((long int)wr * (long int)fr[j]);
  2584  007592  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2585  007596  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2586  00759A  0E00               	movlw	0
  2587  00759C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2588  00759E  0EFF               	movlw	-1
  2589  0075A0  6E03               	movwf	___lmul@multiplier+2,c
  2590  0075A2  6E04               	movwf	___lmul@multiplier+3,c
  2591  0075A4  90D8               	bcf	status,0,c
  2592  0075A6  3445               	rlcf	fix_fft@j,w,c
  2593  0075A8  6ED9               	movwf	fsr2l,c
  2594  0075AA  3446               	rlcf	fix_fft@j+1,w,c
  2595  0075AC  6EDA               	movwf	fsr2h,c
  2596  0075AE  500D               	movf	fix_fft@fr,w,c
  2597  0075B0  26D9               	addwf	fsr2l,f,c
  2598  0075B2  500E               	movf	fix_fft@fr+1,w,c
  2599  0075B4  22DA               	addwfc	fsr2h,f,c
  2600  0075B6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2601  0075BA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2602  0075BE  0E00               	movlw	0
  2603  0075C0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2604  0075C2  0EFF               	movlw	-1
  2605  0075C4  6E07               	movwf	___lmul@multiplicand+2,c
  2606  0075C6  6E08               	movwf	___lmul@multiplicand+3,c
  2607  0075C8  EC6F  F036         	call	___lmul	;wreg free
  2608  0075CC  C001  F049         	movff	?___lmul,fix_fft@c
  2609  0075D0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2610  0075D4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2611  0075D8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2612                           
  2613                           ;fft.c: 228: c = c >> 14;
  2614  0075DC  0E0E               	movlw	14
  2615  0075DE  6E13               	movwf	??_fix_fft& (0+255),c
  2616  0075E0  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2617  0075E4  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2618  0075E8  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2619  0075EC  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2620  0075F0                     u625:
  2621  0075F0  6613               	tstfsz	??_fix_fft,c
  2622  0075F2  D001               	goto	u626
  2623  0075F4  D007               	goto	u627
  2624  0075F6                     u626:
  2625  0075F6  3417               	rlcf	??_fix_fft+4,w,c
  2626  0075F8  3217               	rrcf	??_fix_fft+4,f,c
  2627  0075FA  3216               	rrcf	??_fix_fft+3,f,c
  2628  0075FC  3215               	rrcf	??_fix_fft+2,f,c
  2629  0075FE  3214               	rrcf	??_fix_fft+1,f,c
  2630  007600  2E13               	decfsz	??_fix_fft,f,c
  2631  007602  D7F6               	goto	u625
  2632  007604                     u627:
  2633  007604  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2634  007608  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2635  00760C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2636  007610  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2637                           
  2638                           ;fft.c: 229: b = c & 0x01;
  2639  007614  0E01               	movlw	1
  2640  007616  1449               	andwf	fix_fft@c,w,c
  2641  007618  6E37               	movwf	fix_fft@b,c
  2642  00761A  6A38               	clrf	fix_fft@b+1,c
  2643                           
  2644                           ;fft.c: 230: tr = (c >> 1) + b;
  2645  00761C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2646  007620  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2647  007624  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2648  007628  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2649  00762C  3416               	rlcf	??_fix_fft+3,w,c
  2650  00762E  3216               	rrcf	??_fix_fft+3,f,c
  2651  007630  3215               	rrcf	??_fix_fft+2,f,c
  2652  007632  3214               	rrcf	??_fix_fft+1,f,c
  2653  007634  3213               	rrcf	??_fix_fft,f,c
  2654  007636  5037               	movf	fix_fft@b,w,c
  2655  007638  2413               	addwf	??_fix_fft,w,c
  2656  00763A  6E33               	movwf	fix_fft@tr,c
  2657  00763C  5038               	movf	fix_fft@b+1,w,c
  2658  00763E  2014               	addwfc	??_fix_fft+1,w,c
  2659  007640  6E34               	movwf	fix_fft@tr+1,c
  2660                           
  2661                           ;fft.c: 232: c = ((long int)wi * (long int)fi[j]);
  2662  007642  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2663  007646  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2664  00764A  0E00               	movlw	0
  2665  00764C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2666  00764E  0EFF               	movlw	-1
  2667  007650  6E03               	movwf	___lmul@multiplier+2,c
  2668  007652  6E04               	movwf	___lmul@multiplier+3,c
  2669  007654  90D8               	bcf	status,0,c
  2670  007656  3445               	rlcf	fix_fft@j,w,c
  2671  007658  6ED9               	movwf	fsr2l,c
  2672  00765A  3446               	rlcf	fix_fft@j+1,w,c
  2673  00765C  6EDA               	movwf	fsr2h,c
  2674  00765E  500F               	movf	fix_fft@fi,w,c
  2675  007660  26D9               	addwf	fsr2l,f,c
  2676  007662  5010               	movf	fix_fft@fi+1,w,c
  2677  007664  22DA               	addwfc	fsr2h,f,c
  2678  007666  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2679  00766A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2680  00766E  0E00               	movlw	0
  2681  007670  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2682  007672  0EFF               	movlw	-1
  2683  007674  6E07               	movwf	___lmul@multiplicand+2,c
  2684  007676  6E08               	movwf	___lmul@multiplicand+3,c
  2685  007678  EC6F  F036         	call	___lmul	;wreg free
  2686  00767C  C001  F049         	movff	?___lmul,fix_fft@c
  2687  007680  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2688  007684  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2689  007688  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2690                           
  2691                           ;fft.c: 233: c = c >> 14;
  2692  00768C  0E0E               	movlw	14
  2693  00768E  6E13               	movwf	??_fix_fft& (0+255),c
  2694  007690  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2695  007694  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2696  007698  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2697  00769C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2698  0076A0                     u635:
  2699  0076A0  6613               	tstfsz	??_fix_fft,c
  2700  0076A2  D001               	goto	u636
  2701  0076A4  D007               	goto	u637
  2702  0076A6                     u636:
  2703  0076A6  3417               	rlcf	??_fix_fft+4,w,c
  2704  0076A8  3217               	rrcf	??_fix_fft+4,f,c
  2705  0076AA  3216               	rrcf	??_fix_fft+3,f,c
  2706  0076AC  3215               	rrcf	??_fix_fft+2,f,c
  2707  0076AE  3214               	rrcf	??_fix_fft+1,f,c
  2708  0076B0  2E13               	decfsz	??_fix_fft,f,c
  2709  0076B2  D7F6               	goto	u635
  2710  0076B4                     u637:
  2711  0076B4  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2712  0076B8  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2713  0076BC  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2714  0076C0  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2715                           
  2716                           ;fft.c: 234: b = c & 0x01;
  2717  0076C4  0E01               	movlw	1
  2718  0076C6  1449               	andwf	fix_fft@c,w,c
  2719  0076C8  6E37               	movwf	fix_fft@b,c
  2720  0076CA  6A38               	clrf	fix_fft@b+1,c
  2721                           
  2722                           ;fft.c: 235: tr = tr - ((c >> 1) + b);
  2723  0076CC  C049  F013         	movff	fix_fft@c,??_fix_fft
  2724  0076D0  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2725  0076D4  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2726  0076D8  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2727  0076DC  3416               	rlcf	??_fix_fft+3,w,c
  2728  0076DE  3216               	rrcf	??_fix_fft+3,f,c
  2729  0076E0  3215               	rrcf	??_fix_fft+2,f,c
  2730  0076E2  3214               	rrcf	??_fix_fft+1,f,c
  2731  0076E4  3213               	rrcf	??_fix_fft,f,c
  2732  0076E6  5037               	movf	fix_fft@b,w,c
  2733  0076E8  2613               	addwf	??_fix_fft,f,c
  2734  0076EA  5038               	movf	fix_fft@b+1,w,c
  2735  0076EC  2214               	addwfc	??_fix_fft+1,f,c
  2736  0076EE  1E13               	comf	??_fix_fft,f,c
  2737  0076F0  1E14               	comf	??_fix_fft+1,f,c
  2738  0076F2  4A13               	infsnz	??_fix_fft,f,c
  2739  0076F4  2A14               	incf	??_fix_fft+1,f,c
  2740  0076F6  5033               	movf	fix_fft@tr,w,c
  2741  0076F8  2413               	addwf	??_fix_fft,w,c
  2742  0076FA  6E33               	movwf	fix_fft@tr,c
  2743  0076FC  5034               	movf	fix_fft@tr+1,w,c
  2744  0076FE  2014               	addwfc	??_fix_fft+1,w,c
  2745  007700  6E34               	movwf	fix_fft@tr+1,c
  2746                           
  2747                           ;fft.c: 238: c = ((long int)wr * (long int)fi[j]);
  2748  007702  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2749  007706  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2750  00770A  0E00               	movlw	0
  2751  00770C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2752  00770E  0EFF               	movlw	-1
  2753  007710  6E03               	movwf	___lmul@multiplier+2,c
  2754  007712  6E04               	movwf	___lmul@multiplier+3,c
  2755  007714  90D8               	bcf	status,0,c
  2756  007716  3445               	rlcf	fix_fft@j,w,c
  2757  007718  6ED9               	movwf	fsr2l,c
  2758  00771A  3446               	rlcf	fix_fft@j+1,w,c
  2759  00771C  6EDA               	movwf	fsr2h,c
  2760  00771E  500F               	movf	fix_fft@fi,w,c
  2761  007720  26D9               	addwf	fsr2l,f,c
  2762  007722  5010               	movf	fix_fft@fi+1,w,c
  2763  007724  22DA               	addwfc	fsr2h,f,c
  2764  007726  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2765  00772A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2766  00772E  0E00               	movlw	0
  2767  007730  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2768  007732  0EFF               	movlw	-1
  2769  007734  6E07               	movwf	___lmul@multiplicand+2,c
  2770  007736  6E08               	movwf	___lmul@multiplicand+3,c
  2771  007738  EC6F  F036         	call	___lmul	;wreg free
  2772  00773C  C001  F049         	movff	?___lmul,fix_fft@c
  2773  007740  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2774  007744  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2775  007748  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2776                           
  2777                           ;fft.c: 239: c = c >> 14;
  2778  00774C  0E0E               	movlw	14
  2779  00774E  6E13               	movwf	??_fix_fft& (0+255),c
  2780  007750  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2781  007754  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2782  007758  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2783  00775C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2784  007760                     u645:
  2785  007760  6613               	tstfsz	??_fix_fft,c
  2786  007762  D001               	goto	u646
  2787  007764  D007               	goto	u647
  2788  007766                     u646:
  2789  007766  3417               	rlcf	??_fix_fft+4,w,c
  2790  007768  3217               	rrcf	??_fix_fft+4,f,c
  2791  00776A  3216               	rrcf	??_fix_fft+3,f,c
  2792  00776C  3215               	rrcf	??_fix_fft+2,f,c
  2793  00776E  3214               	rrcf	??_fix_fft+1,f,c
  2794  007770  2E13               	decfsz	??_fix_fft,f,c
  2795  007772  D7F6               	goto	u645
  2796  007774                     u647:
  2797  007774  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2798  007778  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2799  00777C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2800  007780  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2801                           
  2802                           ;fft.c: 240: b = c & 0x01;
  2803  007784  0E01               	movlw	1
  2804  007786  1449               	andwf	fix_fft@c,w,c
  2805  007788  6E37               	movwf	fix_fft@b,c
  2806  00778A  6A38               	clrf	fix_fft@b+1,c
  2807                           
  2808                           ;fft.c: 241: ti = (c >> 1) + b;
  2809  00778C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2810  007790  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2811  007794  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2812  007798  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2813  00779C  3416               	rlcf	??_fix_fft+3,w,c
  2814  00779E  3216               	rrcf	??_fix_fft+3,f,c
  2815  0077A0  3215               	rrcf	??_fix_fft+2,f,c
  2816  0077A2  3214               	rrcf	??_fix_fft+1,f,c
  2817  0077A4  3213               	rrcf	??_fix_fft,f,c
  2818  0077A6  5037               	movf	fix_fft@b,w,c
  2819  0077A8  2413               	addwf	??_fix_fft,w,c
  2820  0077AA  6E35               	movwf	fix_fft@ti,c
  2821  0077AC  5038               	movf	fix_fft@b+1,w,c
  2822  0077AE  2014               	addwfc	??_fix_fft+1,w,c
  2823  0077B0  6E36               	movwf	fix_fft@ti+1,c
  2824                           
  2825                           ;fft.c: 243: c = ((long int)wi * (long int)fr[j]);
  2826  0077B2  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2827  0077B6  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2828  0077BA  0E00               	movlw	0
  2829  0077BC  BE02               	btfsc	___lmul@multiplier+1,7,c
  2830  0077BE  0EFF               	movlw	-1
  2831  0077C0  6E03               	movwf	___lmul@multiplier+2,c
  2832  0077C2  6E04               	movwf	___lmul@multiplier+3,c
  2833  0077C4  90D8               	bcf	status,0,c
  2834  0077C6  3445               	rlcf	fix_fft@j,w,c
  2835  0077C8  6ED9               	movwf	fsr2l,c
  2836  0077CA  3446               	rlcf	fix_fft@j+1,w,c
  2837  0077CC  6EDA               	movwf	fsr2h,c
  2838  0077CE  500D               	movf	fix_fft@fr,w,c
  2839  0077D0  26D9               	addwf	fsr2l,f,c
  2840  0077D2  500E               	movf	fix_fft@fr+1,w,c
  2841  0077D4  22DA               	addwfc	fsr2h,f,c
  2842  0077D6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2843  0077DA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2844  0077DE  0E00               	movlw	0
  2845  0077E0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2846  0077E2  0EFF               	movlw	-1
  2847  0077E4  6E07               	movwf	___lmul@multiplicand+2,c
  2848  0077E6  6E08               	movwf	___lmul@multiplicand+3,c
  2849  0077E8  EC6F  F036         	call	___lmul	;wreg free
  2850  0077EC  C001  F049         	movff	?___lmul,fix_fft@c
  2851  0077F0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2852  0077F4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2853  0077F8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2854                           
  2855                           ;fft.c: 244: c = c >> 14;
  2856  0077FC  0E0E               	movlw	14
  2857  0077FE  6E13               	movwf	??_fix_fft& (0+255),c
  2858  007800  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2859  007804  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2860  007808  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2861  00780C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2862  007810                     u655:
  2863  007810  6613               	tstfsz	??_fix_fft,c
  2864  007812  D001               	goto	u656
  2865  007814  D007               	goto	u657
  2866  007816                     u656:
  2867  007816  3417               	rlcf	??_fix_fft+4,w,c
  2868  007818  3217               	rrcf	??_fix_fft+4,f,c
  2869  00781A  3216               	rrcf	??_fix_fft+3,f,c
  2870  00781C  3215               	rrcf	??_fix_fft+2,f,c
  2871  00781E  3214               	rrcf	??_fix_fft+1,f,c
  2872  007820  2E13               	decfsz	??_fix_fft,f,c
  2873  007822  D7F6               	goto	u655
  2874  007824                     u657:
  2875  007824  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2876  007828  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2877  00782C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2878  007830  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2879                           
  2880                           ;fft.c: 245: b = c & 0x01;
  2881  007834  0E01               	movlw	1
  2882  007836  1449               	andwf	fix_fft@c,w,c
  2883  007838  6E37               	movwf	fix_fft@b,c
  2884  00783A  6A38               	clrf	fix_fft@b+1,c
  2885                           
  2886                           ;fft.c: 246: ti = ti + ((c >> 1) + b);
  2887  00783C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2888  007840  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2889  007844  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2890  007848  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2891  00784C  3416               	rlcf	??_fix_fft+3,w,c
  2892  00784E  3216               	rrcf	??_fix_fft+3,f,c
  2893  007850  3215               	rrcf	??_fix_fft+2,f,c
  2894  007852  3214               	rrcf	??_fix_fft+1,f,c
  2895  007854  3213               	rrcf	??_fix_fft,f,c
  2896  007856  5037               	movf	fix_fft@b,w,c
  2897  007858  2613               	addwf	??_fix_fft,f,c
  2898  00785A  5038               	movf	fix_fft@b+1,w,c
  2899  00785C  2214               	addwfc	??_fix_fft+1,f,c
  2900  00785E  5035               	movf	fix_fft@ti,w,c
  2901  007860  2413               	addwf	??_fix_fft,w,c
  2902  007862  6E35               	movwf	fix_fft@ti,c
  2903  007864  5036               	movf	fix_fft@ti+1,w,c
  2904  007866  2014               	addwfc	??_fix_fft+1,w,c
  2905  007868  6E36               	movwf	fix_fft@ti+1,c
  2906                           
  2907                           ;fft.c: 248: qr = fr[i];
  2908  00786A  90D8               	bcf	status,0,c
  2909  00786C  3439               	rlcf	fix_fft@i,w,c
  2910  00786E  6ED9               	movwf	fsr2l,c
  2911  007870  343A               	rlcf	fix_fft@i+1,w,c
  2912  007872  6EDA               	movwf	fsr2h,c
  2913  007874  500D               	movf	fix_fft@fr,w,c
  2914  007876  26D9               	addwf	fsr2l,f,c
  2915  007878  500E               	movf	fix_fft@fr+1,w,c
  2916  00787A  22DA               	addwfc	fsr2h,f,c
  2917  00787C  CFDE F027          	movff	postinc2,fix_fft@qr
  2918  007880  CFDD F028          	movff	postdec2,fix_fft@qr+1
  2919                           
  2920                           ;fft.c: 249: qi = fi[i];
  2921  007884  90D8               	bcf	status,0,c
  2922  007886  3439               	rlcf	fix_fft@i,w,c
  2923  007888  6ED9               	movwf	fsr2l,c
  2924  00788A  343A               	rlcf	fix_fft@i+1,w,c
  2925  00788C  6EDA               	movwf	fsr2h,c
  2926  00788E  500F               	movf	fix_fft@fi,w,c
  2927  007890  26D9               	addwf	fsr2l,f,c
  2928  007892  5010               	movf	fix_fft@fi+1,w,c
  2929  007894  22DA               	addwfc	fsr2h,f,c
  2930  007896  CFDE F029          	movff	postinc2,fix_fft@qi
  2931  00789A  CFDD F02A          	movff	postdec2,fix_fft@qi+1
  2932                           
  2933                           ;fft.c: 250: qr >>= 1;
  2934  00789E  3428               	rlcf	fix_fft@qr+1,w,c
  2935  0078A0  3228               	rrcf	fix_fft@qr+1,f,c
  2936  0078A2  3227               	rrcf	fix_fft@qr,f,c
  2937                           
  2938                           ;fft.c: 251: qi >>= 1;
  2939  0078A4  342A               	rlcf	fix_fft@qi+1,w,c
  2940  0078A6  322A               	rrcf	fix_fft@qi+1,f,c
  2941  0078A8  3229               	rrcf	fix_fft@qi,f,c
  2942                           
  2943                           ;fft.c: 253: fr[j] = qr - tr;
  2944  0078AA  C033  F013         	movff	fix_fft@tr,??_fix_fft
  2945  0078AE  C034  F014         	movff	fix_fft@tr+1,??_fix_fft+1
  2946  0078B2  1E13               	comf	??_fix_fft,f,c
  2947  0078B4  1E14               	comf	??_fix_fft+1,f,c
  2948  0078B6  4A13               	infsnz	??_fix_fft,f,c
  2949  0078B8  2A14               	incf	??_fix_fft+1,f,c
  2950  0078BA  5027               	movf	fix_fft@qr,w,c
  2951  0078BC  2613               	addwf	??_fix_fft,f,c
  2952  0078BE  5028               	movf	fix_fft@qr+1,w,c
  2953  0078C0  2214               	addwfc	??_fix_fft+1,f,c
  2954  0078C2  90D8               	bcf	status,0,c
  2955  0078C4  3445               	rlcf	fix_fft@j,w,c
  2956  0078C6  6ED9               	movwf	fsr2l,c
  2957  0078C8  3446               	rlcf	fix_fft@j+1,w,c
  2958  0078CA  6EDA               	movwf	fsr2h,c
  2959  0078CC  500D               	movf	fix_fft@fr,w,c
  2960  0078CE  26D9               	addwf	fsr2l,f,c
  2961  0078D0  500E               	movf	fix_fft@fr+1,w,c
  2962  0078D2  22DA               	addwfc	fsr2h,f,c
  2963  0078D4  C013  FFDE         	movff	??_fix_fft,postinc2
  2964  0078D8  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2965                           
  2966                           ;fft.c: 254: fi[j] = qi - ti;
  2967  0078DC  C035  F013         	movff	fix_fft@ti,??_fix_fft
  2968  0078E0  C036  F014         	movff	fix_fft@ti+1,??_fix_fft+1
  2969  0078E4  1E13               	comf	??_fix_fft,f,c
  2970  0078E6  1E14               	comf	??_fix_fft+1,f,c
  2971  0078E8  4A13               	infsnz	??_fix_fft,f,c
  2972  0078EA  2A14               	incf	??_fix_fft+1,f,c
  2973  0078EC  5029               	movf	fix_fft@qi,w,c
  2974  0078EE  2613               	addwf	??_fix_fft,f,c
  2975  0078F0  502A               	movf	fix_fft@qi+1,w,c
  2976  0078F2  2214               	addwfc	??_fix_fft+1,f,c
  2977  0078F4  90D8               	bcf	status,0,c
  2978  0078F6  3445               	rlcf	fix_fft@j,w,c
  2979  0078F8  6ED9               	movwf	fsr2l,c
  2980  0078FA  3446               	rlcf	fix_fft@j+1,w,c
  2981  0078FC  6EDA               	movwf	fsr2h,c
  2982  0078FE  500F               	movf	fix_fft@fi,w,c
  2983  007900  26D9               	addwf	fsr2l,f,c
  2984  007902  5010               	movf	fix_fft@fi+1,w,c
  2985  007904  22DA               	addwfc	fsr2h,f,c
  2986  007906  C013  FFDE         	movff	??_fix_fft,postinc2
  2987  00790A  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2988                           
  2989                           ;fft.c: 255: fr[i] = qr + tr;
  2990  00790E  C027  F013         	movff	fix_fft@qr,??_fix_fft
  2991  007912  C028  F014         	movff	fix_fft@qr+1,??_fix_fft+1
  2992  007916  5033               	movf	fix_fft@tr,w,c
  2993  007918  2613               	addwf	??_fix_fft,f,c
  2994  00791A  5034               	movf	fix_fft@tr+1,w,c
  2995  00791C  2214               	addwfc	??_fix_fft+1,f,c
  2996  00791E  90D8               	bcf	status,0,c
  2997  007920  3439               	rlcf	fix_fft@i,w,c
  2998  007922  6ED9               	movwf	fsr2l,c
  2999  007924  343A               	rlcf	fix_fft@i+1,w,c
  3000  007926  6EDA               	movwf	fsr2h,c
  3001  007928  500D               	movf	fix_fft@fr,w,c
  3002  00792A  26D9               	addwf	fsr2l,f,c
  3003  00792C  500E               	movf	fix_fft@fr+1,w,c
  3004  00792E  22DA               	addwfc	fsr2h,f,c
  3005  007930  C013  FFDE         	movff	??_fix_fft,postinc2
  3006  007934  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3007                           
  3008                           ;fft.c: 256: fi[i] = qi + ti;
  3009  007938  C029  F013         	movff	fix_fft@qi,??_fix_fft
  3010  00793C  C02A  F014         	movff	fix_fft@qi+1,??_fix_fft+1
  3011  007940  5035               	movf	fix_fft@ti,w,c
  3012  007942  2613               	addwf	??_fix_fft,f,c
  3013  007944  5036               	movf	fix_fft@ti+1,w,c
  3014  007946  2214               	addwfc	??_fix_fft+1,f,c
  3015  007948  90D8               	bcf	status,0,c
  3016  00794A  3439               	rlcf	fix_fft@i,w,c
  3017  00794C  6ED9               	movwf	fsr2l,c
  3018  00794E  343A               	rlcf	fix_fft@i+1,w,c
  3019  007950  6EDA               	movwf	fsr2h,c
  3020  007952  500F               	movf	fix_fft@fi,w,c
  3021  007954  26D9               	addwf	fsr2l,f,c
  3022  007956  5010               	movf	fix_fft@fi+1,w,c
  3023  007958  22DA               	addwfc	fsr2h,f,c
  3024  00795A  C013  FFDE         	movff	??_fix_fft,postinc2
  3025  00795E  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3026  007962  5023               	movf	fix_fft@istep,w,c
  3027  007964  2639               	addwf	fix_fft@i,f,c
  3028  007966  5024               	movf	fix_fft@istep+1,w,c
  3029  007968  223A               	addwfc	fix_fft@i+1,f,c
  3030  00796A  5025               	movf	fix_fft@istep+2,w,c
  3031  00796C  223B               	addwfc	fix_fft@i+2,f,c
  3032  00796E  5026               	movf	fix_fft@istep+3,w,c
  3033  007970  223C               	addwfc	fix_fft@i+3,f,c
  3034  007972                     l1254:
  3035  007972  503C               	movf	fix_fft@i+3,w,c
  3036  007974  0A80               	xorlw	128
  3037  007976  6E13               	movwf	??_fix_fft& (0+255),c
  3038  007978  502F               	movf	fix_fft@n,w,c
  3039  00797A  5C39               	subwf	fix_fft@i,w,c
  3040  00797C  5030               	movf	fix_fft@n+1,w,c
  3041  00797E  583A               	subwfb	fix_fft@i+1,w,c
  3042  007980  5031               	movf	fix_fft@n+2,w,c
  3043  007982  583B               	subwfb	fix_fft@i+2,w,c
  3044  007984  5032               	movf	fix_fft@n+3,w,c
  3045  007986  0A80               	xorlw	128
  3046  007988  5813               	subwfb	??_fix_fft& (0+255),w,c
  3047  00798A  A0D8               	btfss	status,0,c
  3048  00798C  D5F6               	goto	l1210
  3049  00798E  4A11               	infsnz	fix_fft@m,f,c
  3050  007990  2A12               	incf	fix_fft@m+1,f,c
  3051  007992                     l1258:
  3052  007992  C011  F013         	movff	fix_fft@m,??_fix_fft
  3053  007996  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  3054  00799A  0E00               	movlw	0
  3055  00799C  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  3056  00799E  0EFF               	movlw	255
  3057  0079A0  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  3058  0079A2  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  3059  0079A4  5016               	movf	??_fix_fft+3,w,c
  3060  0079A6  0A80               	xorlw	128
  3061  0079A8  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  3062  0079AA  5041               	movf	fix_fft@l,w,c
  3063  0079AC  5C13               	subwf	??_fix_fft,w,c
  3064  0079AE  5042               	movf	fix_fft@l+1,w,c
  3065  0079B0  5814               	subwfb	??_fix_fft+1,w,c
  3066  0079B2  5043               	movf	fix_fft@l+2,w,c
  3067  0079B4  5815               	subwfb	??_fix_fft+2,w,c
  3068  0079B6  5044               	movf	fix_fft@l+3,w,c
  3069  0079B8  0A80               	xorlw	128
  3070  0079BA  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  3071  0079BC  A0D8               	btfss	status,0,c
  3072  0079BE  D581               	goto	l1202
  3073                           
  3074                           ;fft.c: 257: }
  3075                           ;fft.c: 258: }
  3076                           ;fft.c: 260: --k;
  3077  0079C0  0EFF               	movlw	255
  3078  0079C2  261B               	addwf	fix_fft@k,f,c
  3079  0079C4  0EFF               	movlw	255
  3080  0079C6  221C               	addwfc	fix_fft@k+1,f,c
  3081  0079C8  0EFF               	movlw	255
  3082  0079CA  221D               	addwfc	fix_fft@k+2,f,c
  3083  0079CC  0EFF               	movlw	255
  3084  0079CE  221E               	addwfc	fix_fft@k+3,f,c
  3085                           
  3086                           ;fft.c: 261: l = istep;
  3087  0079D0  C023  F041         	movff	fix_fft@istep,fix_fft@l
  3088  0079D4  C024  F042         	movff	fix_fft@istep+1,fix_fft@l+1
  3089  0079D8  C025  F043         	movff	fix_fft@istep+2,fix_fft@l+2
  3090  0079DC  C026  F044         	movff	fix_fft@istep+3,fix_fft@l+3
  3091  0079E0                     l111:
  3092  0079E0  5044               	movf	fix_fft@l+3,w,c
  3093  0079E2  0A80               	xorlw	128
  3094  0079E4  6E13               	movwf	??_fix_fft& (0+255),c
  3095  0079E6  502F               	movf	fix_fft@n,w,c
  3096  0079E8  5C41               	subwf	fix_fft@l,w,c
  3097  0079EA  5030               	movf	fix_fft@n+1,w,c
  3098  0079EC  5842               	subwfb	fix_fft@l+1,w,c
  3099  0079EE  5031               	movf	fix_fft@n+2,w,c
  3100  0079F0  5843               	subwfb	fix_fft@l+2,w,c
  3101  0079F2  5032               	movf	fix_fft@n+3,w,c
  3102  0079F4  0A80               	xorlw	128
  3103  0079F6  5813               	subwfb	??_fix_fft& (0+255),w,c
  3104  0079F8  B0D8               	btfsc	status,0,c
  3105  0079FA  0012               	return	
  3106  0079FC  D554               	goto	l1198
  3107  0079FE                     __end_of_fix_fft:
  3108                           	opt stack 0
  3109                           tblptru	equ	0xFF8
  3110                           tblptrh	equ	0xFF7
  3111                           tblptrl	equ	0xFF6
  3112                           tablat	equ	0xFF5
  3113                           postinc0	equ	0xFEE
  3114                           wreg	equ	0xFE8
  3115                           postinc1	equ	0xFE6
  3116                           postdec1	equ	0xFE5
  3117                           fsr1h	equ	0xFE2
  3118                           fsr1l	equ	0xFE1
  3119                           indf2	equ	0xFDF
  3120                           postinc2	equ	0xFDE
  3121                           postdec2	equ	0xFDD
  3122                           fsr2h	equ	0xFDA
  3123                           fsr2l	equ	0xFD9
  3124                           status	equ	0xFD8
  3125                           
  3126 ;; *************** function ___lmul *****************
  3127 ;; Defined at:
  3128 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  multiplier      4    0[COMRAM] unsigned long 
  3131 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  product         4    8[COMRAM] unsigned long 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  4    0[COMRAM] unsigned long 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3143 ;;      Params:         8       0       0       0       0       0       0
  3144 ;;      Locals:         4       0       0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0
  3146 ;;      Totals:        12       0       0       0       0       0       0
  3147 ;;Total ram usage:       12 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_fix_fft
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text5
  3157  006CDE                     __ptext5:
  3158                           	opt stack 0
  3159  006CDE                     ___lmul:
  3160                           	opt stack 29
  3161                           
  3162                           ;incstack = 0
  3163  006CDE  0E00               	movlw	0
  3164  006CE0  6E09               	movwf	___lmul@product,c
  3165  006CE2  0E00               	movlw	0
  3166  006CE4  6E0A               	movwf	___lmul@product+1,c
  3167  006CE6  0E00               	movlw	0
  3168  006CE8  6E0B               	movwf	___lmul@product+2,c
  3169  006CEA  0E00               	movlw	0
  3170  006CEC  6E0C               	movwf	___lmul@product+3,c
  3171  006CEE                     l1100:
  3172  006CEE  A001               	btfss	___lmul@multiplier,0,c
  3173  006CF0  D008               	goto	l1104
  3174  006CF2  5005               	movf	___lmul@multiplicand,w,c
  3175  006CF4  2609               	addwf	___lmul@product,f,c
  3176  006CF6  5006               	movf	___lmul@multiplicand+1,w,c
  3177  006CF8  220A               	addwfc	___lmul@product+1,f,c
  3178  006CFA  5007               	movf	___lmul@multiplicand+2,w,c
  3179  006CFC  220B               	addwfc	___lmul@product+2,f,c
  3180  006CFE  5008               	movf	___lmul@multiplicand+3,w,c
  3181  006D00  220C               	addwfc	___lmul@product+3,f,c
  3182  006D02                     l1104:
  3183  006D02  90D8               	bcf	status,0,c
  3184  006D04  3605               	rlcf	___lmul@multiplicand,f,c
  3185  006D06  3606               	rlcf	___lmul@multiplicand+1,f,c
  3186  006D08  3607               	rlcf	___lmul@multiplicand+2,f,c
  3187  006D0A  3608               	rlcf	___lmul@multiplicand+3,f,c
  3188  006D0C  90D8               	bcf	status,0,c
  3189  006D0E  3204               	rrcf	___lmul@multiplier+3,f,c
  3190  006D10  3203               	rrcf	___lmul@multiplier+2,f,c
  3191  006D12  3202               	rrcf	___lmul@multiplier+1,f,c
  3192  006D14  3201               	rrcf	___lmul@multiplier,f,c
  3193  006D16  5004               	movf	___lmul@multiplier+3,w,c
  3194  006D18  1001               	iorwf	___lmul@multiplier,w,c
  3195  006D1A  1002               	iorwf	___lmul@multiplier+1,w,c
  3196  006D1C  1003               	iorwf	___lmul@multiplier+2,w,c
  3197  006D1E  A4D8               	btfss	status,2,c
  3198  006D20  D7E6               	goto	l1100
  3199  006D22  C009  F001         	movff	___lmul@product,?___lmul
  3200  006D26  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3201  006D2A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3202  006D2E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3203  006D32  0012               	return	
  3204  006D34                     __end_of___lmul:
  3205                           	opt stack 0
  3206                           tblptru	equ	0xFF8
  3207                           tblptrh	equ	0xFF7
  3208                           tblptrl	equ	0xFF6
  3209                           tablat	equ	0xFF5
  3210                           postinc0	equ	0xFEE
  3211                           wreg	equ	0xFE8
  3212                           postinc1	equ	0xFE6
  3213                           postdec1	equ	0xFE5
  3214                           fsr1h	equ	0xFE2
  3215                           fsr1l	equ	0xFE1
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           fsr2h	equ	0xFDA
  3220                           fsr2l	equ	0xFD9
  3221                           status	equ	0xFD8
  3222                           
  3223 ;; *************** function ___wmul *****************
  3224 ;; Defined at:
  3225 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  multiplier      2    0[COMRAM] unsigned int 
  3228 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  product         2    4[COMRAM] unsigned int 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2    0[COMRAM] unsigned int 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, prodl, prodh
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3240 ;;      Params:         4       0       0       0       0       0       0
  3241 ;;      Locals:         2       0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0
  3243 ;;      Totals:         6       0       0       0       0       0       0
  3244 ;;Total ram usage:        6 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text6
  3254  006C0C                     __ptext6:
  3255                           	opt stack 0
  3256  006C0C                     ___wmul:
  3257                           	opt stack 30
  3258                           
  3259                           ;incstack = 0
  3260  006C0C  5001               	movf	___wmul@multiplier,w,c
  3261  006C0E  0203               	mulwf	___wmul@multiplicand,c
  3262  006C10  CFF3 F005          	movff	prodl,___wmul@product
  3263  006C14  CFF4 F006          	movff	prodh,___wmul@product+1
  3264  006C18  5001               	movf	___wmul@multiplier,w,c
  3265  006C1A  0204               	mulwf	___wmul@multiplicand+1,c
  3266  006C1C  50F3               	movf	prodl,w,c
  3267  006C1E  2606               	addwf	___wmul@product+1,f,c
  3268  006C20  5002               	movf	___wmul@multiplier+1,w,c
  3269  006C22  0203               	mulwf	___wmul@multiplicand,c
  3270  006C24  50F3               	movf	prodl,w,c
  3271  006C26  2606               	addwf	___wmul@product+1,f,c
  3272  006C28  C005  F001         	movff	___wmul@product,?___wmul
  3273  006C2C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3274  006C30  0012               	return	
  3275  006C32                     __end_of___wmul:
  3276                           	opt stack 0
  3277                           tblptru	equ	0xFF8
  3278                           tblptrh	equ	0xFF7
  3279                           tblptrl	equ	0xFF6
  3280                           tablat	equ	0xFF5
  3281                           prodh	equ	0xFF4
  3282                           prodl	equ	0xFF3
  3283                           postinc0	equ	0xFEE
  3284                           wreg	equ	0xFE8
  3285                           postinc1	equ	0xFE6
  3286                           postdec1	equ	0xFE5
  3287                           fsr1h	equ	0xFE2
  3288                           fsr1l	equ	0xFE1
  3289                           indf2	equ	0xFDF
  3290                           postinc2	equ	0xFDE
  3291                           postdec2	equ	0xFDD
  3292                           fsr2h	equ	0xFDA
  3293                           fsr2l	equ	0xFD9
  3294                           status	equ	0xFD8
  3295                           
  3296 ;; *************** function _ReadADC *****************
  3297 ;; Defined at:
  3298 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcread.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  2    0[COMRAM] int 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3312 ;;      Params:         2       0       0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0
  3315 ;;      Totals:         2       0       0       0       0       0       0
  3316 ;;Total ram usage:        2 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text7
  3326  006BD0                     __ptext7:
  3327                           	opt stack 0
  3328  006BD0                     _ReadADC:
  3329                           	opt stack 30
  3330                           
  3331                           ;incstack = 0
  3332  006BD0  50C4               	movf	4036,w,c	;volatile
  3333  006BD2  6E02               	movwf	?_ReadADC+1,c
  3334  006BD4  50C3               	movf	4035,w,c	;volatile
  3335  006BD6  6E01               	movwf	?_ReadADC,c
  3336  006BD8  0012               	return	
  3337  006BDA                     __end_of_ReadADC:
  3338                           	opt stack 0
  3339                           tblptru	equ	0xFF8
  3340                           tblptrh	equ	0xFF7
  3341                           tblptrl	equ	0xFF6
  3342                           tablat	equ	0xFF5
  3343                           prodh	equ	0xFF4
  3344                           prodl	equ	0xFF3
  3345                           postinc0	equ	0xFEE
  3346                           wreg	equ	0xFE8
  3347                           postinc1	equ	0xFE6
  3348                           postdec1	equ	0xFE5
  3349                           fsr1h	equ	0xFE2
  3350                           fsr1l	equ	0xFE1
  3351                           indf2	equ	0xFDF
  3352                           postinc2	equ	0xFDE
  3353                           postdec2	equ	0xFDD
  3354                           fsr2h	equ	0xFDA
  3355                           fsr2l	equ	0xFD9
  3356                           status	equ	0xFD8
  3357                           
  3358 ;; *************** function _OpenADC *****************
  3359 ;; Defined at:
  3360 ;;		line 305 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcopen.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  config          1    wreg     unsigned char 
  3363 ;;  config2         1    0[COMRAM] unsigned char 
  3364 ;;  config3         1    1[COMRAM] unsigned char 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  config          1    4[COMRAM] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;		None               void
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3376 ;;      Params:         2       0       0       0       0       0       0
  3377 ;;      Locals:         1       0       0       0       0       0       0
  3378 ;;      Temps:          2       0       0       0       0       0       0
  3379 ;;      Totals:         5       0       0       0       0       0       0
  3380 ;;Total ram usage:        5 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text8
  3390  006C90                     __ptext8:
  3391                           	opt stack 0
  3392  006C90                     _OpenADC:
  3393                           	opt stack 30
  3394                           
  3395                           ;incstack = 0
  3396                           ;OpenADC@config stored from wreg
  3397  006C90  6E05               	movwf	OpenADC@config,c
  3398  006C92  0E00               	movlw	0
  3399  006C94  6EC2               	movwf	4034,c	;volatile
  3400  006C96  0E00               	movlw	0
  3401  006C98  6EC1               	movwf	4033,c	;volatile
  3402  006C9A  0E00               	movlw	0
  3403  006C9C  6EC0               	movwf	4032,c	;volatile
  3404  006C9E  5001               	movf	OpenADC@config2,w,c
  3405  006CA0  0B7C               	andlw	124
  3406  006CA2  6EC2               	movwf	4034,c	;volatile
  3407  006CA4  C002  FFC1         	movff	OpenADC@config3,4033	;volatile
  3408  006CA8  C005  F003         	movff	OpenADC@config,??_OpenADC
  3409  006CAC  90D8               	bcf	status,0,c
  3410  006CAE  3603               	rlcf	??_OpenADC,f,c
  3411  006CB0  90D8               	bcf	status,0,c
  3412  006CB2  3603               	rlcf	??_OpenADC,f,c
  3413  006CB4  0E38               	movlw	56
  3414  006CB6  1603               	andwf	??_OpenADC,f,c
  3415  006CB8  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  3416  006CBC  3A04               	swapf	??_OpenADC+1,f,c
  3417  006CBE  0E0F               	movlw	15
  3418  006CC0  1604               	andwf	??_OpenADC+1,f,c
  3419  006CC2  0E07               	movlw	7
  3420  006CC4  1604               	andwf	??_OpenADC+1,f,c
  3421  006CC6  5005               	movf	OpenADC@config,w,c
  3422  006CC8  0B80               	andlw	128
  3423  006CCA  1004               	iorwf	??_OpenADC+1,w,c
  3424  006CCC  1003               	iorwf	??_OpenADC,w,c
  3425  006CCE  6EC0               	movwf	4032,c	;volatile
  3426  006CD0  AE01               	btfss	OpenADC@config2,7,c
  3427  006CD2  D003               	goto	l147
  3428  006CD4  9C9E               	bcf	3998,6,c	;volatile
  3429  006CD6  8C9D               	bsf	3997,6,c	;volatile
  3430  006CD8  8CF2               	bsf	intcon,6,c	;volatile
  3431  006CDA                     l147:
  3432  006CDA  80C2               	bsf	4034,0,c	;volatile
  3433  006CDC  0012               	return	
  3434  006CDE                     __end_of_OpenADC:
  3435                           	opt stack 0
  3436                           tblptru	equ	0xFF8
  3437                           tblptrh	equ	0xFF7
  3438                           tblptrl	equ	0xFF6
  3439                           tablat	equ	0xFF5
  3440                           prodh	equ	0xFF4
  3441                           prodl	equ	0xFF3
  3442                           intcon	equ	0xFF2
  3443                           postinc0	equ	0xFEE
  3444                           wreg	equ	0xFE8
  3445                           postinc1	equ	0xFE6
  3446                           postdec1	equ	0xFE5
  3447                           fsr1h	equ	0xFE2
  3448                           fsr1l	equ	0xFE1
  3449                           indf2	equ	0xFDF
  3450                           postinc2	equ	0xFDE
  3451                           postdec2	equ	0xFDD
  3452                           fsr2h	equ	0xFDA
  3453                           fsr2l	equ	0xFD9
  3454                           status	equ	0xFD8
  3455                           
  3456 ;; *************** function _Open1USART *****************
  3457 ;; Defined at:
  3458 ;;		line 124 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1open.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  config          1    wreg     unsigned char 
  3461 ;;  spbrg           2    0[COMRAM] unsigned int 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  config          1    5[COMRAM] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;		None               void
  3466 ;; Registers used:
  3467 ;;		wreg, status,2
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3473 ;;      Params:         2       0       0       0       0       0       0
  3474 ;;      Locals:         1       0       0       0       0       0       0
  3475 ;;      Temps:          3       0       0       0       0       0       0
  3476 ;;      Totals:         6       0       0       0       0       0       0
  3477 ;;Total ram usage:        6 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_main
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text9
  3487  006D34                     __ptext9:
  3488                           	opt stack 0
  3489  006D34                     _Open1USART:
  3490                           	opt stack 30
  3491                           
  3492                           ;incstack = 0
  3493                           ;Open1USART@config stored from wreg
  3494  006D34  6E06               	movwf	Open1USART@config,c
  3495  006D36  0E00               	movlw	0
  3496  006D38  6EAC               	movwf	4012,c	;volatile
  3497  006D3A  0E00               	movlw	0
  3498  006D3C  6EAB               	movwf	4011,c	;volatile
  3499  006D3E  B006               	btfsc	Open1USART@config,0,c
  3500  006D40  88AC               	bsf	4012,4,c	;volatile
  3501  006D42  A206               	btfss	Open1USART@config,1,c
  3502  006D44  D002               	goto	l1130
  3503  006D46  8CAC               	bsf	4012,6,c	;volatile
  3504  006D48  8CAB               	bsf	4011,6,c	;volatile
  3505  006D4A                     l1130:
  3506  006D4A  B406               	btfsc	Open1USART@config,2,c
  3507  006D4C  8EAC               	bsf	4012,7,c	;volatile
  3508  006D4E  A606               	btfss	Open1USART@config,3,c
  3509  006D50  D002               	goto	l175
  3510  006D52  88AB               	bsf	4011,4,c	;volatile
  3511  006D54  D001               	goto	l1138
  3512  006D56                     l175:
  3513  006D56  8AAB               	bsf	4011,5,c	;volatile
  3514  006D58                     l1138:
  3515  006D58  B806               	btfsc	Open1USART@config,4,c
  3516  006D5A  84AC               	bsf	4012,2,c	;volatile
  3517  006D5C  BA06               	btfsc	Open1USART@config,5,c
  3518  006D5E  86AB               	bsf	4011,3,c	;volatile
  3519  006D60  AC06               	btfss	Open1USART@config,6,c
  3520  006D62  D002               	goto	l179
  3521  006D64  8A9D               	bsf	3997,5,c	;volatile
  3522  006D66  D001               	goto	l1150
  3523  006D68                     l179:
  3524  006D68  9A9D               	bcf	3997,5,c	;volatile
  3525  006D6A                     l1150:
  3526  006D6A  AE06               	btfss	Open1USART@config,7,c
  3527  006D6C  D002               	goto	l181
  3528  006D6E  889D               	bsf	3997,4,c	;volatile
  3529  006D70  D001               	goto	l182
  3530  006D72                     l181:
  3531  006D72  989D               	bcf	3997,4,c	;volatile
  3532  006D74                     l182:
  3533  006D74  C001  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3534  006D78  C002  F003         	movff	Open1USART@spbrg+1,??_Open1USART
  3535  006D7C  C003  F004         	movff	??_Open1USART,??_Open1USART+1
  3536  006D80  6A05               	clrf	(??_Open1USART+2)& (0+255),c
  3537  006D82  5004               	movf	??_Open1USART+1,w,c
  3538  006D84  6EB0               	movwf	4016,c	;volatile
  3539  006D86  8AAC               	bsf	4012,5,c	;volatile
  3540  006D88  8EAB               	bsf	4011,7,c	;volatile
  3541  006D8A  0012               	return	
  3542  006D8C                     __end_of_Open1USART:
  3543                           	opt stack 0
  3544                           tblptru	equ	0xFF8
  3545                           tblptrh	equ	0xFF7
  3546                           tblptrl	equ	0xFF6
  3547                           tablat	equ	0xFF5
  3548                           prodh	equ	0xFF4
  3549                           prodl	equ	0xFF3
  3550                           intcon	equ	0xFF2
  3551                           postinc0	equ	0xFEE
  3552                           wreg	equ	0xFE8
  3553                           postinc1	equ	0xFE6
  3554                           postdec1	equ	0xFE5
  3555                           fsr1h	equ	0xFE2
  3556                           fsr1l	equ	0xFE1
  3557                           indf2	equ	0xFDF
  3558                           postinc2	equ	0xFDE
  3559                           postdec2	equ	0xFDD
  3560                           fsr2h	equ	0xFDA
  3561                           fsr2l	equ	0xFD9
  3562                           status	equ	0xFD8
  3563                           
  3564 ;; *************** function _ConvertADC *****************
  3565 ;; Defined at:
  3566 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcconv.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;		None               void
  3573 ;; Registers used:
  3574 ;;		None
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3580 ;;      Params:         0       0       0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text10
  3594  006BCC                     __ptext10:
  3595                           	opt stack 0
  3596  006BCC                     _ConvertADC:
  3597                           	opt stack 30
  3598                           
  3599                           ;incstack = 0
  3600  006BCC  82C2               	bsf	4034,1,c	;volatile
  3601  006BCE  0012               	return	
  3602  006BD0                     __end_of_ConvertADC:
  3603                           	opt stack 0
  3604                           tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           prodh	equ	0xFF4
  3609                           prodl	equ	0xFF3
  3610                           intcon	equ	0xFF2
  3611                           postinc0	equ	0xFEE
  3612                           wreg	equ	0xFE8
  3613                           postinc1	equ	0xFE6
  3614                           postdec1	equ	0xFE5
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           indf2	equ	0xFDF
  3618                           postinc2	equ	0xFDE
  3619                           postdec2	equ	0xFDD
  3620                           fsr2h	equ	0xFDA
  3621                           fsr2l	equ	0xFD9
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function _BusyADC *****************
  3625 ;; Defined at:
  3626 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcbusy.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      unsigned char 
  3633 ;; Registers used:
  3634 ;;		wreg
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3640 ;;      Params:         0       0       0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_main
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text11
  3654  006BDA                     __ptext11:
  3655                           	opt stack 0
  3656  006BDA                     _BusyADC:
  3657                           	opt stack 30
  3658                           
  3659                           ;incstack = 0
  3660  006BDA  A2C2               	btfss	4034,1,c	;volatile
  3661  006BDC  D002               	goto	u560
  3662  006BDE  0E01               	movlw	1
  3663  006BE0  0012               	return	
  3664  006BE2                     u560:
  3665  006BE2  0E00               	movlw	0
  3666  006BE4  0012               	return	
  3667  006BE6                     __end_of_BusyADC:
  3668                           	opt stack 0
  3669                           tblptru	equ	0xFF8
  3670                           tblptrh	equ	0xFF7
  3671                           tblptrl	equ	0xFF6
  3672                           tablat	equ	0xFF5
  3673                           prodh	equ	0xFF4
  3674                           prodl	equ	0xFF3
  3675                           intcon	equ	0xFF2
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           postinc1	equ	0xFE6
  3679                           postdec1	equ	0xFE5
  3680                           fsr1h	equ	0xFE2
  3681                           fsr1l	equ	0xFE1
  3682                           indf2	equ	0xFDF
  3683                           postinc2	equ	0xFDE
  3684                           postdec2	equ	0xFDD
  3685                           fsr2h	equ	0xFDA
  3686                           fsr2l	equ	0xFD9
  3687                           status	equ	0xFD8
  3688                           tblptru	equ	0xFF8
  3689                           tblptrh	equ	0xFF7
  3690                           tblptrl	equ	0xFF6
  3691                           tablat	equ	0xFF5
  3692                           prodh	equ	0xFF4
  3693                           prodl	equ	0xFF3
  3694                           intcon	equ	0xFF2
  3695                           postinc0	equ	0xFEE
  3696                           wreg	equ	0xFE8
  3697                           postinc1	equ	0xFE6
  3698                           postdec1	equ	0xFE5
  3699                           fsr1h	equ	0xFE2
  3700                           fsr1l	equ	0xFE1
  3701                           indf2	equ	0xFDF
  3702                           postinc2	equ	0xFDE
  3703                           postdec2	equ	0xFDD
  3704                           fsr2h	equ	0xFDA
  3705                           fsr2l	equ	0xFD9
  3706                           status	equ	0xFD8
  3707                           
  3708                           	psect	rparam
  3709  0000                     tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           intcon	equ	0xFF2
  3716                           postinc0	equ	0xFEE
  3717                           wreg	equ	0xFE8
  3718                           postinc1	equ	0xFE6
  3719                           postdec1	equ	0xFE5
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           indf2	equ	0xFDF
  3723                           postinc2	equ	0xFDE
  3724                           postdec2	equ	0xFDD
  3725                           fsr2h	equ	0xFDA
  3726                           fsr2l	equ	0xFD9
  3727                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1536
    Data        0
    BSS         265
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      93
    BANK0           160     14     151
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fix_fft@fi	PTR short  size(2) Largest target is 128
		 -> imaginaryNumbers(BANK1[128]), 

    fix_fft@fr	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 

    sendIntArray@array	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_fix_fft
    _sendChar->_Write1USART
    _fix_fft->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    4465
                                             76 COMRAM    13    13      0
                                              0 BANK0     14    14      0
                            _BusyADC
                         _ConvertADC
                         _Open1USART
                            _OpenADC
                            _ReadADC
                             ___wmul
                            _fix_fft
                       _sendIntArray
 ---------------------------------------------------------------------------------
 (1) _sendIntArray                                         4     0      4     172
                                              1 COMRAM     4     0      4
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      22
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fix_fft                                             64    58      6    2782
                                             12 COMRAM    64    58      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     444
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     371
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     238
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Open1USART
   _OpenADC
   _ReadADC
   ___wmul
   _fix_fft
     ___lmul
   _sendIntArray
     _sendChar
       _Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      E      97       4       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5D       1       97.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     174       9        0.0%
DATA                 0      0     174      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Dec 04 14:01:22 2014

                      _i 005A                       l90 6BF8      ___wmul@multiplicand 0003  
                    l111 79E0                      l105 72CE                      l147 6CDA  
                    l181 6D72                      l182 6D74                      l175 6D56  
                    l179 6D68                      u614 74D8                      u615 74D2  
                    u560 6BE2                      u625 75F0                      u626 75F6  
                    u635 76A0                      u627 7604                      u636 76A6  
                    u645 7760                      u637 76B4                      u646 7766  
                    u574 7296                      u655 7810                      u647 7774  
                    u575 7290                      u656 7816                      u657 7824  
                    u827 6C04                      u755 7038                      u756 703E  
                    u757 704C                      u785 71F4                      u786 71FA  
                    u787 7208                      wreg 000FE8               _TXSTA1bits 000FAC  
           __CFG_LVP$OFF 000000                     l1100 6CEE                     l1104 6D02  
                   l1130 6D4A                     l1210 757A                     l1202 74C2  
                   l1300 6DF4                     l1150 6D6A                     l1320 6E9C  
                   l1138 6D58                     l1090 6BF2                     l1340 701C  
                   l1308 6E22                     l1254 7972                     l1270 6C82  
                   l1350 71A6                     l1342 705C                     l1192 7452  
                   l1176 72DE                     l1344 70BA                     l1258 7992  
                   l1194 7456                     l1266 6C66                     l1354 7218  
                   l1362 7258                     l1356 7226                     l1198 74A6  
                   _LATC 000F8B                     _PIE1 000F9D                     _data 0060  
                   _main 6D8C                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        __end_of_BusyADC 6BE6          __end_of_ReadADC 6BDA          __end_of_OpenADC 6CDE  
                  ?_main 0001                    _TRISC 000F94      ___lmul@multiplicand 0005  
        __end_of_fix_fft 79FE                    _input 005D                    main@i 00EB  
                  main@k 00F1               _ConvertADC 6BCC                    tablat 000FF5  
                  status 000FD8            main@adc_value 00E5           __CFG_PBADEN$ON 000000  
        __initialization 6C32             __end_of_main 7272               _Open1USART 6D34  
                 ??_main 004D            __activetblptr 000002             fix_fft@istep 0023  
       __end_of_Sinewave 7FFF                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _ANSELC 000F3A           __CFG_WDTEN$OFF 000000                   _RCSTA1 000FAB  
                 _SPBRG1 000FAF                ??_BusyADC 0001                   _TXREG1 000FAD  
              ??_ReadADC 0003                   _TXSTA1 000FAC                ??_OpenADC 0003  
                 ___lmul 6CDE                   ___wmul 6C0C                   clear_0 6C38  
                 clear_1 6C44         __end_of_sendChar 6C0C                ??_fix_fft 0013  
           __mediumconst 79FE                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8              ?_ConvertADC 0001               __accesstop 0060  
__end_of__initialization 6C52           __pcstackCOMRAM 0001              ?_Open1USART 0001  
          ?_sendIntArray 0002               __pbssBANK0 0060               __pbssBANK1 0100  
        __CFG_PLLCFG$OFF 000000            ??_Write1USART 0001                  ?___lmul 0001  
                ?___wmul 0001           ___lmul@product 0009      __size_of_ConvertADC 0004  
       Open1USART@config 0006           ??_sendIntArray 0006        __CFG_PRICLKEN$OFF 000000  
                _SPBRGH1 000FB0      __size_of_Open1USART 0058                  _BusyADC 6BDA  
                _ReadADC 6BD0                ?_sendChar 0001                  _OpenADC 6C90  
                __Hparam 0000                  __Lparam 0000      __end_of_Write1USART 6BF8  
        __size_of___lmul 0056          __size_of___wmul 0026                  __pcinit 6C32  
                __ramtop 0600                  __ptext0 6D8C                  __ptext1 6C5C  
                __ptext2 6BF8                  __ptext3 6BE6                  __ptext4 7272  
                __ptext5 6CDE                  __ptext6 6C0C                  __ptext7 6BD0  
                __ptext8 6C90                  __ptext9 6D34                  _fix_fft 7272  
         OpenADC@config2 0001           OpenADC@config3 0002     end_of_initialization 6C52  
          __Lmediumconst 79FE               ??_sendChar 0002                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE        sendIntArray@array 0002         __CFG_FOSC$INTIO7 000000  
              _TRISAbits 000F92                _TRISCbits 000F94             ??_ConvertADC 0001  
            _Write1USART 6BE6     __end_of_sendIntArray 6C90           __end_of___lmul 6D34  
         __end_of___wmul 6C32             ??_Open1USART 0003       __end_of_ConvertADC 6BD0  
    start_initialization 6C32       __end_of_Open1USART 6D8C         _imaginaryNumbers 0100  
               ??___lmul 0009                 ??___wmul 0005              __pbssCOMRAM 005A  
          __pcstackBANK0 00E5                _baud_rate 00F3                 ?_BusyADC 0001  
               ?_ReadADC 0001                __pnvBANK0 00F3                 ?_OpenADC 0001  
      __size_of_sendChar 0014            __pmediumconst 79FE          Open1USART@spbrg 0001  
               ?_fix_fft 000D          Write1USART@data 0001    __size_of_sendIntArray 0034  
         ___wmul@product 0005            OpenADC@config 0005                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         sendIntArray@size 0004               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001                main@place 00ED             _sendIntArray 6C5C  
              fix_fft@fi 000F                fix_fft@fr 000D                fix_fft@nn 001F  
              fix_fft@qi 0029                fix_fft@mr 003D                fix_fft@ti 0035  
              fix_fft@qr 0027                fix_fft@wi 002D                fix_fft@tr 0033  
              fix_fft@wr 002B        ___lmul@multiplier 0001             ?_Write1USART 0001  
       __size_of_BusyADC 000C         __size_of_ReadADC 000A                 __Hrparam 0000  
       __size_of_OpenADC 004E                 __Lrparam 0000                 _Sinewave 79FF  
       __size_of_fix_fft 078C                 __ptext10 6BCC                 __ptext11 6BDA  
            _realNumbers 0065            __size_of_main 04E6                 _sendChar 6BF8  
               main@root 00E7                 fix_fft@b 0037                 fix_fft@c 0049  
               fix_fft@i 0039                 fix_fft@j 0045                 fix_fft@k 001B  
               fix_fft@l 0041                 fix_fft@m 0011                 fix_fft@n 002F  
          _USART1_Status 005C              _OSCTUNEbits 000F9B               _INTCONbits 000FF2  
             _RCSTA1bits 000FAB               _OSCCONbits 000FD3        sendChar@character 0001  
   __size_of_Write1USART 0012  
