

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Dec 04 13:39:00 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           	psect	mediumconst
    28  0079FE                     __pmediumconst:
    29                           	opt stack 0
    30  0079FE  00                 	db	0
    31  0079FF                     _Sinewave:
    32                           	opt stack 0
    33  0079FF  0000               	dw	0
    34  007A01  00C9               	dw	201
    35  007A03  0192               	dw	402
    36  007A05  025B               	dw	603
    37  007A07  0324               	dw	804
    38  007A09  03ED               	dw	1005
    39  007A0B  04B6               	dw	1206
    40  007A0D  057E               	dw	1406
    41  007A0F  0647               	dw	1607
    42  007A11  0710               	dw	1808
    43  007A13  07D9               	dw	2009
    44  007A15  08A1               	dw	2209
    45  007A17  096A               	dw	2410
    46  007A19  0A32               	dw	2610
    47  007A1B  0AFB               	dw	2811
    48  007A1D  0BC3               	dw	3011
    49  007A1F  0C8B               	dw	3211
    50  007A21  0D53               	dw	3411
    51  007A23  0E1B               	dw	3611
    52  007A25  0EE3               	dw	3811
    53  007A27  0FAB               	dw	4011
    54  007A29  1072               	dw	4210
    55  007A2B  1139               	dw	4409
    56  007A2D  1200               	dw	4608
    57  007A2F  12C7               	dw	4807
    58  007A31  138E               	dw	5006
    59  007A33  1455               	dw	5205
    60  007A35  151B               	dw	5403
    61  007A37  15E1               	dw	5601
    62  007A39  16A7               	dw	5799
    63  007A3B  176D               	dw	5997
    64  007A3D  1833               	dw	6195
    65  007A3F  18F8               	dw	6392
    66  007A41  19BD               	dw	6589
    67  007A43  1A82               	dw	6786
    68  007A45  1B46               	dw	6982
    69  007A47  1C0B               	dw	7179
    70  007A49  1CCF               	dw	7375
    71  007A4B  1D93               	dw	7571
    72  007A4D  1E56               	dw	7766
    73  007A4F  1F19               	dw	7961
    74  007A51  1FDC               	dw	8156
    75  007A53  209F               	dw	8351
    76  007A55  2161               	dw	8545
    77  007A57  2223               	dw	8739
    78  007A59  22E4               	dw	8932
    79  007A5B  23A6               	dw	9126
    80  007A5D  2467               	dw	9319
    81  007A5F  2527               	dw	9511
    82  007A61  25E7               	dw	9703
    83  007A63  26A7               	dw	9895
    84  007A65  2767               	dw	10087
    85  007A67  2826               	dw	10278
    86  007A69  28E5               	dw	10469
    87  007A6B  29A3               	dw	10659
    88  007A6D  2A61               	dw	10849
    89  007A6F  2B1E               	dw	11038
    90  007A71  2BDB               	dw	11227
    91  007A73  2C98               	dw	11416
    92  007A75  2D54               	dw	11604
    93  007A77  2E10               	dw	11792
    94  007A79  2ECC               	dw	11980
    95  007A7B  2F86               	dw	12166
    96  007A7D  3041               	dw	12353
    97  007A7F  30FB               	dw	12539
    98  007A81  31B4               	dw	12724
    99  007A83  326D               	dw	12909
   100  007A85  3326               	dw	13094
   101  007A87  33DE               	dw	13278
   102  007A89  3496               	dw	13462
   103  007A8B  354D               	dw	13645
   104  007A8D  3603               	dw	13827
   105  007A8F  36B9               	dw	14009
   106  007A91  376F               	dw	14191
   107  007A93  3824               	dw	14372
   108  007A95  38D8               	dw	14552
   109  007A97  398C               	dw	14732
   110  007A99  3A3F               	dw	14911
   111  007A9B  3AF2               	dw	15090
   112  007A9D  3BA4               	dw	15268
   113  007A9F  3C56               	dw	15446
   114  007AA1  3D07               	dw	15623
   115  007AA3  3DB7               	dw	15799
   116  007AA5  3E67               	dw	15975
   117  007AA7  3F16               	dw	16150
   118  007AA9  3FC5               	dw	16325
   119  007AAB  4073               	dw	16499
   120  007AAD  4120               	dw	16672
   121  007AAF  41CD               	dw	16845
   122  007AB1  4279               	dw	17017
   123  007AB3  4325               	dw	17189
   124  007AB5  43D0               	dw	17360
   125  007AB7  447A               	dw	17530
   126  007AB9  4523               	dw	17699
   127  007ABB  45CC               	dw	17868
   128  007ABD  4674               	dw	18036
   129  007ABF  471C               	dw	18204
   130  007AC1  47C3               	dw	18371
   131  007AC3  4869               	dw	18537
   132  007AC5  490E               	dw	18702
   133  007AC7  49B3               	dw	18867
   134  007AC9  4A57               	dw	19031
   135  007ACB  4AFA               	dw	19194
   136  007ACD  4B9D               	dw	19357
   137  007ACF  4C3F               	dw	19519
   138  007AD1  4CE0               	dw	19680
   139  007AD3  4D80               	dw	19840
   140  007AD5  4E20               	dw	20000
   141  007AD7  4EBF               	dw	20159
   142  007AD9  4F5D               	dw	20317
   143  007ADB  4FFA               	dw	20474
   144  007ADD  5097               	dw	20631
   145  007ADF  5133               	dw	20787
   146  007AE1  51CE               	dw	20942
   147  007AE3  5268               	dw	21096
   148  007AE5  5301               	dw	21249
   149  007AE7  539A               	dw	21402
   150  007AE9  5432               	dw	21554
   151  007AEB  54C9               	dw	21705
   152  007AED  555F               	dw	21855
   153  007AEF  55F4               	dw	22004
   154  007AF1  5689               	dw	22153
   155  007AF3  571D               	dw	22301
   156  007AF5  57B0               	dw	22448
   157  007AF7  5842               	dw	22594
   158  007AF9  58D3               	dw	22739
   159  007AFB  5963               	dw	22883
   160  007AFD  59F3               	dw	23027
   161  007AFF  5A81               	dw	23169
   162  007B01  5B0F               	dw	23311
   163  007B03  5B9C               	dw	23452
   164  007B05  5C28               	dw	23592
   165  007B07  5CB3               	dw	23731
   166  007B09  5D3D               	dw	23869
   167  007B0B  5DC6               	dw	24006
   168  007B0D  5E4F               	dw	24143
   169  007B0F  5ED6               	dw	24278
   170  007B11  5F5D               	dw	24413
   171  007B13  5FE2               	dw	24546
   172  007B15  6067               	dw	24679
   173  007B17  60EB               	dw	24811
   174  007B19  616E               	dw	24942
   175  007B1B  61F0               	dw	25072
   176  007B1D  6271               	dw	25201
   177  007B1F  62F1               	dw	25329
   178  007B21  6370               	dw	25456
   179  007B23  63EE               	dw	25582
   180  007B25  646B               	dw	25707
   181  007B27  64E7               	dw	25831
   182  007B29  6562               	dw	25954
   183  007B2B  65DD               	dw	26077
   184  007B2D  6656               	dw	26198
   185  007B2F  66CE               	dw	26318
   186  007B31  6745               	dw	26437
   187  007B33  67BC               	dw	26556
   188  007B35  6831               	dw	26673
   189  007B37  68A5               	dw	26789
   190  007B39  6919               	dw	26905
   191  007B3B  698B               	dw	27019
   192  007B3D  69FC               	dw	27132
   193  007B3F  6A6C               	dw	27244
   194  007B41  6ADB               	dw	27355
   195  007B43  6B4A               	dw	27466
   196  007B45  6BB7               	dw	27575
   197  007B47  6C23               	dw	27683
   198  007B49  6C8E               	dw	27790
   199  007B4B  6CF8               	dw	27896
   200  007B4D  6D61               	dw	28001
   201  007B4F  6DC9               	dw	28105
   202  007B51  6E30               	dw	28208
   203  007B53  6E95               	dw	28309
   204  007B55  6EFA               	dw	28410
   205  007B57  6F5E               	dw	28510
   206  007B59  6FC0               	dw	28608
   207  007B5B  7022               	dw	28706
   208  007B5D  7082               	dw	28802
   209  007B5F  70E1               	dw	28897
   210  007B61  7140               	dw	28992
   211  007B63  719D               	dw	29085
   212  007B65  71F9               	dw	29177
   213  007B67  7254               	dw	29268
   214  007B69  72AE               	dw	29358
   215  007B6B  7306               	dw	29446
   216  007B6D  735E               	dw	29534
   217  007B6F  73B5               	dw	29621
   218  007B71  740A               	dw	29706
   219  007B73  745E               	dw	29790
   220  007B75  74B1               	dw	29873
   221  007B77  7503               	dw	29955
   222  007B79  7554               	dw	30036
   223  007B7B  75A4               	dw	30116
   224  007B7D  75F3               	dw	30195
   225  007B7F  7640               	dw	30272
   226  007B81  768D               	dw	30349
   227  007B83  76D8               	dw	30424
   228  007B85  7722               	dw	30498
   229  007B87  776B               	dw	30571
   230  007B89  77B3               	dw	30643
   231  007B8B  77F9               	dw	30713
   232  007B8D  783F               	dw	30783
   233  007B8F  7883               	dw	30851
   234  007B91  78C6               	dw	30918
   235  007B93  7908               	dw	30984
   236  007B95  7949               	dw	31049
   237  007B97  7989               	dw	31113
   238  007B99  79C7               	dw	31175
   239  007B9B  7A04               	dw	31236
   240  007B9D  7A41               	dw	31297
   241  007B9F  7A7C               	dw	31356
   242  007BA1  7AB5               	dw	31413
   243  007BA3  7AEE               	dw	31470
   244  007BA5  7B25               	dw	31525
   245  007BA7  7B5C               	dw	31580
   246  007BA9  7B91               	dw	31633
   247  007BAB  7BC4               	dw	31684
   248  007BAD  7BF7               	dw	31735
   249  007BAF  7C29               	dw	31785
   250  007BB1  7C59               	dw	31833
   251  007BB3  7C88               	dw	31880
   252  007BB5  7CB6               	dw	31926
   253  007BB7  7CE2               	dw	31970
   254  007BB9  7D0E               	dw	32014
   255  007BBB  7D38               	dw	32056
   256  007BBD  7D61               	dw	32097
   257  007BBF  7D89               	dw	32137
   258  007BC1  7DB0               	dw	32176
   259  007BC3  7DD5               	dw	32213
   260  007BC5  7DF9               	dw	32249
   261  007BC7  7E1C               	dw	32284
   262  007BC9  7E3E               	dw	32318
   263  007BCB  7E5E               	dw	32350
   264  007BCD  7E7E               	dw	32382
   265  007BCF  7E9C               	dw	32412
   266  007BD1  7EB9               	dw	32441
   267  007BD3  7ED4               	dw	32468
   268  007BD5  7EEF               	dw	32495
   269  007BD7  7F08               	dw	32520
   270  007BD9  7F20               	dw	32544
   271  007BDB  7F37               	dw	32567
   272  007BDD  7F4C               	dw	32588
   273  007BDF  7F61               	dw	32609
   274  007BE1  7F74               	dw	32628
   275  007BE3  7F86               	dw	32646
   276  007BE5  7F96               	dw	32662
   277  007BE7  7FA6               	dw	32678
   278  007BE9  7FB4               	dw	32692
   279  007BEB  7FC1               	dw	32705
   280  007BED  7FCD               	dw	32717
   281  007BEF  7FD7               	dw	32727
   282  007BF1  7FE0               	dw	32736
   283  007BF3  7FE8               	dw	32744
   284  007BF5  7FEF               	dw	32751
   285  007BF7  7FF5               	dw	32757
   286  007BF9  7FF9               	dw	32761
   287  007BFB  7FFC               	dw	32764
   288  007BFD  7FFE               	dw	32766
   289  007BFF  7FFF               	dw	32767
   290  007C01  7FFE               	dw	32766
   291  007C03  7FFC               	dw	32764
   292  007C05  7FF9               	dw	32761
   293  007C07  7FF5               	dw	32757
   294  007C09  7FEF               	dw	32751
   295  007C0B  7FE8               	dw	32744
   296  007C0D  7FE0               	dw	32736
   297  007C0F  7FD7               	dw	32727
   298  007C11  7FCD               	dw	32717
   299  007C13  7FC1               	dw	32705
   300  007C15  7FB4               	dw	32692
   301  007C17  7FA6               	dw	32678
   302  007C19  7F96               	dw	32662
   303  007C1B  7F86               	dw	32646
   304  007C1D  7F74               	dw	32628
   305  007C1F  7F61               	dw	32609
   306  007C21  7F4C               	dw	32588
   307  007C23  7F37               	dw	32567
   308  007C25  7F20               	dw	32544
   309  007C27  7F08               	dw	32520
   310  007C29  7EEF               	dw	32495
   311  007C2B  7ED4               	dw	32468
   312  007C2D  7EB9               	dw	32441
   313  007C2F  7E9C               	dw	32412
   314  007C31  7E7E               	dw	32382
   315  007C33  7E5E               	dw	32350
   316  007C35  7E3E               	dw	32318
   317  007C37  7E1C               	dw	32284
   318  007C39  7DF9               	dw	32249
   319  007C3B  7DD5               	dw	32213
   320  007C3D  7DB0               	dw	32176
   321  007C3F  7D89               	dw	32137
   322  007C41  7D61               	dw	32097
   323  007C43  7D38               	dw	32056
   324  007C45  7D0E               	dw	32014
   325  007C47  7CE2               	dw	31970
   326  007C49  7CB6               	dw	31926
   327  007C4B  7C88               	dw	31880
   328  007C4D  7C59               	dw	31833
   329  007C4F  7C29               	dw	31785
   330  007C51  7BF7               	dw	31735
   331  007C53  7BC4               	dw	31684
   332  007C55  7B91               	dw	31633
   333  007C57  7B5C               	dw	31580
   334  007C59  7B25               	dw	31525
   335  007C5B  7AEE               	dw	31470
   336  007C5D  7AB5               	dw	31413
   337  007C5F  7A7C               	dw	31356
   338  007C61  7A41               	dw	31297
   339  007C63  7A04               	dw	31236
   340  007C65  79C7               	dw	31175
   341  007C67  7989               	dw	31113
   342  007C69  7949               	dw	31049
   343  007C6B  7908               	dw	30984
   344  007C6D  78C6               	dw	30918
   345  007C6F  7883               	dw	30851
   346  007C71  783F               	dw	30783
   347  007C73  77F9               	dw	30713
   348  007C75  77B3               	dw	30643
   349  007C77  776B               	dw	30571
   350  007C79  7722               	dw	30498
   351  007C7B  76D8               	dw	30424
   352  007C7D  768D               	dw	30349
   353  007C7F  7640               	dw	30272
   354  007C81  75F3               	dw	30195
   355  007C83  75A4               	dw	30116
   356  007C85  7554               	dw	30036
   357  007C87  7503               	dw	29955
   358  007C89  74B1               	dw	29873
   359  007C8B  745E               	dw	29790
   360  007C8D  740A               	dw	29706
   361  007C8F  73B5               	dw	29621
   362  007C91  735E               	dw	29534
   363  007C93  7306               	dw	29446
   364  007C95  72AE               	dw	29358
   365  007C97  7254               	dw	29268
   366  007C99  71F9               	dw	29177
   367  007C9B  719D               	dw	29085
   368  007C9D  7140               	dw	28992
   369  007C9F  70E1               	dw	28897
   370  007CA1  7082               	dw	28802
   371  007CA3  7022               	dw	28706
   372  007CA5  6FC0               	dw	28608
   373  007CA7  6F5E               	dw	28510
   374  007CA9  6EFA               	dw	28410
   375  007CAB  6E95               	dw	28309
   376  007CAD  6E30               	dw	28208
   377  007CAF  6DC9               	dw	28105
   378  007CB1  6D61               	dw	28001
   379  007CB3  6CF8               	dw	27896
   380  007CB5  6C8E               	dw	27790
   381  007CB7  6C23               	dw	27683
   382  007CB9  6BB7               	dw	27575
   383  007CBB  6B4A               	dw	27466
   384  007CBD  6ADB               	dw	27355
   385  007CBF  6A6C               	dw	27244
   386  007CC1  69FC               	dw	27132
   387  007CC3  698B               	dw	27019
   388  007CC5  6919               	dw	26905
   389  007CC7  68A5               	dw	26789
   390  007CC9  6831               	dw	26673
   391  007CCB  67BC               	dw	26556
   392  007CCD  6745               	dw	26437
   393  007CCF  66CE               	dw	26318
   394  007CD1  6656               	dw	26198
   395  007CD3  65DD               	dw	26077
   396  007CD5  6562               	dw	25954
   397  007CD7  64E7               	dw	25831
   398  007CD9  646B               	dw	25707
   399  007CDB  63EE               	dw	25582
   400  007CDD  6370               	dw	25456
   401  007CDF  62F1               	dw	25329
   402  007CE1  6271               	dw	25201
   403  007CE3  61F0               	dw	25072
   404  007CE5  616E               	dw	24942
   405  007CE7  60EB               	dw	24811
   406  007CE9  6067               	dw	24679
   407  007CEB  5FE2               	dw	24546
   408  007CED  5F5D               	dw	24413
   409  007CEF  5ED6               	dw	24278
   410  007CF1  5E4F               	dw	24143
   411  007CF3  5DC6               	dw	24006
   412  007CF5  5D3D               	dw	23869
   413  007CF7  5CB3               	dw	23731
   414  007CF9  5C28               	dw	23592
   415  007CFB  5B9C               	dw	23452
   416  007CFD  5B0F               	dw	23311
   417  007CFF  5A81               	dw	23169
   418  007D01  59F3               	dw	23027
   419  007D03  5963               	dw	22883
   420  007D05  58D3               	dw	22739
   421  007D07  5842               	dw	22594
   422  007D09  57B0               	dw	22448
   423  007D0B  571D               	dw	22301
   424  007D0D  5689               	dw	22153
   425  007D0F  55F4               	dw	22004
   426  007D11  555F               	dw	21855
   427  007D13  54C9               	dw	21705
   428  007D15  5432               	dw	21554
   429  007D17  539A               	dw	21402
   430  007D19  5301               	dw	21249
   431  007D1B  5268               	dw	21096
   432  007D1D  51CE               	dw	20942
   433  007D1F  5133               	dw	20787
   434  007D21  5097               	dw	20631
   435  007D23  4FFA               	dw	20474
   436  007D25  4F5D               	dw	20317
   437  007D27  4EBF               	dw	20159
   438  007D29  4E20               	dw	20000
   439  007D2B  4D80               	dw	19840
   440  007D2D  4CE0               	dw	19680
   441  007D2F  4C3F               	dw	19519
   442  007D31  4B9D               	dw	19357
   443  007D33  4AFA               	dw	19194
   444  007D35  4A57               	dw	19031
   445  007D37  49B3               	dw	18867
   446  007D39  490E               	dw	18702
   447  007D3B  4869               	dw	18537
   448  007D3D  47C3               	dw	18371
   449  007D3F  471C               	dw	18204
   450  007D41  4674               	dw	18036
   451  007D43  45CC               	dw	17868
   452  007D45  4523               	dw	17699
   453  007D47  447A               	dw	17530
   454  007D49  43D0               	dw	17360
   455  007D4B  4325               	dw	17189
   456  007D4D  4279               	dw	17017
   457  007D4F  41CD               	dw	16845
   458  007D51  4120               	dw	16672
   459  007D53  4073               	dw	16499
   460  007D55  3FC5               	dw	16325
   461  007D57  3F16               	dw	16150
   462  007D59  3E67               	dw	15975
   463  007D5B  3DB7               	dw	15799
   464  007D5D  3D07               	dw	15623
   465  007D5F  3C56               	dw	15446
   466  007D61  3BA4               	dw	15268
   467  007D63  3AF2               	dw	15090
   468  007D65  3A3F               	dw	14911
   469  007D67  398C               	dw	14732
   470  007D69  38D8               	dw	14552
   471  007D6B  3824               	dw	14372
   472  007D6D  376F               	dw	14191
   473  007D6F  36B9               	dw	14009
   474  007D71  3603               	dw	13827
   475  007D73  354D               	dw	13645
   476  007D75  3496               	dw	13462
   477  007D77  33DE               	dw	13278
   478  007D79  3326               	dw	13094
   479  007D7B  326D               	dw	12909
   480  007D7D  31B4               	dw	12724
   481  007D7F  30FB               	dw	12539
   482  007D81  3041               	dw	12353
   483  007D83  2F86               	dw	12166
   484  007D85  2ECC               	dw	11980
   485  007D87  2E10               	dw	11792
   486  007D89  2D54               	dw	11604
   487  007D8B  2C98               	dw	11416
   488  007D8D  2BDB               	dw	11227
   489  007D8F  2B1E               	dw	11038
   490  007D91  2A61               	dw	10849
   491  007D93  29A3               	dw	10659
   492  007D95  28E5               	dw	10469
   493  007D97  2826               	dw	10278
   494  007D99  2767               	dw	10087
   495  007D9B  26A7               	dw	9895
   496  007D9D  25E7               	dw	9703
   497  007D9F  2527               	dw	9511
   498  007DA1  2467               	dw	9319
   499  007DA3  23A6               	dw	9126
   500  007DA5  22E4               	dw	8932
   501  007DA7  2223               	dw	8739
   502  007DA9  2161               	dw	8545
   503  007DAB  209F               	dw	8351
   504  007DAD  1FDC               	dw	8156
   505  007DAF  1F19               	dw	7961
   506  007DB1  1E56               	dw	7766
   507  007DB3  1D93               	dw	7571
   508  007DB5  1CCF               	dw	7375
   509  007DB7  1C0B               	dw	7179
   510  007DB9  1B46               	dw	6982
   511  007DBB  1A82               	dw	6786
   512  007DBD  19BD               	dw	6589
   513  007DBF  18F8               	dw	6392
   514  007DC1  1833               	dw	6195
   515  007DC3  176D               	dw	5997
   516  007DC5  16A7               	dw	5799
   517  007DC7  15E1               	dw	5601
   518  007DC9  151B               	dw	5403
   519  007DCB  1455               	dw	5205
   520  007DCD  138E               	dw	5006
   521  007DCF  12C7               	dw	4807
   522  007DD1  1200               	dw	4608
   523  007DD3  1139               	dw	4409
   524  007DD5  1072               	dw	4210
   525  007DD7  0FAB               	dw	4011
   526  007DD9  0EE3               	dw	3811
   527  007DDB  0E1B               	dw	3611
   528  007DDD  0D53               	dw	3411
   529  007DDF  0C8B               	dw	3211
   530  007DE1  0BC3               	dw	3011
   531  007DE3  0AFB               	dw	2811
   532  007DE5  0A32               	dw	2610
   533  007DE7  096A               	dw	2410
   534  007DE9  08A1               	dw	2209
   535  007DEB  07D9               	dw	2009
   536  007DED  0710               	dw	1808
   537  007DEF  0647               	dw	1607
   538  007DF1  057E               	dw	1406
   539  007DF3  04B6               	dw	1206
   540  007DF5  03ED               	dw	1005
   541  007DF7  0324               	dw	804
   542  007DF9  025B               	dw	603
   543  007DFB  0192               	dw	402
   544  007DFD  00C9               	dw	201
   545  007DFF  0000               	dw	0
   546  007E01  FF37               	dw	65335
   547  007E03  FE6E               	dw	65134
   548  007E05  FDA5               	dw	64933
   549  007E07  FCDC               	dw	64732
   550  007E09  FC13               	dw	64531
   551  007E0B  FB4A               	dw	64330
   552  007E0D  FA82               	dw	64130
   553  007E0F  F9B9               	dw	63929
   554  007E11  F8F0               	dw	63728
   555  007E13  F827               	dw	63527
   556  007E15  F75F               	dw	63327
   557  007E17  F696               	dw	63126
   558  007E19  F5CE               	dw	62926
   559  007E1B  F505               	dw	62725
   560  007E1D  F43D               	dw	62525
   561  007E1F  F375               	dw	62325
   562  007E21  F2AD               	dw	62125
   563  007E23  F1E5               	dw	61925
   564  007E25  F11D               	dw	61725
   565  007E27  F055               	dw	61525
   566  007E29  EF8E               	dw	61326
   567  007E2B  EEC7               	dw	61127
   568  007E2D  EE00               	dw	60928
   569  007E2F  ED39               	dw	60729
   570  007E31  EC72               	dw	60530
   571  007E33  EBAB               	dw	60331
   572  007E35  EAE5               	dw	60133
   573  007E37  EA1F               	dw	59935
   574  007E39  E959               	dw	59737
   575  007E3B  E893               	dw	59539
   576  007E3D  E7CD               	dw	59341
   577  007E3F  E708               	dw	59144
   578  007E41  E643               	dw	58947
   579  007E43  E57E               	dw	58750
   580  007E45  E4BA               	dw	58554
   581  007E47  E3F5               	dw	58357
   582  007E49  E331               	dw	58161
   583  007E4B  E26D               	dw	57965
   584  007E4D  E1AA               	dw	57770
   585  007E4F  E0E7               	dw	57575
   586  007E51  E024               	dw	57380
   587  007E53  DF61               	dw	57185
   588  007E55  DE9F               	dw	56991
   589  007E57  DDDD               	dw	56797
   590  007E59  DD1C               	dw	56604
   591  007E5B  DC5A               	dw	56410
   592  007E5D  DB99               	dw	56217
   593  007E5F  DAD9               	dw	56025
   594  007E61  DA19               	dw	55833
   595  007E63  D959               	dw	55641
   596  007E65  D899               	dw	55449
   597  007E67  D7DA               	dw	55258
   598  007E69  D71B               	dw	55067
   599  007E6B  D65D               	dw	54877
   600  007E6D  D59F               	dw	54687
   601  007E6F  D4E2               	dw	54498
   602  007E71  D425               	dw	54309
   603  007E73  D368               	dw	54120
   604  007E75  D2AC               	dw	53932
   605  007E77  D1F0               	dw	53744
   606  007E79  D134               	dw	53556
   607  007E7B  D07A               	dw	53370
   608  007E7D  CFBF               	dw	53183
   609  007E7F  CF05               	dw	52997
   610  007E81  CE4C               	dw	52812
   611  007E83  CD93               	dw	52627
   612  007E85  CCDA               	dw	52442
   613  007E87  CC22               	dw	52258
   614  007E89  CB6A               	dw	52074
   615  007E8B  CAB3               	dw	51891
   616  007E8D  C9FD               	dw	51709
   617  007E8F  C947               	dw	51527
   618  007E91  C891               	dw	51345
   619  007E93  C7DC               	dw	51164
   620  007E95  C728               	dw	50984
   621  007E97  C674               	dw	50804
   622  007E99  C5C1               	dw	50625
   623  007E9B  C50E               	dw	50446
   624  007E9D  C45C               	dw	50268
   625  007E9F  C3AA               	dw	50090
   626  007EA1  C2F9               	dw	49913
   627  007EA3  C249               	dw	49737
   628  007EA5  C199               	dw	49561
   629  007EA7  C0EA               	dw	49386
   630  007EA9  C03B               	dw	49211
   631  007EAB  BF8D               	dw	49037
   632  007EAD  BEE0               	dw	48864
   633  007EAF  BE33               	dw	48691
   634  007EB1  BD87               	dw	48519
   635  007EB3  BCDB               	dw	48347
   636  007EB5  BC30               	dw	48176
   637  007EB7  BB86               	dw	48006
   638  007EB9  BADD               	dw	47837
   639  007EBB  BA34               	dw	47668
   640  007EBD  B98C               	dw	47500
   641  007EBF  B8E4               	dw	47332
   642  007EC1  B83D               	dw	47165
   643  007EC3  B797               	dw	46999
   644  007EC5  B6F2               	dw	46834
   645  007EC7  B64D               	dw	46669
   646  007EC9  B5A9               	dw	46505
   647  007ECB  B506               	dw	46342
   648  007ECD  B463               	dw	46179
   649  007ECF  B3C1               	dw	46017
   650  007ED1  B320               	dw	45856
   651  007ED3  B280               	dw	45696
   652  007ED5  B1E0               	dw	45536
   653  007ED7  B141               	dw	45377
   654  007ED9  B0A3               	dw	45219
   655  007EDB  B006               	dw	45062
   656  007EDD  AF69               	dw	44905
   657  007EDF  AECD               	dw	44749
   658  007EE1  AE32               	dw	44594
   659  007EE3  AD98               	dw	44440
   660  007EE5  ACFF               	dw	44287
   661  007EE7  AC66               	dw	44134
   662  007EE9  ABCE               	dw	43982
   663  007EEB  AB37               	dw	43831
   664  007EED  AAA1               	dw	43681
   665  007EEF  AA0C               	dw	43532
   666  007EF1  A977               	dw	43383
   667  007EF3  A8E3               	dw	43235
   668  007EF5  A850               	dw	43088
   669  007EF7  A7BE               	dw	42942
   670  007EF9  A72D               	dw	42797
   671  007EFB  A69D               	dw	42653
   672  007EFD  A60D               	dw	42509
   673  007EFF  A57F               	dw	42367
   674  007F01  A4F1               	dw	42225
   675  007F03  A464               	dw	42084
   676  007F05  A3D8               	dw	41944
   677  007F07  A34D               	dw	41805
   678  007F09  A2C3               	dw	41667
   679  007F0B  A23A               	dw	41530
   680  007F0D  A1B1               	dw	41393
   681  007F0F  A12A               	dw	41258
   682  007F11  A0A3               	dw	41123
   683  007F13  A01E               	dw	40990
   684  007F15  9F99               	dw	40857
   685  007F17  9F15               	dw	40725
   686  007F19  9E92               	dw	40594
   687  007F1B  9E10               	dw	40464
   688  007F1D  9D8F               	dw	40335
   689  007F1F  9D0F               	dw	40207
   690  007F21  9C90               	dw	40080
   691  007F23  9C12               	dw	39954
   692  007F25  9B95               	dw	39829
   693  007F27  9B19               	dw	39705
   694  007F29  9A9E               	dw	39582
   695  007F2B  9A23               	dw	39459
   696  007F2D  99AA               	dw	39338
   697  007F2F  9932               	dw	39218
   698  007F31  98BB               	dw	39099
   699  007F33  9844               	dw	38980
   700  007F35  97CF               	dw	38863
   701  007F37  975B               	dw	38747
   702  007F39  96E7               	dw	38631
   703  007F3B  9675               	dw	38517
   704  007F3D  9604               	dw	38404
   705  007F3F  9594               	dw	38292
   706  007F41  9525               	dw	38181
   707  007F43  94B6               	dw	38070
   708  007F45  9449               	dw	37961
   709  007F47  93DD               	dw	37853
   710  007F49  9372               	dw	37746
   711  007F4B  9308               	dw	37640
   712  007F4D  929F               	dw	37535
   713  007F4F  9237               	dw	37431
   714  007F51  91D0               	dw	37328
   715  007F53  916B               	dw	37227
   716  007F55  9106               	dw	37126
   717  007F57  90A2               	dw	37026
   718  007F59  9040               	dw	36928
   719  007F5B  8FDE               	dw	36830
   720  007F5D  8F7E               	dw	36734
   721  007F5F  8F1F               	dw	36639
   722  007F61  8EC0               	dw	36544
   723  007F63  8E63               	dw	36451
   724  007F65  8E07               	dw	36359
   725  007F67  8DAC               	dw	36268
   726  007F69  8D52               	dw	36178
   727  007F6B  8CFA               	dw	36090
   728  007F6D  8CA2               	dw	36002
   729  007F6F  8C4B               	dw	35915
   730  007F71  8BF6               	dw	35830
   731  007F73  8BA2               	dw	35746
   732  007F75  8B4F               	dw	35663
   733  007F77  8AFD               	dw	35581
   734  007F79  8AAC               	dw	35500
   735  007F7B  8A5C               	dw	35420
   736  007F7D  8A0D               	dw	35341
   737  007F7F  89C0               	dw	35264
   738  007F81  8973               	dw	35187
   739  007F83  8928               	dw	35112
   740  007F85  88DE               	dw	35038
   741  007F87  8895               	dw	34965
   742  007F89  884D               	dw	34893
   743  007F8B  8807               	dw	34823
   744  007F8D  87C1               	dw	34753
   745  007F8F  877D               	dw	34685
   746  007F91  873A               	dw	34618
   747  007F93  86F8               	dw	34552
   748  007F95  86B7               	dw	34487
   749  007F97  8677               	dw	34423
   750  007F99  8639               	dw	34361
   751  007F9B  85FC               	dw	34300
   752  007F9D  85BF               	dw	34239
   753  007F9F  8584               	dw	34180
   754  007FA1  854B               	dw	34123
   755  007FA3  8512               	dw	34066
   756  007FA5  84DB               	dw	34011
   757  007FA7  84A4               	dw	33956
   758  007FA9  846F               	dw	33903
   759  007FAB  843C               	dw	33852
   760  007FAD  8409               	dw	33801
   761  007FAF  83D7               	dw	33751
   762  007FB1  83A7               	dw	33703
   763  007FB3  8378               	dw	33656
   764  007FB5  834A               	dw	33610
   765  007FB7  831E               	dw	33566
   766  007FB9  82F2               	dw	33522
   767  007FBB  82C8               	dw	33480
   768  007FBD  829F               	dw	33439
   769  007FBF  8277               	dw	33399
   770  007FC1  8250               	dw	33360
   771  007FC3  822B               	dw	33323
   772  007FC5  8207               	dw	33287
   773  007FC7  81E4               	dw	33252
   774  007FC9  81C2               	dw	33218
   775  007FCB  81A2               	dw	33186
   776  007FCD  8182               	dw	33154
   777  007FCF  8164               	dw	33124
   778  007FD1  8147               	dw	33095
   779  007FD3  812C               	dw	33068
   780  007FD5  8111               	dw	33041
   781  007FD7  80F8               	dw	33016
   782  007FD9  80E0               	dw	32992
   783  007FDB  80C9               	dw	32969
   784  007FDD  80B4               	dw	32948
   785  007FDF  809F               	dw	32927
   786  007FE1  808C               	dw	32908
   787  007FE3  807A               	dw	32890
   788  007FE5  806A               	dw	32874
   789  007FE7  805A               	dw	32858
   790  007FE9  804C               	dw	32844
   791  007FEB  803F               	dw	32831
   792  007FED  8033               	dw	32819
   793  007FEF  8029               	dw	32809
   794  007FF1  8020               	dw	32800
   795  007FF3  8018               	dw	32792
   796  007FF5  8011               	dw	32785
   797  007FF7  800B               	dw	32779
   798  007FF9  8007               	dw	32775
   799  007FFB  8004               	dw	32772
   800  007FFD  8002               	dw	32770
   801  007FFF                     __end_of_Sinewave:
   802                           	opt stack 0
   803  0000                     _ADCON0	set	4034
   804  0000                     _ADCON0bits	set	4034
   805  0000                     _ADCON1	set	4033
   806  0000                     _ADCON2	set	4032
   807  0000                     _ADRESH	set	4036
   808  0000                     _ADRESL	set	4035
   809  0000                     _ANSELC	set	3898
   810  0000                     _INTCONbits	set	4082
   811  0000                     _LATC	set	3979
   812  0000                     _OSCCONbits	set	4051
   813  0000                     _OSCTUNEbits	set	3995
   814  0000                     _PIE1	set	3997
   815  0000                     _PIE1bits	set	3997
   816  0000                     _PIR1bits	set	3998
   817  0000                     _RCSTA1	set	4011
   818  0000                     _RCSTA1bits	set	4011
   819  0000                     _SPBRG1	set	4015
   820  0000                     _SPBRGH1	set	4016
   821  0000                     _TRISC	set	3988
   822  0000                     _TRISCbits	set	3988
   823  0000                     _TXREG1	set	4013
   824  0000                     _TXSTA1	set	4012
   825  0000                     _TXSTA1bits	set	4012
   826                           
   827                           ; #config settings
   828  007FFF  00                 	db	0	; dummy byte at the end
   829  0000                     
   830                           	psect	cinit
   831  006C4C                     __pcinit:
   832                           	opt stack 0
   833  006C4C                     start_initialization:
   834                           	opt stack 0
   835  006C4C                     __initialization:
   836                           	opt stack 0
   837                           
   838                           ; Clear objects allocated to BANK1 (128 bytes)
   839  006C4C  EE01  F000         	lfsr	0,__pbssBANK1
   840  006C50  0E80               	movlw	128
   841  006C52                     clear_0:
   842  006C52  6AEE               	clrf	postinc0,c
   843  006C54  06E8               	decf	wreg,f,c
   844  006C56  E1FD               	bnz	clear_0
   845                           
   846                           ; Clear objects allocated to BANK0 (133 bytes)
   847  006C58  EE00  F060         	lfsr	0,__pbssBANK0
   848  006C5C  0E85               	movlw	133
   849  006C5E                     clear_1:
   850  006C5E  6AEE               	clrf	postinc0,c
   851  006C60  06E8               	decf	wreg,f,c
   852  006C62  E1FD               	bnz	clear_1
   853                           
   854                           ; Clear objects allocated to COMRAM (4 bytes)
   855  006C64  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   856  006C66  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   857  006C68  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   858  006C6A  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   859  006C6C                     end_of_initialization:
   860                           	opt stack 0
   861  006C6C                     __end_of__initialization:
   862                           	opt stack 0
   863  006C6C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   864  006C6E  6EF8               	movwf	tblptru,c
   865  006C70  0100               	movlb	0
   866  006C72  EFD3  F036         	goto	_main	;jump to C main() function
   867                           tblptru	equ	0xFF8
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           
   871                           	psect	bssCOMRAM
   872  00005A                     __pbssCOMRAM:
   873                           	opt stack 0
   874  00005A                     _i:
   875                           	opt stack 0
   876  00005A                     	ds	2
   877  00005C                     _USART1_Status:
   878                           	opt stack 0
   879  00005C                     	ds	1
   880  00005D                     _input:
   881                           	opt stack 0
   882  00005D                     	ds	1
   883                           tblptru	equ	0xFF8
   884                           postinc0	equ	0xFEE
   885                           wreg	equ	0xFE8
   886                           
   887                           	psect	bssBANK0
   888  000060                     __pbssBANK0:
   889                           	opt stack 0
   890  000060                     _data:
   891                           	opt stack 0
   892  000060                     	ds	5
   893  000065                     _realNumbers:
   894                           	opt stack 0
   895  000065                     	ds	128
   896                           tblptru	equ	0xFF8
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           
   900                           	psect	bssBANK1
   901  000100                     __pbssBANK1:
   902                           	opt stack 0
   903  000100                     _imaginaryNumbers:
   904                           	opt stack 0
   905  000100                     	ds	128
   906                           tblptru	equ	0xFF8
   907                           postinc0	equ	0xFEE
   908                           wreg	equ	0xFE8
   909                           
   910                           	psect	cstackBANK0
   911  0000E5                     __pcstackBANK0:
   912                           	opt stack 0
   913  0000E5                     main@adc_value:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x0
   917  0000E5                     	ds	2
   918  0000E7                     main@root:
   919                           	opt stack 0
   920                           
   921                           ; 4 bytes @ 0x2
   922  0000E7                     	ds	4
   923  0000EB                     main@i:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x6
   927  0000EB                     	ds	2
   928  0000ED                     main@place:
   929                           	opt stack 0
   930                           
   931                           ; 4 bytes @ 0x8
   932  0000ED                     	ds	4
   933  0000F1                     main@k:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0xC
   937  0000F1                     	ds	2
   938                           tblptru	equ	0xFF8
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           
   942                           	psect	cstackCOMRAM
   943  000001                     __pcstackCOMRAM:
   944                           	opt stack 0
   945  000001                     ?_ReadADC:
   946                           	opt stack 0
   947  000001                     ?___wmul:
   948                           	opt stack 0
   949  000001                     ?___lmul:
   950                           	opt stack 0
   951  000001                     OpenADC@config2:
   952                           	opt stack 0
   953  000001                     Write1USART@data:
   954                           	opt stack 0
   955  000001                     Open1USART@spbrg:
   956                           	opt stack 0
   957  000001                     ___wmul@multiplier:
   958                           	opt stack 0
   959  000001                     ___lmul@multiplier:
   960                           	opt stack 0
   961                           
   962                           ; 4 bytes @ 0x0
   963  000001                     	ds	1
   964  000002                     OpenADC@config3:
   965                           	opt stack 0
   966  000002                     sendIntArray@array:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x1
   970  000002                     	ds	1
   971  000003                     ??_OpenADC:
   972  000003                     ??_Open1USART:
   973  000003                     ___wmul@multiplicand:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x2
   977  000003                     	ds	1
   978  000004                     sendIntArray@size:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x3
   982  000004                     	ds	1
   983  000005                     OpenADC@config:
   984                           	opt stack 0
   985  000005                     ___wmul@product:
   986                           	opt stack 0
   987  000005                     ___lmul@multiplicand:
   988                           	opt stack 0
   989                           
   990                           ; 4 bytes @ 0x4
   991  000005                     	ds	1
   992  000006                     Open1USART@config:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x5
   996  000006                     	ds	3
   997  000009                     ___lmul@product:
   998                           	opt stack 0
   999                           
  1000                           ; 4 bytes @ 0x8
  1001  000009                     	ds	4
  1002  00000D                     fix_fft@fr:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0xC
  1006  00000D                     	ds	2
  1007  00000F                     fix_fft@fi:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0xE
  1011  00000F                     	ds	2
  1012  000011                     fix_fft@m:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x10
  1016  000011                     	ds	2
  1017  000013                     ??_fix_fft:
  1018                           
  1019                           ; 0 bytes @ 0x12
  1020  000013                     	ds	8
  1021  00001B                     fix_fft@k:
  1022                           	opt stack 0
  1023                           
  1024                           ; 4 bytes @ 0x1A
  1025  00001B                     	ds	4
  1026  00001F                     fix_fft@nn:
  1027                           	opt stack 0
  1028                           
  1029                           ; 4 bytes @ 0x1E
  1030  00001F                     	ds	4
  1031  000023                     fix_fft@istep:
  1032                           	opt stack 0
  1033                           
  1034                           ; 4 bytes @ 0x22
  1035  000023                     	ds	4
  1036  000027                     fix_fft@qr:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x26
  1040  000027                     	ds	2
  1041  000029                     fix_fft@qi:
  1042                           	opt stack 0
  1043                           
  1044                           ; 2 bytes @ 0x28
  1045  000029                     	ds	2
  1046  00002B                     fix_fft@wr:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0x2A
  1050  00002B                     	ds	2
  1051  00002D                     fix_fft@wi:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0x2C
  1055  00002D                     	ds	2
  1056  00002F                     fix_fft@n:
  1057                           	opt stack 0
  1058                           
  1059                           ; 4 bytes @ 0x2E
  1060  00002F                     	ds	4
  1061  000033                     fix_fft@tr:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x32
  1065  000033                     	ds	2
  1066  000035                     fix_fft@ti:
  1067                           	opt stack 0
  1068                           
  1069                           ; 2 bytes @ 0x34
  1070  000035                     	ds	2
  1071  000037                     fix_fft@b:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0x36
  1075  000037                     	ds	2
  1076  000039                     fix_fft@i:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x38
  1080  000039                     	ds	4
  1081  00003D                     fix_fft@mr:
  1082                           	opt stack 0
  1083                           
  1084                           ; 4 bytes @ 0x3C
  1085  00003D                     	ds	4
  1086  000041                     fix_fft@l:
  1087                           	opt stack 0
  1088                           
  1089                           ; 4 bytes @ 0x40
  1090  000041                     	ds	4
  1091  000045                     fix_fft@j:
  1092                           	opt stack 0
  1093                           
  1094                           ; 4 bytes @ 0x44
  1095  000045                     	ds	4
  1096  000049                     fix_fft@c:
  1097                           	opt stack 0
  1098                           
  1099                           ; 4 bytes @ 0x48
  1100  000049                     	ds	4
  1101  00004D                     ??_main:
  1102                           
  1103                           ; 0 bytes @ 0x4C
  1104  00004D                     	ds	13
  1105                           tblptru	equ	0xFF8
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           
  1109 ;;
  1110 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
  1111 ;;
  1112 ;; *************** function _main *****************
  1113 ;; Defined at:
  1114 ;;		line 38 in file "main pic18.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  place           4    8[BANK0 ] long 
  1119 ;;  root            4    2[BANK0 ] long 
  1120 ;;  k               2   12[BANK0 ] int 
  1121 ;;  i               2    6[BANK0 ] short 
  1122 ;;  adc_value       2    0[BANK0 ] unsigned int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;		None               void
  1125 ;; Registers used:
  1126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1132 ;;      Params:         0       0       0       0       0       0       0
  1133 ;;      Locals:         0      14       0       0       0       0       0
  1134 ;;      Temps:         13       0       0       0       0       0       0
  1135 ;;      Totals:        13      14       0       0       0       0       0
  1136 ;;Total ram usage:       27 bytes
  1137 ;; Hardware stack levels required when called:    3
  1138 ;; This function calls:
  1139 ;;		_BusyADC
  1140 ;;		_ConvertADC
  1141 ;;		_Open1USART
  1142 ;;		_OpenADC
  1143 ;;		_ReadADC
  1144 ;;		___wmul
  1145 ;;		_fix_fft
  1146 ;;		_sendIntArray
  1147 ;; This function is called by:
  1148 ;;		Startup code after reset
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text0
  1153  006DA6                     __ptext0:
  1154                           	opt stack 0
  1155  006DA6                     _main:
  1156                           	opt stack 28
  1157                           
  1158                           ;main pic18.c: 39: unsigned int adc_value;
  1159                           ;main pic18.c: 40: TRISC = 0x00;
  1160                           
  1161                           ;incstack = 0
  1162  006DA6  0E00               	movlw	0
  1163  006DA8  6E94               	movwf	3988,c	;volatile
  1164                           
  1165                           ;main pic18.c: 41: LATC = 0x00;
  1166  006DAA  0E00               	movlw	0
  1167  006DAC  6E8B               	movwf	3979,c	;volatile
  1168                           
  1169                           ;main pic18.c: 42: ANSELC = 0x00;
  1170  006DAE  0E00               	movlw	0
  1171  006DB0  010F               	movlb	15	; () banked
  1172  006DB2  6F3A               	movwf	58,b	;volatile
  1173                           
  1174                           ; BSR set to: 15
  1175                           ;main pic18.c: 43: TRISCbits.TRISC6 = 1;
  1176  006DB4  8C94               	bsf	3988,6,c	;volatile
  1177                           
  1178                           ; BSR set to: 15
  1179                           ;main pic18.c: 44: TRISCbits.TRISC7 = 1;
  1180  006DB6  8E94               	bsf	3988,7,c	;volatile
  1181                           
  1182                           ; BSR set to: 15
  1183                           ;main pic18.c: 46: OSCCONbits.IRCF = 0b111;
  1184  006DB8  88D3               	bsf	4051,4,c	;volatile
  1185  006DBA  8AD3               	bsf	4051,5,c	;volatile
  1186  006DBC  8CD3               	bsf	4051,6,c	;volatile
  1187                           
  1188                           ;main pic18.c: 47: OSCCONbits.SCS = 0b11;
  1189  006DBE  0E03               	movlw	3
  1190  006DC0  12D3               	iorwf	4051,f,c	;volatile
  1191                           
  1192                           ; BSR set to: 15
  1193                           ;main pic18.c: 48: OSCTUNEbits.TUN = 0b01111;
  1194  006DC2  809B               	bsf	3995,0,c	;volatile
  1195  006DC4  829B               	bsf	3995,1,c	;volatile
  1196  006DC6  849B               	bsf	3995,2,c	;volatile
  1197  006DC8  869B               	bsf	3995,3,c	;volatile
  1198  006DCA  989B               	bcf	3995,4,c	;volatile
  1199  006DCC  9A9B               	bcf	3995,5,c	;volatile
  1200                           
  1201                           ; BSR set to: 15
  1202                           ;main pic18.c: 51: OpenADC(0b11111111 &
  1203                           ;main pic18.c: 52: 0b11111111 &
  1204                           ;main pic18.c: 53: 0b11110001,
  1205                           ;main pic18.c: 54: 0b10000011 &
  1206                           ;main pic18.c: 55: 0b01111111 &
  1207                           ;main pic18.c: 56: 0b11110111 &
  1208                           ;main pic18.c: 57: 0b11111100,
  1209                           ;main pic18.c: 58: 0b1110);
  1210  006DCE  0E00               	movlw	0
  1211  006DD0  6E01               	movwf	OpenADC@config2,c
  1212  006DD2  0E0E               	movlw	14
  1213  006DD4  6E02               	movwf	OpenADC@config3,c
  1214  006DD6  0EF1               	movlw	241
  1215  006DD8  EC55  F036         	call	_OpenADC
  1216                           
  1217                           ;main pic18.c: 59: RCSTA1&=0b01001111,TXSTA1bits.TXEN=0,PIE1&=0b11001111;
  1218  006DDC  0E4F               	movlw	79
  1219  006DDE  16AB               	andwf	4011,f,c	;volatile
  1220  006DE0  9AAC               	bcf	4012,5,c	;volatile
  1221  006DE2  0ECF               	movlw	207
  1222  006DE4  169D               	andwf	3997,f,c	;volatile
  1223                           
  1224                           ;main pic18.c: 60: Open1USART( 0b01111111 &
  1225                           ;main pic18.c: 61: 0b10111111 &
  1226                           ;main pic18.c: 62: 0b11111110 &
  1227                           ;main pic18.c: 63: 0b11111101 &
  1228                           ;main pic18.c: 64: 0b11111111 &
  1229                           ;main pic18.c: 65: 0b11101111,
  1230                           ;main pic18.c: 66: 31 );
  1231  006DE6  0E00               	movlw	0
  1232  006DE8  6E02               	movwf	Open1USART@spbrg+1,c
  1233  006DEA  0E1F               	movlw	31
  1234  006DEC  6E01               	movwf	Open1USART@spbrg,c
  1235  006DEE  0E2C               	movlw	44
  1236  006DF0  ECA7  F036         	call	_Open1USART
  1237  006DF4                     l1292:
  1238                           
  1239                           ;main pic18.c: 80: short i = 0;
  1240  006DF4  0E00               	movlw	0
  1241  006DF6  0100               	movlb	0	; () banked
  1242  006DF8  6FEC               	movwf	(main@i+1)& (0+255),b
  1243  006DFA  0E00               	movlw	0
  1244  006DFC  0100               	movlb	0	; () banked
  1245  006DFE  6FEB               	movwf	main@i& (0+255),b
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;main pic18.c: 81: for (i = 0; i < 64; i++) {
  1249  006E00  0E00               	movlw	0
  1250  006E02  0100               	movlb	0	; () banked
  1251  006E04  6FEC               	movwf	(main@i+1)& (0+255),b
  1252  006E06  0E00               	movlw	0
  1253  006E08  0100               	movlb	0	; () banked
  1254  006E0A  6FEB               	movwf	main@i& (0+255),b
  1255  006E0C  0100               	movlb	0	; () banked
  1256  006E0E  51EC               	movf	(main@i+1)& (0+255),w,b
  1257  006E10  0A80               	xorlw	128
  1258  006E12  0F80               	addlw	-128
  1259  006E14  0E40               	movlw	64
  1260  006E16  B4D8               	btfsc	status,2,c
  1261  006E18  5DEB               	subwf	main@i& (0+255),w,b
  1262  006E1A  B0D8               	btfsc	status,0,c
  1263  006E1C  D03F               	goto	l1312
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;main pic18.c: 83: ConvertADC();
  1267                           
  1268                           ; BSR set to: 0
  1269                           
  1270                           ; BSR set to: 0
  1271  006E1E  ECF3  F035         	call	_ConvertADC	;wreg free
  1272  006E22                     l1300:
  1273  006E22  ECFA  F035         	call	_BusyADC	;wreg free
  1274  006E26  0900               	iorlw	0
  1275  006E28  A4D8               	btfss	status,2,c
  1276  006E2A  D7FB               	goto	l1300
  1277                           
  1278                           ;main pic18.c: 91: adc_value = ReadADC() >> 2;
  1279  006E2C  ECF5  F035         	call	_ReadADC	;wreg free
  1280  006E30  3402               	rlcf	?_ReadADC+1,w,c
  1281  006E32  3202               	rrcf	?_ReadADC+1,f,c
  1282  006E34  3201               	rrcf	?_ReadADC,f,c
  1283  006E36  3402               	rlcf	?_ReadADC+1,w,c
  1284  006E38  3202               	rrcf	?_ReadADC+1,f,c
  1285  006E3A  3201               	rrcf	?_ReadADC,f,c
  1286  006E3C  C001  F0E5         	movff	?_ReadADC,main@adc_value
  1287  006E40  C002  F0E6         	movff	?_ReadADC+1,main@adc_value+1
  1288                           
  1289                           ;main pic18.c: 92: realNumbers[i] = adc_value;
  1290  006E44  0E65               	movlw	low _realNumbers
  1291  006E46  6E4D               	movwf	??_main& (0+255),c
  1292  006E48  0E00               	movlw	high _realNumbers
  1293  006E4A  6E4E               	movwf	(??_main+1)& (0+255),c
  1294  006E4C  90D8               	bcf	status,0,c
  1295  006E4E  0100               	movlb	0	; () banked
  1296  006E50  35EB               	rlcf	main@i& (0+255),w,b
  1297  006E52  6ED9               	movwf	fsr2l,c
  1298  006E54  0100               	movlb	0	; () banked
  1299  006E56  35EC               	rlcf	(main@i+1)& (0+255),w,b
  1300  006E58  6EDA               	movwf	fsr2h,c
  1301  006E5A  504D               	movf	??_main,w,c
  1302  006E5C  26D9               	addwf	fsr2l,f,c
  1303  006E5E  504E               	movf	??_main+1,w,c
  1304  006E60  22DA               	addwfc	fsr2h,f,c
  1305  006E62  0100               	movlb	0	; () banked
  1306  006E64  C0E5  FFDE         	movff	main@adc_value,postinc2
  1307  006E68  0100               	movlb	0	; () banked
  1308  006E6A  C0E6  FFDD         	movff	main@adc_value+1,postdec2
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;main pic18.c: 95: imaginaryNumbers[i] = 0;
  1312  006E6E  0E00               	movlw	low _imaginaryNumbers
  1313  006E70  6E4D               	movwf	??_main& (0+255),c
  1314  006E72  0E01               	movlw	high _imaginaryNumbers
  1315  006E74  6E4E               	movwf	(??_main+1)& (0+255),c
  1316  006E76  90D8               	bcf	status,0,c
  1317  006E78  0100               	movlb	0	; () banked
  1318  006E7A  35EB               	rlcf	main@i& (0+255),w,b
  1319  006E7C  6ED9               	movwf	fsr2l,c
  1320  006E7E  0100               	movlb	0	; () banked
  1321  006E80  35EC               	rlcf	(main@i+1)& (0+255),w,b
  1322  006E82  6EDA               	movwf	fsr2h,c
  1323  006E84  504D               	movf	??_main,w,c
  1324  006E86  26D9               	addwf	fsr2l,f,c
  1325  006E88  504E               	movf	??_main+1,w,c
  1326  006E8A  22DA               	addwfc	fsr2h,f,c
  1327  006E8C  0E00               	movlw	0
  1328  006E8E  6EDE               	movwf	postinc2,c
  1329  006E90  0E00               	movlw	0
  1330  006E92  6EDD               	movwf	postdec2,c
  1331                           
  1332                           ; BSR set to: 0
  1333  006E94  0100               	movlb	0	; () banked
  1334  006E96  4BEB               	infsnz	main@i& (0+255),f,b
  1335  006E98  2BEC               	incf	(main@i+1)& (0+255),f,b
  1336  006E9A  D7B8               	goto	L1
  1337  006E9C                     l1312:
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;main pic18.c: 96: }
  1341                           ;main pic18.c: 98: fix_fft(realNumbers, imaginaryNumbers, 6);
  1342  006E9C  0100               	movlb	0	; () banked
  1343  006E9E  0E00               	movlw	high _realNumbers
  1344  006EA0  6E0E               	movwf	fix_fft@fr+1,c
  1345  006EA2  0100               	movlb	0	; () banked
  1346  006EA4  0E65               	movlw	low _realNumbers
  1347  006EA6  6E0D               	movwf	fix_fft@fr,c
  1348  006EA8  0101               	movlb	1	; () banked
  1349  006EAA  0E01               	movlw	high _imaginaryNumbers
  1350  006EAC  6E10               	movwf	fix_fft@fi+1,c
  1351  006EAE  0101               	movlb	1	; () banked
  1352  006EB0  0E00               	movlw	low _imaginaryNumbers
  1353  006EB2  6E0F               	movwf	fix_fft@fi,c
  1354  006EB4  0E00               	movlw	0
  1355  006EB6  6E12               	movwf	fix_fft@m+1,c
  1356  006EB8  0E06               	movlw	6
  1357  006EBA  6E11               	movwf	fix_fft@m,c
  1358  006EBC  EC39  F039         	call	_fix_fft	;wreg free
  1359                           
  1360                           ;main pic18.c: 101: long place, root;
  1361                           ;main pic18.c: 102: int k = 0;
  1362  006EC0  0E00               	movlw	0
  1363  006EC2  0100               	movlb	0	; () banked
  1364  006EC4  6FF2               	movwf	(main@k+1)& (0+255),b
  1365  006EC6  0E00               	movlw	0
  1366  006EC8  0100               	movlb	0	; () banked
  1367  006ECA  6FF1               	movwf	main@k& (0+255),b
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;main pic18.c: 103: for (k=0; k < 32; k++) {
  1371  006ECC  0E00               	movlw	0
  1372  006ECE  0100               	movlb	0	; () banked
  1373  006ED0  6FF2               	movwf	(main@k+1)& (0+255),b
  1374  006ED2  0E00               	movlw	0
  1375  006ED4  0100               	movlb	0	; () banked
  1376  006ED6  6FF1               	movwf	main@k& (0+255),b
  1377  006ED8                     
  1378                           ; BSR set to: 0
  1379  006ED8  0100               	movlb	0	; () banked
  1380  006EDA  51F2               	movf	(main@k+1)& (0+255),w,b
  1381  006EDC  0A80               	xorlw	128
  1382  006EDE  0F80               	addlw	-128
  1383  006EE0  0E20               	movlw	32
  1384  006EE2  B4D8               	btfsc	status,2,c
  1385  006EE4  5DF1               	subwf	main@k& (0+255),w,b
  1386  006EE6  B0D8               	btfsc	status,0,c
  1387  006EE8  D1B7               	goto	l1354
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;main pic18.c: 104: realNumbers[k] = (realNumbers[k] * realNumbers[k] +
  1391                           ;main pic18.c: 105: imaginaryNumbers[k] * imaginaryNumbers[k]);
  1392                           
  1393                           ; BSR set to: 0
  1394                           
  1395                           ; BSR set to: 0
  1396  006EEA  0E65               	movlw	low _realNumbers
  1397  006EEC  6E4D               	movwf	??_main& (0+255),c
  1398  006EEE  0E00               	movlw	high _realNumbers
  1399  006EF0  6E4E               	movwf	(??_main+1)& (0+255),c
  1400  006EF2  90D8               	bcf	status,0,c
  1401  006EF4  0100               	movlb	0	; () banked
  1402  006EF6  35F1               	rlcf	main@k& (0+255),w,b
  1403  006EF8  6ED9               	movwf	fsr2l,c
  1404  006EFA  0100               	movlb	0	; () banked
  1405  006EFC  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1406  006EFE  6EDA               	movwf	fsr2h,c
  1407  006F00  504D               	movf	??_main,w,c
  1408  006F02  26D9               	addwf	fsr2l,f,c
  1409  006F04  504E               	movf	??_main+1,w,c
  1410  006F06  22DA               	addwfc	fsr2h,f,c
  1411  006F08  CFDE F001          	movff	postinc2,___wmul@multiplier
  1412  006F0C  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1413  006F10  0E65               	movlw	low _realNumbers
  1414  006F12  6E4F               	movwf	(??_main+2)& (0+255),c
  1415  006F14  0E00               	movlw	high _realNumbers
  1416  006F16  6E50               	movwf	(??_main+3)& (0+255),c
  1417  006F18  90D8               	bcf	status,0,c
  1418  006F1A  0100               	movlb	0	; () banked
  1419  006F1C  35F1               	rlcf	main@k& (0+255),w,b
  1420  006F1E  6ED9               	movwf	fsr2l,c
  1421  006F20  0100               	movlb	0	; () banked
  1422  006F22  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1423  006F24  6EDA               	movwf	fsr2h,c
  1424  006F26  504F               	movf	??_main+2,w,c
  1425  006F28  26D9               	addwf	fsr2l,f,c
  1426  006F2A  5050               	movf	??_main+3,w,c
  1427  006F2C  22DA               	addwfc	fsr2h,f,c
  1428  006F2E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1429  006F32  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1430  006F36  EC13  F036         	call	___wmul	;wreg free
  1431  006F3A  C001  F051         	movff	?___wmul,??_main+4
  1432  006F3E  C002  F052         	movff	?___wmul+1,??_main+5
  1433  006F42  0E00               	movlw	low _imaginaryNumbers
  1434  006F44  6E53               	movwf	(??_main+6)& (0+255),c
  1435  006F46  0E01               	movlw	high _imaginaryNumbers
  1436  006F48  6E54               	movwf	(??_main+7)& (0+255),c
  1437  006F4A  90D8               	bcf	status,0,c
  1438  006F4C  0100               	movlb	0	; () banked
  1439  006F4E  35F1               	rlcf	main@k& (0+255),w,b
  1440  006F50  6ED9               	movwf	fsr2l,c
  1441  006F52  0100               	movlb	0	; () banked
  1442  006F54  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1443  006F56  6EDA               	movwf	fsr2h,c
  1444  006F58  5053               	movf	??_main+6,w,c
  1445  006F5A  26D9               	addwf	fsr2l,f,c
  1446  006F5C  5054               	movf	??_main+7,w,c
  1447  006F5E  22DA               	addwfc	fsr2h,f,c
  1448  006F60  CFDE F001          	movff	postinc2,___wmul@multiplier
  1449  006F64  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1450  006F68  0E00               	movlw	low _imaginaryNumbers
  1451  006F6A  6E55               	movwf	(??_main+8)& (0+255),c
  1452  006F6C  0E01               	movlw	high _imaginaryNumbers
  1453  006F6E  6E56               	movwf	(??_main+9)& (0+255),c
  1454  006F70  90D8               	bcf	status,0,c
  1455  006F72  0100               	movlb	0	; () banked
  1456  006F74  35F1               	rlcf	main@k& (0+255),w,b
  1457  006F76  6ED9               	movwf	fsr2l,c
  1458  006F78  0100               	movlb	0	; () banked
  1459  006F7A  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1460  006F7C  6EDA               	movwf	fsr2h,c
  1461  006F7E  5055               	movf	??_main+8,w,c
  1462  006F80  26D9               	addwf	fsr2l,f,c
  1463  006F82  5056               	movf	??_main+9,w,c
  1464  006F84  22DA               	addwfc	fsr2h,f,c
  1465  006F86  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1466  006F8A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1467  006F8E  EC13  F036         	call	___wmul	;wreg free
  1468  006F92  5001               	movf	?___wmul,w,c
  1469  006F94  2651               	addwf	??_main+4,f,c
  1470  006F96  5002               	movf	?___wmul+1,w,c
  1471  006F98  2252               	addwfc	??_main+5,f,c
  1472  006F9A  0E65               	movlw	low _realNumbers
  1473  006F9C  6E57               	movwf	(??_main+10)& (0+255),c
  1474  006F9E  0E00               	movlw	high _realNumbers
  1475  006FA0  6E58               	movwf	(??_main+11)& (0+255),c
  1476  006FA2  90D8               	bcf	status,0,c
  1477  006FA4  0100               	movlb	0	; () banked
  1478  006FA6  35F1               	rlcf	main@k& (0+255),w,b
  1479  006FA8  6ED9               	movwf	fsr2l,c
  1480  006FAA  0100               	movlb	0	; () banked
  1481  006FAC  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1482  006FAE  6EDA               	movwf	fsr2h,c
  1483  006FB0  5057               	movf	??_main+10,w,c
  1484  006FB2  26D9               	addwf	fsr2l,f,c
  1485  006FB4  5058               	movf	??_main+11,w,c
  1486  006FB6  22DA               	addwfc	fsr2h,f,c
  1487  006FB8  C051  FFDE         	movff	??_main+4,postinc2
  1488  006FBC  C052  FFDD         	movff	??_main+5,postdec2
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;main pic18.c: 107: place = 0x40000000;
  1492  006FC0  0E00               	movlw	0
  1493  006FC2  0100               	movlb	0	; () banked
  1494  006FC4  6FED               	movwf	main@place& (0+255),b
  1495  006FC6  0E00               	movlw	0
  1496  006FC8  0100               	movlb	0	; () banked
  1497  006FCA  6FEE               	movwf	(main@place+1)& (0+255),b
  1498  006FCC  0E00               	movlw	0
  1499  006FCE  0100               	movlb	0	; () banked
  1500  006FD0  6FEF               	movwf	(main@place+2)& (0+255),b
  1501  006FD2  0E40               	movlw	64
  1502  006FD4  0100               	movlb	0	; () banked
  1503  006FD6  6FF0               	movwf	(main@place+3)& (0+255),b
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;main pic18.c: 108: root = 0;
  1507  006FD8  0E00               	movlw	0
  1508  006FDA  0100               	movlb	0	; () banked
  1509  006FDC  6FE7               	movwf	main@root& (0+255),b
  1510  006FDE  0E00               	movlw	0
  1511  006FE0  0100               	movlb	0	; () banked
  1512  006FE2  6FE8               	movwf	(main@root+1)& (0+255),b
  1513  006FE4  0E00               	movlw	0
  1514  006FE6  0100               	movlb	0	; () banked
  1515  006FE8  6FE9               	movwf	(main@root+2)& (0+255),b
  1516  006FEA  0E00               	movlw	0
  1517  006FEC  0100               	movlb	0	; () banked
  1518  006FEE  6FEA               	movwf	(main@root+3)& (0+255),b
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;main pic18.c: 110: if (realNumbers[k] >= 0) {
  1522  006FF0  0E65               	movlw	low _realNumbers
  1523  006FF2  6E4D               	movwf	??_main& (0+255),c
  1524  006FF4  0E00               	movlw	high _realNumbers
  1525  006FF6  6E4E               	movwf	(??_main+1)& (0+255),c
  1526  006FF8  90D8               	bcf	status,0,c
  1527  006FFA  0100               	movlb	0	; () banked
  1528  006FFC  35F1               	rlcf	main@k& (0+255),w,b
  1529  006FFE  6ED9               	movwf	fsr2l,c
  1530  007000  0100               	movlb	0	; () banked
  1531  007002  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1532  007004  6EDA               	movwf	fsr2h,c
  1533  007006  504D               	movf	??_main,w,c
  1534  007008  26D9               	addwf	fsr2l,f,c
  1535  00700A  504E               	movf	??_main+1,w,c
  1536  00700C  22DA               	addwfc	fsr2h,f,c
  1537  00700E  CFDE F04F          	movff	postinc2,??_main+2
  1538  007012  CFDD F050          	movff	postdec2,??_main+3
  1539  007016  AE50               	btfss	??_main+3,7,c
  1540  007018  D021               	goto	l1334
  1541  00701A  D105               	goto	l1348
  1542  00701C                     l1332:
  1543                           
  1544                           ; BSR set to: 0
  1545  00701C  0E02               	movlw	2
  1546  00701E  6E4D               	movwf	??_main& (0+255),c
  1547  007020  0100               	movlb	0	; () banked
  1548  007022  C0ED  F04E         	movff	main@place,??_main+1
  1549  007026  0100               	movlb	0	; () banked
  1550  007028  C0EE  F04F         	movff	main@place+1,??_main+2
  1551  00702C  0100               	movlb	0	; () banked
  1552  00702E  C0EF  F050         	movff	main@place+2,??_main+3
  1553  007032  0100               	movlb	0	; () banked
  1554  007034  C0F0  F051         	movff	main@place+3,??_main+4
  1555  007038                     u755:
  1556  007038  664D               	tstfsz	??_main,c
  1557  00703A  D001               	goto	u756
  1558  00703C  D007               	goto	u757
  1559  00703E                     u756:
  1560  00703E  3451               	rlcf	??_main+4,w,c
  1561  007040  3251               	rrcf	??_main+4,f,c
  1562  007042  3250               	rrcf	??_main+3,f,c
  1563  007044  324F               	rrcf	??_main+2,f,c
  1564  007046  324E               	rrcf	??_main+1,f,c
  1565  007048  2E4D               	decfsz	??_main,f,c
  1566  00704A  D7F6               	goto	u755
  1567  00704C                     u757:
  1568  00704C  C04E  F0ED         	movff	??_main+1,main@place
  1569  007050  C04F  F0EE         	movff	??_main+2,main@place+1
  1570  007054  C050  F0EF         	movff	??_main+3,main@place+2
  1571  007058  C051  F0F0         	movff	??_main+4,main@place+3
  1572  00705C                     l1334:
  1573                           
  1574                           ; BSR set to: 0
  1575  00705C  0E65               	movlw	low _realNumbers
  1576  00705E  6E4D               	movwf	??_main& (0+255),c
  1577  007060  0E00               	movlw	high _realNumbers
  1578  007062  6E4E               	movwf	(??_main+1)& (0+255),c
  1579  007064  90D8               	bcf	status,0,c
  1580  007066  0100               	movlb	0	; () banked
  1581  007068  35F1               	rlcf	main@k& (0+255),w,b
  1582  00706A  6ED9               	movwf	fsr2l,c
  1583  00706C  0100               	movlb	0	; () banked
  1584  00706E  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1585  007070  6EDA               	movwf	fsr2h,c
  1586  007072  504D               	movf	??_main,w,c
  1587  007074  26D9               	addwf	fsr2l,f,c
  1588  007076  504E               	movf	??_main+1,w,c
  1589  007078  22DA               	addwfc	fsr2h,f,c
  1590  00707A  CFDE F04F          	movff	postinc2,??_main+2
  1591  00707E  CFDD F050          	movff	postdec2,??_main+3
  1592  007082  C04F  F051         	movff	??_main+2,??_main+4
  1593  007086  C050  F052         	movff	??_main+3,??_main+5
  1594  00708A  0E00               	movlw	0
  1595  00708C  BE52               	btfsc	(??_main+5)& (0+255),7,c
  1596  00708E  0EFF               	movlw	255
  1597  007090  6E53               	movwf	(??_main+6)& (0+255),c
  1598  007092  6E54               	movwf	(??_main+7)& (0+255),c
  1599  007094  5054               	movf	??_main+7,w,c
  1600  007096  0A80               	xorlw	128
  1601  007098  6E55               	movwf	(??_main+8)& (0+255),c
  1602  00709A  0100               	movlb	0	; () banked
  1603  00709C  51ED               	movf	main@place& (0+255),w,b
  1604  00709E  5C51               	subwf	??_main+4,w,c
  1605  0070A0  0100               	movlb	0	; () banked
  1606  0070A2  51EE               	movf	(main@place+1)& (0+255),w,b
  1607  0070A4  5852               	subwfb	??_main+5,w,c
  1608  0070A6  0100               	movlb	0	; () banked
  1609  0070A8  51EF               	movf	(main@place+2)& (0+255),w,b
  1610  0070AA  5853               	subwfb	??_main+6,w,c
  1611  0070AC  0100               	movlb	0	; () banked
  1612  0070AE  51F0               	movf	(main@place+3)& (0+255),w,b
  1613  0070B0  0A80               	xorlw	128
  1614  0070B2  5855               	subwfb	(??_main+8)& (0+255),w,c
  1615  0070B4  B0D8               	btfsc	status,0,c
  1616  0070B6  D0B0               	goto	l1346
  1617  0070B8  D7B1               	goto	l1332
  1618  0070BA                     l1336:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;main pic18.c: 115: if (realNumbers[k] >= root + place) {
  1622  0070BA  0100               	movlb	0	; () banked
  1623  0070BC  51ED               	movf	main@place& (0+255),w,b
  1624  0070BE  0100               	movlb	0	; () banked
  1625  0070C0  25E7               	addwf	main@root& (0+255),w,b
  1626  0070C2  6E4D               	movwf	??_main& (0+255),c
  1627  0070C4  0100               	movlb	0	; () banked
  1628  0070C6  51EE               	movf	(main@place+1)& (0+255),w,b
  1629  0070C8  0100               	movlb	0	; () banked
  1630  0070CA  21E8               	addwfc	(main@root+1)& (0+255),w,b
  1631  0070CC  6E4E               	movwf	(??_main+1)& (0+255),c
  1632  0070CE  0100               	movlb	0	; () banked
  1633  0070D0  51EF               	movf	(main@place+2)& (0+255),w,b
  1634  0070D2  0100               	movlb	0	; () banked
  1635  0070D4  21E9               	addwfc	(main@root+2)& (0+255),w,b
  1636  0070D6  6E4F               	movwf	(??_main+2)& (0+255),c
  1637  0070D8  0100               	movlb	0	; () banked
  1638  0070DA  51F0               	movf	(main@place+3)& (0+255),w,b
  1639  0070DC  0100               	movlb	0	; () banked
  1640  0070DE  21EA               	addwfc	(main@root+3)& (0+255),w,b
  1641  0070E0  6E50               	movwf	(??_main+3)& (0+255),c
  1642  0070E2  0E65               	movlw	low _realNumbers
  1643  0070E4  6E51               	movwf	(??_main+4)& (0+255),c
  1644  0070E6  0E00               	movlw	high _realNumbers
  1645  0070E8  6E52               	movwf	(??_main+5)& (0+255),c
  1646  0070EA  90D8               	bcf	status,0,c
  1647  0070EC  0100               	movlb	0	; () banked
  1648  0070EE  35F1               	rlcf	main@k& (0+255),w,b
  1649  0070F0  6ED9               	movwf	fsr2l,c
  1650  0070F2  0100               	movlb	0	; () banked
  1651  0070F4  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1652  0070F6  6EDA               	movwf	fsr2h,c
  1653  0070F8  5051               	movf	??_main+4,w,c
  1654  0070FA  26D9               	addwf	fsr2l,f,c
  1655  0070FC  5052               	movf	??_main+5,w,c
  1656  0070FE  22DA               	addwfc	fsr2h,f,c
  1657  007100  CFDE F053          	movff	postinc2,??_main+6
  1658  007104  CFDD F054          	movff	postdec2,??_main+7
  1659  007108  C053  F055         	movff	??_main+6,??_main+8
  1660  00710C  C054  F056         	movff	??_main+7,??_main+9
  1661  007110  0E00               	movlw	0
  1662  007112  BE56               	btfsc	(??_main+9)& (0+255),7,c
  1663  007114  0EFF               	movlw	255
  1664  007116  6E57               	movwf	(??_main+10)& (0+255),c
  1665  007118  6E58               	movwf	(??_main+11)& (0+255),c
  1666  00711A  5058               	movf	??_main+11,w,c
  1667  00711C  0A80               	xorlw	128
  1668  00711E  6E59               	movwf	(??_main+12)& (0+255),c
  1669  007120  504D               	movf	??_main,w,c
  1670  007122  5C55               	subwf	??_main+8,w,c
  1671  007124  504E               	movf	??_main+1,w,c
  1672  007126  5856               	subwfb	??_main+9,w,c
  1673  007128  504F               	movf	??_main+2,w,c
  1674  00712A  5857               	subwfb	??_main+10,w,c
  1675  00712C  5050               	movf	??_main+3,w,c
  1676  00712E  0A80               	xorlw	128
  1677  007130  5859               	subwfb	(??_main+12)& (0+255),w,c
  1678  007132  A0D8               	btfss	status,0,c
  1679  007134  D038               	goto	l1342
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;main pic18.c: 116: realNumbers[k] -= root + place;
  1683  007136  0100               	movlb	0	; () banked
  1684  007138  C0E7  F04D         	movff	main@root,??_main
  1685  00713C  0100               	movlb	0	; () banked
  1686  00713E  C0E8  F04E         	movff	main@root+1,??_main+1
  1687  007142  0100               	movlb	0	; () banked
  1688  007144  51ED               	movf	main@place& (0+255),w,b
  1689  007146  264D               	addwf	??_main,f,c
  1690  007148  0100               	movlb	0	; () banked
  1691  00714A  51EE               	movf	(main@place+1)& (0+255),w,b
  1692  00714C  224E               	addwfc	??_main+1,f,c
  1693  00714E  0E65               	movlw	low _realNumbers
  1694  007150  6E4F               	movwf	(??_main+2)& (0+255),c
  1695  007152  0E00               	movlw	high _realNumbers
  1696  007154  6E50               	movwf	(??_main+3)& (0+255),c
  1697  007156  90D8               	bcf	status,0,c
  1698  007158  0100               	movlb	0	; () banked
  1699  00715A  35F1               	rlcf	main@k& (0+255),w,b
  1700  00715C  6ED9               	movwf	fsr2l,c
  1701  00715E  0100               	movlb	0	; () banked
  1702  007160  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1703  007162  6EDA               	movwf	fsr2h,c
  1704  007164  504F               	movf	??_main+2,w,c
  1705  007166  26D9               	addwf	fsr2l,f,c
  1706  007168  5050               	movf	??_main+3,w,c
  1707  00716A  22DA               	addwfc	fsr2h,f,c
  1708  00716C  504D               	movf	??_main,w,c
  1709  00716E  5EDE               	subwf	postinc2,f,c
  1710  007170  504E               	movf	??_main+1,w,c
  1711  007172  5ADD               	subwfb	postdec2,f,c
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;main pic18.c: 117: root += place * 2;
  1715  007174  90D8               	bcf	status,0,c
  1716  007176  0100               	movlb	0	; () banked
  1717  007178  35ED               	rlcf	main@place& (0+255),w,b
  1718  00717A  6E4D               	movwf	??_main& (0+255),c
  1719  00717C  0100               	movlb	0	; () banked
  1720  00717E  35EE               	rlcf	(main@place+1)& (0+255),w,b
  1721  007180  6E4E               	movwf	(??_main+1)& (0+255),c
  1722  007182  0100               	movlb	0	; () banked
  1723  007184  35EF               	rlcf	(main@place+2)& (0+255),w,b
  1724  007186  6E4F               	movwf	(??_main+2)& (0+255),c
  1725  007188  0100               	movlb	0	; () banked
  1726  00718A  35F0               	rlcf	(main@place+3)& (0+255),w,b
  1727  00718C  6E50               	movwf	(??_main+3)& (0+255),c
  1728  00718E  504D               	movf	??_main,w,c
  1729  007190  0100               	movlb	0	; () banked
  1730  007192  27E7               	addwf	main@root& (0+255),f,b
  1731  007194  504E               	movf	??_main+1,w,c
  1732  007196  0100               	movlb	0	; () banked
  1733  007198  23E8               	addwfc	(main@root+1)& (0+255),f,b
  1734  00719A  504F               	movf	??_main+2,w,c
  1735  00719C  0100               	movlb	0	; () banked
  1736  00719E  23E9               	addwfc	(main@root+2)& (0+255),f,b
  1737  0071A0  5050               	movf	??_main+3,w,c
  1738  0071A2  0100               	movlb	0	; () banked
  1739  0071A4  23EA               	addwfc	(main@root+3)& (0+255),f,b
  1740  0071A6                     l1342:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;main pic18.c: 118: }
  1744                           ;main pic18.c: 120: root = root >> 1;
  1745  0071A6  0100               	movlb	0	; () banked
  1746  0071A8  C0E7  F04D         	movff	main@root,??_main
  1747  0071AC  0100               	movlb	0	; () banked
  1748  0071AE  C0E8  F04E         	movff	main@root+1,??_main+1
  1749  0071B2  0100               	movlb	0	; () banked
  1750  0071B4  C0E9  F04F         	movff	main@root+2,??_main+2
  1751  0071B8  0100               	movlb	0	; () banked
  1752  0071BA  C0EA  F050         	movff	main@root+3,??_main+3
  1753  0071BE  3450               	rlcf	??_main+3,w,c
  1754  0071C0  3250               	rrcf	??_main+3,f,c
  1755  0071C2  324F               	rrcf	??_main+2,f,c
  1756  0071C4  324E               	rrcf	??_main+1,f,c
  1757  0071C6  324D               	rrcf	??_main,f,c
  1758  0071C8  C04D  F0E7         	movff	??_main,main@root
  1759  0071CC  C04E  F0E8         	movff	??_main+1,main@root+1
  1760  0071D0  C04F  F0E9         	movff	??_main+2,main@root+2
  1761  0071D4  C050  F0EA         	movff	??_main+3,main@root+3
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;main pic18.c: 121: place = place >> 2;
  1765  0071D8  0E02               	movlw	2
  1766  0071DA  6E4D               	movwf	??_main& (0+255),c
  1767  0071DC  0100               	movlb	0	; () banked
  1768  0071DE  C0ED  F04E         	movff	main@place,??_main+1
  1769  0071E2  0100               	movlb	0	; () banked
  1770  0071E4  C0EE  F04F         	movff	main@place+1,??_main+2
  1771  0071E8  0100               	movlb	0	; () banked
  1772  0071EA  C0EF  F050         	movff	main@place+2,??_main+3
  1773  0071EE  0100               	movlb	0	; () banked
  1774  0071F0  C0F0  F051         	movff	main@place+3,??_main+4
  1775  0071F4                     u785:
  1776  0071F4  664D               	tstfsz	??_main,c
  1777  0071F6  D001               	goto	u786
  1778  0071F8  D007               	goto	u787
  1779  0071FA                     u786:
  1780  0071FA  3451               	rlcf	??_main+4,w,c
  1781  0071FC  3251               	rrcf	??_main+4,f,c
  1782  0071FE  3250               	rrcf	??_main+3,f,c
  1783  007200  324F               	rrcf	??_main+2,f,c
  1784  007202  324E               	rrcf	??_main+1,f,c
  1785  007204  2E4D               	decfsz	??_main,f,c
  1786  007206  D7F6               	goto	u785
  1787  007208                     u787:
  1788  007208  C04E  F0ED         	movff	??_main+1,main@place
  1789  00720C  C04F  F0EE         	movff	??_main+2,main@place+1
  1790  007210  C050  F0EF         	movff	??_main+3,main@place+2
  1791  007214  C051  F0F0         	movff	??_main+4,main@place+3
  1792  007218                     l1346:
  1793                           
  1794                           ; BSR set to: 0
  1795  007218  0100               	movlb	0	; () banked
  1796  00721A  51F0               	movf	(main@place+3)& (0+255),w,b
  1797  00721C  11ED               	iorwf	main@place& (0+255),w,b
  1798  00721E  11EE               	iorwf	(main@place+1)& (0+255),w,b
  1799  007220  11EF               	iorwf	(main@place+2)& (0+255),w,b
  1800  007222  A4D8               	btfss	status,2,c
  1801  007224  D74A               	goto	l1336
  1802  007226                     l1348:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;main pic18.c: 122: }
  1806                           ;main pic18.c: 123: }
  1807                           ;main pic18.c: 125: realNumbers[k] = root;
  1808  007226  0E65               	movlw	low _realNumbers
  1809  007228  6E4D               	movwf	??_main& (0+255),c
  1810  00722A  0E00               	movlw	high _realNumbers
  1811  00722C  6E4E               	movwf	(??_main+1)& (0+255),c
  1812  00722E  90D8               	bcf	status,0,c
  1813  007230  0100               	movlb	0	; () banked
  1814  007232  35F1               	rlcf	main@k& (0+255),w,b
  1815  007234  6ED9               	movwf	fsr2l,c
  1816  007236  0100               	movlb	0	; () banked
  1817  007238  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1818  00723A  6EDA               	movwf	fsr2h,c
  1819  00723C  504D               	movf	??_main,w,c
  1820  00723E  26D9               	addwf	fsr2l,f,c
  1821  007240  504E               	movf	??_main+1,w,c
  1822  007242  22DA               	addwfc	fsr2h,f,c
  1823  007244  0100               	movlb	0	; () banked
  1824  007246  C0E7  FFDE         	movff	main@root,postinc2
  1825  00724A  0100               	movlb	0	; () banked
  1826  00724C  C0E8  FFDD         	movff	main@root+1,postdec2
  1827                           
  1828                           ; BSR set to: 0
  1829  007250  0100               	movlb	0	; () banked
  1830  007252  4BF1               	infsnz	main@k& (0+255),f,b
  1831  007254  2BF2               	incf	(main@k+1)& (0+255),f,b
  1832  007256  D640               	goto	L2
  1833  007258                     l1354:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main pic18.c: 126: }
  1837                           ;main pic18.c: 128: sendIntArray(realNumbers, 64);
  1838  007258  0100               	movlb	0	; () banked
  1839  00725A  0E00               	movlw	high _realNumbers
  1840  00725C  6E03               	movwf	sendIntArray@array+1,c
  1841  00725E  0100               	movlb	0	; () banked
  1842  007260  0E65               	movlw	low _realNumbers
  1843  007262  6E02               	movwf	sendIntArray@array,c
  1844  007264  0E00               	movlw	0
  1845  007266  6E05               	movwf	sendIntArray@size+1,c
  1846  007268  0E40               	movlw	64
  1847  00726A  6E04               	movwf	sendIntArray@size,c
  1848  00726C  EC3B  F036         	call	_sendIntArray	;wreg free
  1849  007270  D5C1               	goto	l1292
  1850  007272                     __end_of_main:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           postinc0	equ	0xFEE
  1854                           wreg	equ	0xFE8
  1855                           postinc2	equ	0xFDE
  1856                           postdec2	equ	0xFDD
  1857                           fsr2h	equ	0xFDA
  1858                           fsr2l	equ	0xFD9
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _sendIntArray *****************
  1862 ;; Defined at:
  1863 ;;		line 189 in file "main pic18.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  array           2    1[COMRAM] PTR short 
  1866 ;;		 -> realNumbers(128), 
  1867 ;;  size            2    3[COMRAM] unsigned int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;		None               void
  1872 ;; Registers used:
  1873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1879 ;;      Params:         4       0       0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0
  1882 ;;      Totals:         4       0       0       0       0       0       0
  1883 ;;Total ram usage:        4 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    2
  1886 ;; This function calls:
  1887 ;;		_sendChar
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text1
  1894  006C76                     __ptext1:
  1895                           	opt stack 0
  1896  006C76                     _sendIntArray:
  1897                           	opt stack 28
  1898                           
  1899                           ;main pic18.c: 190: for(i = 0; i < size; i++) {
  1900                           
  1901                           ;incstack = 0
  1902  006C76  0E00               	movlw	0
  1903  006C78  6E5B               	movwf	_i+1,c
  1904  006C7A  0E00               	movlw	0
  1905  006C7C  6E5A               	movwf	_i,c
  1906  006C7E  D00E               	goto	l1264
  1907  006C80                     l1260:
  1908                           
  1909                           ;main pic18.c: 191: sendChar(array[i]);
  1910  006C80  90D8               	bcf	status,0,c
  1911  006C82  345A               	rlcf	_i,w,c
  1912  006C84  6ED9               	movwf	fsr2l,c
  1913  006C86  345B               	rlcf	_i+1,w,c
  1914  006C88  6EDA               	movwf	fsr2h,c
  1915  006C8A  5002               	movf	sendIntArray@array,w,c
  1916  006C8C  26D9               	addwf	fsr2l,f,c
  1917  006C8E  5003               	movf	sendIntArray@array+1,w,c
  1918  006C90  22DA               	addwfc	fsr2h,f,c
  1919  006C92  50DF               	movf	indf2,w,c
  1920  006C94  EC09  F036         	call	_sendChar
  1921  006C98  4A5A               	infsnz	_i,f,c
  1922  006C9A  2A5B               	incf	_i+1,f,c
  1923  006C9C                     l1264:
  1924  006C9C  5004               	movf	sendIntArray@size,w,c
  1925  006C9E  5C5A               	subwf	_i,w,c
  1926  006CA0  5005               	movf	sendIntArray@size+1,w,c
  1927  006CA2  585B               	subwfb	_i+1,w,c
  1928  006CA4  B0D8               	btfsc	status,0,c
  1929  006CA6  0012               	return	
  1930  006CA8  D7EB               	goto	l1260
  1931  006CAA                     __end_of_sendIntArray:
  1932                           	opt stack 0
  1933                           tblptru	equ	0xFF8
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           indf2	equ	0xFDF
  1937                           postinc2	equ	0xFDE
  1938                           postdec2	equ	0xFDD
  1939                           fsr2h	equ	0xFDA
  1940                           fsr2l	equ	0xFD9
  1941                           status	equ	0xFD8
  1942                           
  1943 ;; *************** function _sendChar *****************
  1944 ;; Defined at:
  1945 ;;		line 183 in file "main pic18.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  character       1    wreg     unsigned char 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  character       1    0[COMRAM] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;		None               void
  1952 ;; Registers used:
  1953 ;;		wreg, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1959 ;;      Params:         0       0       0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    1
  1966 ;; This function calls:
  1967 ;;		_Write1USART
  1968 ;; This function is called by:
  1969 ;;		_sendIntArray
  1970 ;;		_sendCharArray
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text2
  1975  006C12                     __ptext2:
  1976                           	opt stack 0
  1977  006C12                     _sendChar:
  1978                           	opt stack 28
  1979  006C12                     l86:
  1980  006C12  A2AC               	btfss	4012,1,c	;volatile
  1981  006C14  D7FE               	goto	l86
  1982                           
  1983                           ;main pic18.c: 185: Write1USART(0x55);
  1984  006C16  0E55               	movlw	85
  1985  006C18  EC00  F036         	call	_Write1USART
  1986                           
  1987                           ;main pic18.c: 186: _delay(10);
  1988  006C1C  0E03               	movlw	3
  1989  006C1E                     u827:
  1990  006C1E  2EE8               	decfsz	wreg,f,c
  1991  006C20  D7FE               	goto	u827
  1992  006C22  F000               	nop	
  1993  006C24  0012               	return	
  1994  006C26                     __end_of_sendChar:
  1995                           	opt stack 0
  1996                           tblptru	equ	0xFF8
  1997                           postinc0	equ	0xFEE
  1998                           wreg	equ	0xFE8
  1999                           indf2	equ	0xFDF
  2000                           postinc2	equ	0xFDE
  2001                           postdec2	equ	0xFDD
  2002                           fsr2h	equ	0xFDA
  2003                           fsr2l	equ	0xFD9
  2004                           status	equ	0xFD8
  2005                           
  2006 ;; *************** function _Write1USART *****************
  2007 ;; Defined at:
  2008 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1write.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  data            1    wreg     unsigned char 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  data            1    0[COMRAM] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;		None               void
  2015 ;; Registers used:
  2016 ;;		wreg
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2022 ;;      Params:         0       0       0       0       0       0       0
  2023 ;;      Locals:         1       0       0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0
  2025 ;;      Totals:         1       0       0       0       0       0       0
  2026 ;;Total ram usage:        1 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_sendChar
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text3
  2036  006C00                     __ptext3:
  2037                           	opt stack 0
  2038  006C00                     _Write1USART:
  2039                           	opt stack 28
  2040                           
  2041                           ;incstack = 0
  2042                           ;Write1USART@data stored from wreg
  2043  006C00  6E01               	movwf	Write1USART@data,c
  2044  006C02  ACAC               	btfss	4012,6,c	;volatile
  2045  006C04  D003               	goto	l1084
  2046  006C06  90AC               	bcf	4012,0,c	;volatile
  2047  006C08  B25C               	btfsc	_USART1_Status,1,c
  2048  006C0A  80AC               	bsf	4012,0,c	;volatile
  2049  006C0C                     l1084:
  2050  006C0C  C001  FFAD         	movff	Write1USART@data,4013	;volatile
  2051  006C10  0012               	return	
  2052  006C12                     __end_of_Write1USART:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           postinc0	equ	0xFEE
  2056                           wreg	equ	0xFE8
  2057                           indf2	equ	0xFDF
  2058                           postinc2	equ	0xFDE
  2059                           postdec2	equ	0xFDD
  2060                           fsr2h	equ	0xFDA
  2061                           fsr2l	equ	0xFD9
  2062                           status	equ	0xFD8
  2063                           
  2064 ;; *************** function _fix_fft *****************
  2065 ;; Defined at:
  2066 ;;		line 155 in file "fft.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  fr              2   12[COMRAM] PTR short 
  2069 ;;		 -> realNumbers(128), 
  2070 ;;  fi              2   14[COMRAM] PTR short 
  2071 ;;		 -> imaginaryNumbers(128), 
  2072 ;;  m               2   16[COMRAM] short 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  c               4   72[COMRAM] long 
  2075 ;;  b               2   54[COMRAM] short 
  2076 ;;  j               4   68[COMRAM] long 
  2077 ;;  l               4   64[COMRAM] long 
  2078 ;;  mr              4   60[COMRAM] long 
  2079 ;;  i               4   56[COMRAM] long 
  2080 ;;  n               4   46[COMRAM] long 
  2081 ;;  istep           4   34[COMRAM] long 
  2082 ;;  nn              4   30[COMRAM] long 
  2083 ;;  k               4   26[COMRAM] long 
  2084 ;;  ti              2   52[COMRAM] short 
  2085 ;;  tr              2   50[COMRAM] short 
  2086 ;;  wi              2   44[COMRAM] short 
  2087 ;;  wr              2   42[COMRAM] short 
  2088 ;;  qi              2   40[COMRAM] short 
  2089 ;;  qr              2   38[COMRAM] short 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;		None               void
  2092 ;; Registers used:
  2093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2099 ;;      Params:         6       0       0       0       0       0       0
  2100 ;;      Locals:        50       0       0       0       0       0       0
  2101 ;;      Temps:          8       0       0       0       0       0       0
  2102 ;;      Totals:        64       0       0       0       0       0       0
  2103 ;;Total ram usage:       64 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    1
  2106 ;; This function calls:
  2107 ;;		___lmul
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text4
  2114  007272                     __ptext4:
  2115                           	opt stack 0
  2116  007272                     _fix_fft:
  2117                           	opt stack 29
  2118                           
  2119                           ;fft.c: 157: long int mr = 0, nn, i, j, l, k, istep, n;
  2120                           
  2121                           ;incstack = 0
  2122  007272  0E00               	movlw	0
  2123  007274  6E3D               	movwf	fix_fft@mr,c
  2124  007276  0E00               	movlw	0
  2125  007278  6E3E               	movwf	fix_fft@mr+1,c
  2126  00727A  0E00               	movlw	0
  2127  00727C  6E3F               	movwf	fix_fft@mr+2,c
  2128  00727E  0E00               	movlw	0
  2129  007280  6E40               	movwf	fix_fft@mr+3,c
  2130                           
  2131                           ;fft.c: 158: short qr, qi, tr, ti, wr, wi;
  2132                           ;fft.c: 160: n = 1 << m;
  2133  007282  C011  F013         	movff	fix_fft@m,??_fix_fft
  2134  007286  0E01               	movlw	1
  2135  007288  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2136  00728A  6A15               	clrf	(??_fix_fft+2)& (0+255),c
  2137  00728C  2A13               	incf	??_fix_fft,f,c
  2138  00728E  D003               	goto	u574
  2139  007290                     u575:
  2140  007290  90D8               	bcf	status,0,c
  2141  007292  3614               	rlcf	??_fix_fft+1,f,c
  2142  007294  3615               	rlcf	??_fix_fft+2,f,c
  2143  007296                     u574:
  2144  007296  2E13               	decfsz	??_fix_fft,f,c
  2145  007298  D7FB               	goto	u575
  2146  00729A  C014  F02F         	movff	??_fix_fft+1,fix_fft@n
  2147  00729E  C015  F030         	movff	??_fix_fft+2,fix_fft@n+1
  2148  0072A2  0E00               	movlw	0
  2149  0072A4  BE30               	btfsc	fix_fft@n+1,7,c
  2150  0072A6  0EFF               	movlw	-1
  2151  0072A8  6E31               	movwf	fix_fft@n+2,c
  2152  0072AA  6E32               	movwf	fix_fft@n+3,c
  2153                           
  2154                           ;fft.c: 161: nn = n - 1;
  2155  0072AC  0EFF               	movlw	255
  2156  0072AE  242F               	addwf	fix_fft@n,w,c
  2157  0072B0  6E1F               	movwf	fix_fft@nn,c
  2158  0072B2  0EFF               	movlw	255
  2159  0072B4  2030               	addwfc	fix_fft@n+1,w,c
  2160  0072B6  6E20               	movwf	fix_fft@nn+1,c
  2161  0072B8  0EFF               	movlw	255
  2162  0072BA  2031               	addwfc	fix_fft@n+2,w,c
  2163  0072BC  6E21               	movwf	fix_fft@nn+2,c
  2164  0072BE  0EFF               	movlw	255
  2165  0072C0  2032               	addwfc	fix_fft@n+3,w,c
  2166  0072C2  6E22               	movwf	fix_fft@nn+3,c
  2167                           
  2168                           ;fft.c: 167: for (m=1; m<=nn; ++m)
  2169  0072C4  0E00               	movlw	0
  2170  0072C6  6E12               	movwf	fix_fft@m+1,c
  2171  0072C8  0E01               	movlw	1
  2172  0072CA  6E11               	movwf	fix_fft@m,c
  2173  0072CC  D0C4               	goto	l1188
  2174  0072CE                     l101:
  2175                           
  2176                           ;fft.c: 168: {
  2177                           ;fft.c: 169: l = n;
  2178  0072CE  C02F  F041         	movff	fix_fft@n,fix_fft@l
  2179  0072D2  C030  F042         	movff	fix_fft@n+1,fix_fft@l+1
  2180  0072D6  C031  F043         	movff	fix_fft@n+2,fix_fft@l+2
  2181  0072DA  C032  F044         	movff	fix_fft@n+3,fix_fft@l+3
  2182  0072DE                     l1170:
  2183                           
  2184                           ;fft.c: 171: {
  2185                           ;fft.c: 172: l >>= 1;
  2186  0072DE  3444               	rlcf	fix_fft@l+3,w,c
  2187  0072E0  3244               	rrcf	fix_fft@l+3,f,c
  2188  0072E2  3243               	rrcf	fix_fft@l+2,f,c
  2189  0072E4  3242               	rrcf	fix_fft@l+1,f,c
  2190  0072E6  3241               	rrcf	fix_fft@l,f,c
  2191                           
  2192                           ;fft.c: 173: } while (mr+l > nn);
  2193  0072E8  5041               	movf	fix_fft@l,w,c
  2194  0072EA  243D               	addwf	fix_fft@mr,w,c
  2195  0072EC  6E13               	movwf	??_fix_fft& (0+255),c
  2196  0072EE  5042               	movf	fix_fft@l+1,w,c
  2197  0072F0  203E               	addwfc	fix_fft@mr+1,w,c
  2198  0072F2  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2199  0072F4  5043               	movf	fix_fft@l+2,w,c
  2200  0072F6  203F               	addwfc	fix_fft@mr+2,w,c
  2201  0072F8  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2202  0072FA  5044               	movf	fix_fft@l+3,w,c
  2203  0072FC  2040               	addwfc	fix_fft@mr+3,w,c
  2204  0072FE  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2205  007300  5022               	movf	fix_fft@nn+3,w,c
  2206  007302  0A80               	xorlw	128
  2207  007304  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2208  007306  5013               	movf	??_fix_fft,w,c
  2209  007308  5C1F               	subwf	fix_fft@nn,w,c
  2210  00730A  5014               	movf	??_fix_fft+1,w,c
  2211  00730C  5820               	subwfb	fix_fft@nn+1,w,c
  2212  00730E  5015               	movf	??_fix_fft+2,w,c
  2213  007310  5821               	subwfb	fix_fft@nn+2,w,c
  2214  007312  5016               	movf	??_fix_fft+3,w,c
  2215  007314  0A80               	xorlw	128
  2216  007316  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2217  007318  A0D8               	btfss	status,0,c
  2218  00731A  D7E1               	goto	l1170
  2219                           
  2220                           ;fft.c: 175: mr = (mr & (l-1)) + l;
  2221  00731C  0EFF               	movlw	255
  2222  00731E  2441               	addwf	fix_fft@l,w,c
  2223  007320  6E13               	movwf	??_fix_fft& (0+255),c
  2224  007322  0EFF               	movlw	255
  2225  007324  2042               	addwfc	fix_fft@l+1,w,c
  2226  007326  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2227  007328  0EFF               	movlw	255
  2228  00732A  2043               	addwfc	fix_fft@l+2,w,c
  2229  00732C  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2230  00732E  0EFF               	movlw	255
  2231  007330  2044               	addwfc	fix_fft@l+3,w,c
  2232  007332  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2233  007334  503D               	movf	fix_fft@mr,w,c
  2234  007336  1413               	andwf	??_fix_fft,w,c
  2235  007338  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2236  00733A  503E               	movf	fix_fft@mr+1,w,c
  2237  00733C  1414               	andwf	??_fix_fft+1,w,c
  2238  00733E  6E18               	movwf	(??_fix_fft+5)& (0+255),c
  2239  007340  503F               	movf	fix_fft@mr+2,w,c
  2240  007342  1415               	andwf	??_fix_fft+2,w,c
  2241  007344  6E19               	movwf	(??_fix_fft+6)& (0+255),c
  2242  007346  5040               	movf	fix_fft@mr+3,w,c
  2243  007348  1416               	andwf	??_fix_fft+3,w,c
  2244  00734A  6E1A               	movwf	(??_fix_fft+7)& (0+255),c
  2245  00734C  5041               	movf	fix_fft@l,w,c
  2246  00734E  2417               	addwf	??_fix_fft+4,w,c
  2247  007350  6E3D               	movwf	fix_fft@mr,c
  2248  007352  5042               	movf	fix_fft@l+1,w,c
  2249  007354  2018               	addwfc	??_fix_fft+5,w,c
  2250  007356  6E3E               	movwf	fix_fft@mr+1,c
  2251  007358  5043               	movf	fix_fft@l+2,w,c
  2252  00735A  2019               	addwfc	??_fix_fft+6,w,c
  2253  00735C  6E3F               	movwf	fix_fft@mr+2,c
  2254  00735E  5044               	movf	fix_fft@l+3,w,c
  2255  007360  201A               	addwfc	??_fix_fft+7,w,c
  2256  007362  6E40               	movwf	fix_fft@mr+3,c
  2257                           
  2258                           ;fft.c: 176: if (mr <= m) continue;
  2259  007364  C011  F013         	movff	fix_fft@m,??_fix_fft
  2260  007368  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2261  00736C  0E00               	movlw	0
  2262  00736E  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2263  007370  0EFF               	movlw	255
  2264  007372  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2265  007374  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2266  007376  5016               	movf	??_fix_fft+3,w,c
  2267  007378  0A80               	xorlw	128
  2268  00737A  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2269  00737C  503D               	movf	fix_fft@mr,w,c
  2270  00737E  5C13               	subwf	??_fix_fft,w,c
  2271  007380  503E               	movf	fix_fft@mr+1,w,c
  2272  007382  5814               	subwfb	??_fix_fft+1,w,c
  2273  007384  503F               	movf	fix_fft@mr+2,w,c
  2274  007386  5815               	subwfb	??_fix_fft+2,w,c
  2275  007388  5040               	movf	fix_fft@mr+3,w,c
  2276  00738A  0A80               	xorlw	128
  2277  00738C  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2278  00738E  B0D8               	btfsc	status,0,c
  2279  007390  D060               	goto	l1186
  2280                           
  2281                           ;fft.c: 178: tr = fr[m];
  2282  007392  90D8               	bcf	status,0,c
  2283  007394  3411               	rlcf	fix_fft@m,w,c
  2284  007396  6ED9               	movwf	fsr2l,c
  2285  007398  3412               	rlcf	fix_fft@m+1,w,c
  2286  00739A  6EDA               	movwf	fsr2h,c
  2287  00739C  500D               	movf	fix_fft@fr,w,c
  2288  00739E  26D9               	addwf	fsr2l,f,c
  2289  0073A0  500E               	movf	fix_fft@fr+1,w,c
  2290  0073A2  22DA               	addwfc	fsr2h,f,c
  2291  0073A4  CFDE F033          	movff	postinc2,fix_fft@tr
  2292  0073A8  CFDD F034          	movff	postdec2,fix_fft@tr+1
  2293                           
  2294                           ;fft.c: 179: fr[m] = fr[mr];
  2295  0073AC  90D8               	bcf	status,0,c
  2296  0073AE  343D               	rlcf	fix_fft@mr,w,c
  2297  0073B0  6ED9               	movwf	fsr2l,c
  2298  0073B2  343E               	rlcf	fix_fft@mr+1,w,c
  2299  0073B4  6EDA               	movwf	fsr2h,c
  2300  0073B6  500D               	movf	fix_fft@fr,w,c
  2301  0073B8  26D9               	addwf	fsr2l,f,c
  2302  0073BA  500E               	movf	fix_fft@fr+1,w,c
  2303  0073BC  22DA               	addwfc	fsr2h,f,c
  2304  0073BE  90D8               	bcf	status,0,c
  2305  0073C0  3411               	rlcf	fix_fft@m,w,c
  2306  0073C2  6EE1               	movwf	fsr1l,c
  2307  0073C4  3412               	rlcf	fix_fft@m+1,w,c
  2308  0073C6  6EE2               	movwf	fsr1h,c
  2309  0073C8  500D               	movf	fix_fft@fr,w,c
  2310  0073CA  26E1               	addwf	fsr1l,f,c
  2311  0073CC  500E               	movf	fix_fft@fr+1,w,c
  2312  0073CE  22E2               	addwfc	fsr1h,f,c
  2313  0073D0  CFDE FFE6          	movff	postinc2,postinc1
  2314  0073D4  CFDD FFE5          	movff	postdec2,postdec1
  2315                           
  2316                           ;fft.c: 180: fr[mr] = tr;
  2317  0073D8  90D8               	bcf	status,0,c
  2318  0073DA  343D               	rlcf	fix_fft@mr,w,c
  2319  0073DC  6ED9               	movwf	fsr2l,c
  2320  0073DE  343E               	rlcf	fix_fft@mr+1,w,c
  2321  0073E0  6EDA               	movwf	fsr2h,c
  2322  0073E2  500D               	movf	fix_fft@fr,w,c
  2323  0073E4  26D9               	addwf	fsr2l,f,c
  2324  0073E6  500E               	movf	fix_fft@fr+1,w,c
  2325  0073E8  22DA               	addwfc	fsr2h,f,c
  2326  0073EA  C033  FFDE         	movff	fix_fft@tr,postinc2
  2327  0073EE  C034  FFDD         	movff	fix_fft@tr+1,postdec2
  2328                           
  2329                           ;fft.c: 181: ti = fi[m];
  2330  0073F2  90D8               	bcf	status,0,c
  2331  0073F4  3411               	rlcf	fix_fft@m,w,c
  2332  0073F6  6ED9               	movwf	fsr2l,c
  2333  0073F8  3412               	rlcf	fix_fft@m+1,w,c
  2334  0073FA  6EDA               	movwf	fsr2h,c
  2335  0073FC  500F               	movf	fix_fft@fi,w,c
  2336  0073FE  26D9               	addwf	fsr2l,f,c
  2337  007400  5010               	movf	fix_fft@fi+1,w,c
  2338  007402  22DA               	addwfc	fsr2h,f,c
  2339  007404  CFDE F035          	movff	postinc2,fix_fft@ti
  2340  007408  CFDD F036          	movff	postdec2,fix_fft@ti+1
  2341                           
  2342                           ;fft.c: 182: fi[m] = fi[mr];
  2343  00740C  90D8               	bcf	status,0,c
  2344  00740E  343D               	rlcf	fix_fft@mr,w,c
  2345  007410  6ED9               	movwf	fsr2l,c
  2346  007412  343E               	rlcf	fix_fft@mr+1,w,c
  2347  007414  6EDA               	movwf	fsr2h,c
  2348  007416  500F               	movf	fix_fft@fi,w,c
  2349  007418  26D9               	addwf	fsr2l,f,c
  2350  00741A  5010               	movf	fix_fft@fi+1,w,c
  2351  00741C  22DA               	addwfc	fsr2h,f,c
  2352  00741E  90D8               	bcf	status,0,c
  2353  007420  3411               	rlcf	fix_fft@m,w,c
  2354  007422  6EE1               	movwf	fsr1l,c
  2355  007424  3412               	rlcf	fix_fft@m+1,w,c
  2356  007426  6EE2               	movwf	fsr1h,c
  2357  007428  500F               	movf	fix_fft@fi,w,c
  2358  00742A  26E1               	addwf	fsr1l,f,c
  2359  00742C  5010               	movf	fix_fft@fi+1,w,c
  2360  00742E  22E2               	addwfc	fsr1h,f,c
  2361  007430  CFDE FFE6          	movff	postinc2,postinc1
  2362  007434  CFDD FFE5          	movff	postdec2,postdec1
  2363                           
  2364                           ;fft.c: 183: fi[mr] = ti;
  2365  007438  90D8               	bcf	status,0,c
  2366  00743A  343D               	rlcf	fix_fft@mr,w,c
  2367  00743C  6ED9               	movwf	fsr2l,c
  2368  00743E  343E               	rlcf	fix_fft@mr+1,w,c
  2369  007440  6EDA               	movwf	fsr2h,c
  2370  007442  500F               	movf	fix_fft@fi,w,c
  2371  007444  26D9               	addwf	fsr2l,f,c
  2372  007446  5010               	movf	fix_fft@fi+1,w,c
  2373  007448  22DA               	addwfc	fsr2h,f,c
  2374  00744A  C035  FFDE         	movff	fix_fft@ti,postinc2
  2375  00744E  C036  FFDD         	movff	fix_fft@ti+1,postdec2
  2376  007452                     l1186:
  2377  007452  4A11               	infsnz	fix_fft@m,f,c
  2378  007454  2A12               	incf	fix_fft@m+1,f,c
  2379  007456                     l1188:
  2380  007456  C011  F013         	movff	fix_fft@m,??_fix_fft
  2381  00745A  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2382  00745E  0E00               	movlw	0
  2383  007460  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2384  007462  0EFF               	movlw	255
  2385  007464  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2386  007466  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2387  007468  5022               	movf	fix_fft@nn+3,w,c
  2388  00746A  0A80               	xorlw	128
  2389  00746C  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2390  00746E  5013               	movf	??_fix_fft,w,c
  2391  007470  5C1F               	subwf	fix_fft@nn,w,c
  2392  007472  5014               	movf	??_fix_fft+1,w,c
  2393  007474  5820               	subwfb	fix_fft@nn+1,w,c
  2394  007476  5015               	movf	??_fix_fft+2,w,c
  2395  007478  5821               	subwfb	fix_fft@nn+2,w,c
  2396  00747A  5016               	movf	??_fix_fft+3,w,c
  2397  00747C  0A80               	xorlw	128
  2398  00747E  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2399  007480  B0D8               	btfsc	status,0,c
  2400  007482  D725               	goto	l101
  2401                           
  2402                           ;fft.c: 184: }
  2403                           ;fft.c: 186: l = 1;
  2404  007484  0E01               	movlw	1
  2405  007486  6E41               	movwf	fix_fft@l,c
  2406  007488  0E00               	movlw	0
  2407  00748A  6E42               	movwf	fix_fft@l+1,c
  2408  00748C  0E00               	movlw	0
  2409  00748E  6E43               	movwf	fix_fft@l+2,c
  2410  007490  0E00               	movlw	0
  2411  007492  6E44               	movwf	fix_fft@l+3,c
  2412                           
  2413                           ;fft.c: 187: k = 10-1;
  2414  007494  0E09               	movlw	9
  2415  007496  6E1B               	movwf	fix_fft@k,c
  2416  007498  0E00               	movlw	0
  2417  00749A  6E1C               	movwf	fix_fft@k+1,c
  2418  00749C  0E00               	movlw	0
  2419  00749E  6E1D               	movwf	fix_fft@k+2,c
  2420  0074A0  0E00               	movlw	0
  2421  0074A2  6E1E               	movwf	fix_fft@k+3,c
  2422                           
  2423                           ;fft.c: 189: while (l < n)
  2424  0074A4  D29D               	goto	l107
  2425  0074A6                     l1192:
  2426                           
  2427                           ;fft.c: 190: {
  2428                           ;fft.c: 203: long int c;
  2429                           ;fft.c: 204: short b;
  2430                           ;fft.c: 206: istep = l << 1;
  2431  0074A6  90D8               	bcf	status,0,c
  2432  0074A8  3441               	rlcf	fix_fft@l,w,c
  2433  0074AA  6E23               	movwf	fix_fft@istep,c
  2434  0074AC  3442               	rlcf	fix_fft@l+1,w,c
  2435  0074AE  6E24               	movwf	fix_fft@istep+1,c
  2436  0074B0  3443               	rlcf	fix_fft@l+2,w,c
  2437  0074B2  6E25               	movwf	fix_fft@istep+2,c
  2438  0074B4  3444               	rlcf	fix_fft@l+3,w,c
  2439  0074B6  6E26               	movwf	fix_fft@istep+3,c
  2440                           
  2441                           ;fft.c: 207: for (m=0; m<l; ++m)
  2442  0074B8  0E00               	movlw	0
  2443  0074BA  6E12               	movwf	fix_fft@m+1,c
  2444  0074BC  0E00               	movlw	0
  2445  0074BE  6E11               	movwf	fix_fft@m,c
  2446  0074C0  D268               	goto	l1252
  2447  0074C2                     l1196:
  2448                           
  2449                           ;fft.c: 208: {
  2450                           ;fft.c: 209: j = m << k;
  2451  0074C2  C01B  F013         	movff	fix_fft@k,??_fix_fft
  2452  0074C6  C011  F014         	movff	fix_fft@m,??_fix_fft+1
  2453  0074CA  C012  F015         	movff	fix_fft@m+1,??_fix_fft+2
  2454  0074CE  2A13               	incf	??_fix_fft,f,c
  2455  0074D0  D003               	goto	u614
  2456  0074D2                     u615:
  2457  0074D2  90D8               	bcf	status,0,c
  2458  0074D4  3614               	rlcf	??_fix_fft+1,f,c
  2459  0074D6  3615               	rlcf	??_fix_fft+2,f,c
  2460  0074D8                     u614:
  2461  0074D8  2E13               	decfsz	??_fix_fft,f,c
  2462  0074DA  D7FB               	goto	u615
  2463  0074DC  C014  F045         	movff	??_fix_fft+1,fix_fft@j
  2464  0074E0  C015  F046         	movff	??_fix_fft+2,fix_fft@j+1
  2465  0074E4  0E00               	movlw	0
  2466  0074E6  BE46               	btfsc	fix_fft@j+1,7,c
  2467  0074E8  0EFF               	movlw	-1
  2468  0074EA  6E47               	movwf	fix_fft@j+2,c
  2469  0074EC  6E48               	movwf	fix_fft@j+3,c
  2470                           
  2471                           ;fft.c: 211: wr = Sinewave[j+1024/4];
  2472  0074EE  0E00               	movlw	0
  2473  0074F0  6E13               	movwf	??_fix_fft& (0+255),c
  2474  0074F2  0E02               	movlw	2
  2475  0074F4  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2476  0074F6  C045  F015         	movff	fix_fft@j,??_fix_fft+2
  2477  0074FA  C046  F016         	movff	fix_fft@j+1,??_fix_fft+3
  2478  0074FE  90D8               	bcf	status,0,c
  2479  007500  3615               	rlcf	??_fix_fft+2,f,c
  2480  007502  3616               	rlcf	??_fix_fft+3,f,c
  2481  007504  5013               	movf	??_fix_fft,w,c
  2482  007506  2615               	addwf	??_fix_fft+2,f,c
  2483  007508  5014               	movf	??_fix_fft+1,w,c
  2484  00750A  2216               	addwfc	??_fix_fft+3,f,c
  2485  00750C  0EFF               	movlw	low _Sinewave
  2486  00750E  2415               	addwf	??_fix_fft+2,w,c
  2487  007510  6EF6               	movwf	tblptrl,c
  2488  007512  0E79               	movlw	high _Sinewave
  2489  007514  2016               	addwfc	??_fix_fft+3,w,c
  2490  007516  6EF7               	movwf	tblptrh,c
  2491  007518                     	if	0	;There are less than 3 active tblptr bytes
  2492  007518                     	endif
  2493  007518  0009               	tblrd		*+
  2494  00751A  CFF5 F02B          	movff	tablat,fix_fft@wr
  2495  00751E  000A               	tblrd		*-
  2496  007520  CFF5 F02C          	movff	tablat,fix_fft@wr+1
  2497                           
  2498                           ;fft.c: 212: wi = -Sinewave[j];
  2499  007524  C045  F013         	movff	fix_fft@j,??_fix_fft
  2500  007528  C046  F014         	movff	fix_fft@j+1,??_fix_fft+1
  2501  00752C  90D8               	bcf	status,0,c
  2502  00752E  3613               	rlcf	??_fix_fft,f,c
  2503  007530  3614               	rlcf	??_fix_fft+1,f,c
  2504  007532  0EFF               	movlw	low _Sinewave
  2505  007534  2413               	addwf	??_fix_fft,w,c
  2506  007536  6EF6               	movwf	tblptrl,c
  2507  007538  0E79               	movlw	high _Sinewave
  2508  00753A  2014               	addwfc	??_fix_fft+1,w,c
  2509  00753C  6EF7               	movwf	tblptrh,c
  2510  00753E                     	if	0	;There are less than 3 active tblptr bytes
  2511  00753E                     	endif
  2512  00753E  0009               	tblrd		*+
  2513  007540  CFF5 F015          	movff	tablat,??_fix_fft+2
  2514  007544  0009               	tblrd		*+
  2515  007546  CFF5 F016          	movff	tablat,??_fix_fft+3
  2516  00754A  1E15               	comf	??_fix_fft+2,f,c
  2517  00754C  1E16               	comf	??_fix_fft+3,f,c
  2518  00754E  4A15               	infsnz	??_fix_fft+2,f,c
  2519  007550  2A16               	incf	??_fix_fft+3,f,c
  2520  007552  C015  F02D         	movff	??_fix_fft+2,fix_fft@wi
  2521  007556  C016  F02E         	movff	??_fix_fft+3,fix_fft@wi+1
  2522                           
  2523                           ;fft.c: 214: wr >>= 1;
  2524  00755A  342C               	rlcf	fix_fft@wr+1,w,c
  2525  00755C  322C               	rrcf	fix_fft@wr+1,f,c
  2526  00755E  322B               	rrcf	fix_fft@wr,f,c
  2527                           
  2528                           ;fft.c: 215: wi >>= 1;
  2529  007560  342E               	rlcf	fix_fft@wi+1,w,c
  2530  007562  322E               	rrcf	fix_fft@wi+1,f,c
  2531  007564  322D               	rrcf	fix_fft@wi,f,c
  2532                           
  2533                           ;fft.c: 217: for (i=m; i<n; i+=istep)
  2534  007566  C011  F039         	movff	fix_fft@m,fix_fft@i
  2535  00756A  C012  F03A         	movff	fix_fft@m+1,fix_fft@i+1
  2536  00756E  0E00               	movlw	0
  2537  007570  BE3A               	btfsc	fix_fft@i+1,7,c
  2538  007572  0EFF               	movlw	-1
  2539  007574  6E3B               	movwf	fix_fft@i+2,c
  2540  007576  6E3C               	movwf	fix_fft@i+3,c
  2541  007578  D1FC               	goto	l1248
  2542  00757A                     l1204:
  2543                           
  2544                           ;fft.c: 218: {
  2545                           ;fft.c: 219: j = i + l;
  2546  00757A  5041               	movf	fix_fft@l,w,c
  2547  00757C  2439               	addwf	fix_fft@i,w,c
  2548  00757E  6E45               	movwf	fix_fft@j,c
  2549  007580  5042               	movf	fix_fft@l+1,w,c
  2550  007582  203A               	addwfc	fix_fft@i+1,w,c
  2551  007584  6E46               	movwf	fix_fft@j+1,c
  2552  007586  5043               	movf	fix_fft@l+2,w,c
  2553  007588  203B               	addwfc	fix_fft@i+2,w,c
  2554  00758A  6E47               	movwf	fix_fft@j+2,c
  2555  00758C  5044               	movf	fix_fft@l+3,w,c
  2556  00758E  203C               	addwfc	fix_fft@i+3,w,c
  2557  007590  6E48               	movwf	fix_fft@j+3,c
  2558                           
  2559                           ;fft.c: 227: c = ((long int)wr * (long int)fr[j]);
  2560  007592  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2561  007596  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2562  00759A  0E00               	movlw	0
  2563  00759C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2564  00759E  0EFF               	movlw	-1
  2565  0075A0  6E03               	movwf	___lmul@multiplier+2,c
  2566  0075A2  6E04               	movwf	___lmul@multiplier+3,c
  2567  0075A4  90D8               	bcf	status,0,c
  2568  0075A6  3445               	rlcf	fix_fft@j,w,c
  2569  0075A8  6ED9               	movwf	fsr2l,c
  2570  0075AA  3446               	rlcf	fix_fft@j+1,w,c
  2571  0075AC  6EDA               	movwf	fsr2h,c
  2572  0075AE  500D               	movf	fix_fft@fr,w,c
  2573  0075B0  26D9               	addwf	fsr2l,f,c
  2574  0075B2  500E               	movf	fix_fft@fr+1,w,c
  2575  0075B4  22DA               	addwfc	fsr2h,f,c
  2576  0075B6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2577  0075BA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2578  0075BE  0E00               	movlw	0
  2579  0075C0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2580  0075C2  0EFF               	movlw	-1
  2581  0075C4  6E07               	movwf	___lmul@multiplicand+2,c
  2582  0075C6  6E08               	movwf	___lmul@multiplicand+3,c
  2583  0075C8  EC7C  F036         	call	___lmul	;wreg free
  2584  0075CC  C001  F049         	movff	?___lmul,fix_fft@c
  2585  0075D0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2586  0075D4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2587  0075D8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2588                           
  2589                           ;fft.c: 228: c = c >> 14;
  2590  0075DC  0E0E               	movlw	14
  2591  0075DE  6E13               	movwf	??_fix_fft& (0+255),c
  2592  0075E0  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2593  0075E4  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2594  0075E8  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2595  0075EC  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2596  0075F0                     u625:
  2597  0075F0  6613               	tstfsz	??_fix_fft,c
  2598  0075F2  D001               	goto	u626
  2599  0075F4  D007               	goto	u627
  2600  0075F6                     u626:
  2601  0075F6  3417               	rlcf	??_fix_fft+4,w,c
  2602  0075F8  3217               	rrcf	??_fix_fft+4,f,c
  2603  0075FA  3216               	rrcf	??_fix_fft+3,f,c
  2604  0075FC  3215               	rrcf	??_fix_fft+2,f,c
  2605  0075FE  3214               	rrcf	??_fix_fft+1,f,c
  2606  007600  2E13               	decfsz	??_fix_fft,f,c
  2607  007602  D7F6               	goto	u625
  2608  007604                     u627:
  2609  007604  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2610  007608  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2611  00760C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2612  007610  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2613                           
  2614                           ;fft.c: 229: b = c & 0x01;
  2615  007614  0E01               	movlw	1
  2616  007616  1449               	andwf	fix_fft@c,w,c
  2617  007618  6E37               	movwf	fix_fft@b,c
  2618  00761A  6A38               	clrf	fix_fft@b+1,c
  2619                           
  2620                           ;fft.c: 230: tr = (c >> 1) + b;
  2621  00761C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2622  007620  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2623  007624  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2624  007628  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2625  00762C  3416               	rlcf	??_fix_fft+3,w,c
  2626  00762E  3216               	rrcf	??_fix_fft+3,f,c
  2627  007630  3215               	rrcf	??_fix_fft+2,f,c
  2628  007632  3214               	rrcf	??_fix_fft+1,f,c
  2629  007634  3213               	rrcf	??_fix_fft,f,c
  2630  007636  5037               	movf	fix_fft@b,w,c
  2631  007638  2413               	addwf	??_fix_fft,w,c
  2632  00763A  6E33               	movwf	fix_fft@tr,c
  2633  00763C  5038               	movf	fix_fft@b+1,w,c
  2634  00763E  2014               	addwfc	??_fix_fft+1,w,c
  2635  007640  6E34               	movwf	fix_fft@tr+1,c
  2636                           
  2637                           ;fft.c: 232: c = ((long int)wi * (long int)fi[j]);
  2638  007642  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2639  007646  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2640  00764A  0E00               	movlw	0
  2641  00764C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2642  00764E  0EFF               	movlw	-1
  2643  007650  6E03               	movwf	___lmul@multiplier+2,c
  2644  007652  6E04               	movwf	___lmul@multiplier+3,c
  2645  007654  90D8               	bcf	status,0,c
  2646  007656  3445               	rlcf	fix_fft@j,w,c
  2647  007658  6ED9               	movwf	fsr2l,c
  2648  00765A  3446               	rlcf	fix_fft@j+1,w,c
  2649  00765C  6EDA               	movwf	fsr2h,c
  2650  00765E  500F               	movf	fix_fft@fi,w,c
  2651  007660  26D9               	addwf	fsr2l,f,c
  2652  007662  5010               	movf	fix_fft@fi+1,w,c
  2653  007664  22DA               	addwfc	fsr2h,f,c
  2654  007666  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2655  00766A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2656  00766E  0E00               	movlw	0
  2657  007670  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2658  007672  0EFF               	movlw	-1
  2659  007674  6E07               	movwf	___lmul@multiplicand+2,c
  2660  007676  6E08               	movwf	___lmul@multiplicand+3,c
  2661  007678  EC7C  F036         	call	___lmul	;wreg free
  2662  00767C  C001  F049         	movff	?___lmul,fix_fft@c
  2663  007680  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2664  007684  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2665  007688  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2666                           
  2667                           ;fft.c: 233: c = c >> 14;
  2668  00768C  0E0E               	movlw	14
  2669  00768E  6E13               	movwf	??_fix_fft& (0+255),c
  2670  007690  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2671  007694  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2672  007698  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2673  00769C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2674  0076A0                     u635:
  2675  0076A0  6613               	tstfsz	??_fix_fft,c
  2676  0076A2  D001               	goto	u636
  2677  0076A4  D007               	goto	u637
  2678  0076A6                     u636:
  2679  0076A6  3417               	rlcf	??_fix_fft+4,w,c
  2680  0076A8  3217               	rrcf	??_fix_fft+4,f,c
  2681  0076AA  3216               	rrcf	??_fix_fft+3,f,c
  2682  0076AC  3215               	rrcf	??_fix_fft+2,f,c
  2683  0076AE  3214               	rrcf	??_fix_fft+1,f,c
  2684  0076B0  2E13               	decfsz	??_fix_fft,f,c
  2685  0076B2  D7F6               	goto	u635
  2686  0076B4                     u637:
  2687  0076B4  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2688  0076B8  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2689  0076BC  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2690  0076C0  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2691                           
  2692                           ;fft.c: 234: b = c & 0x01;
  2693  0076C4  0E01               	movlw	1
  2694  0076C6  1449               	andwf	fix_fft@c,w,c
  2695  0076C8  6E37               	movwf	fix_fft@b,c
  2696  0076CA  6A38               	clrf	fix_fft@b+1,c
  2697                           
  2698                           ;fft.c: 235: tr = tr - ((c >> 1) + b);
  2699  0076CC  C049  F013         	movff	fix_fft@c,??_fix_fft
  2700  0076D0  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2701  0076D4  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2702  0076D8  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2703  0076DC  3416               	rlcf	??_fix_fft+3,w,c
  2704  0076DE  3216               	rrcf	??_fix_fft+3,f,c
  2705  0076E0  3215               	rrcf	??_fix_fft+2,f,c
  2706  0076E2  3214               	rrcf	??_fix_fft+1,f,c
  2707  0076E4  3213               	rrcf	??_fix_fft,f,c
  2708  0076E6  5037               	movf	fix_fft@b,w,c
  2709  0076E8  2613               	addwf	??_fix_fft,f,c
  2710  0076EA  5038               	movf	fix_fft@b+1,w,c
  2711  0076EC  2214               	addwfc	??_fix_fft+1,f,c
  2712  0076EE  1E13               	comf	??_fix_fft,f,c
  2713  0076F0  1E14               	comf	??_fix_fft+1,f,c
  2714  0076F2  4A13               	infsnz	??_fix_fft,f,c
  2715  0076F4  2A14               	incf	??_fix_fft+1,f,c
  2716  0076F6  5033               	movf	fix_fft@tr,w,c
  2717  0076F8  2413               	addwf	??_fix_fft,w,c
  2718  0076FA  6E33               	movwf	fix_fft@tr,c
  2719  0076FC  5034               	movf	fix_fft@tr+1,w,c
  2720  0076FE  2014               	addwfc	??_fix_fft+1,w,c
  2721  007700  6E34               	movwf	fix_fft@tr+1,c
  2722                           
  2723                           ;fft.c: 238: c = ((long int)wr * (long int)fi[j]);
  2724  007702  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2725  007706  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2726  00770A  0E00               	movlw	0
  2727  00770C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2728  00770E  0EFF               	movlw	-1
  2729  007710  6E03               	movwf	___lmul@multiplier+2,c
  2730  007712  6E04               	movwf	___lmul@multiplier+3,c
  2731  007714  90D8               	bcf	status,0,c
  2732  007716  3445               	rlcf	fix_fft@j,w,c
  2733  007718  6ED9               	movwf	fsr2l,c
  2734  00771A  3446               	rlcf	fix_fft@j+1,w,c
  2735  00771C  6EDA               	movwf	fsr2h,c
  2736  00771E  500F               	movf	fix_fft@fi,w,c
  2737  007720  26D9               	addwf	fsr2l,f,c
  2738  007722  5010               	movf	fix_fft@fi+1,w,c
  2739  007724  22DA               	addwfc	fsr2h,f,c
  2740  007726  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2741  00772A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2742  00772E  0E00               	movlw	0
  2743  007730  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2744  007732  0EFF               	movlw	-1
  2745  007734  6E07               	movwf	___lmul@multiplicand+2,c
  2746  007736  6E08               	movwf	___lmul@multiplicand+3,c
  2747  007738  EC7C  F036         	call	___lmul	;wreg free
  2748  00773C  C001  F049         	movff	?___lmul,fix_fft@c
  2749  007740  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2750  007744  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2751  007748  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2752                           
  2753                           ;fft.c: 239: c = c >> 14;
  2754  00774C  0E0E               	movlw	14
  2755  00774E  6E13               	movwf	??_fix_fft& (0+255),c
  2756  007750  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2757  007754  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2758  007758  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2759  00775C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2760  007760                     u645:
  2761  007760  6613               	tstfsz	??_fix_fft,c
  2762  007762  D001               	goto	u646
  2763  007764  D007               	goto	u647
  2764  007766                     u646:
  2765  007766  3417               	rlcf	??_fix_fft+4,w,c
  2766  007768  3217               	rrcf	??_fix_fft+4,f,c
  2767  00776A  3216               	rrcf	??_fix_fft+3,f,c
  2768  00776C  3215               	rrcf	??_fix_fft+2,f,c
  2769  00776E  3214               	rrcf	??_fix_fft+1,f,c
  2770  007770  2E13               	decfsz	??_fix_fft,f,c
  2771  007772  D7F6               	goto	u645
  2772  007774                     u647:
  2773  007774  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2774  007778  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2775  00777C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2776  007780  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2777                           
  2778                           ;fft.c: 240: b = c & 0x01;
  2779  007784  0E01               	movlw	1
  2780  007786  1449               	andwf	fix_fft@c,w,c
  2781  007788  6E37               	movwf	fix_fft@b,c
  2782  00778A  6A38               	clrf	fix_fft@b+1,c
  2783                           
  2784                           ;fft.c: 241: ti = (c >> 1) + b;
  2785  00778C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2786  007790  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2787  007794  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2788  007798  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2789  00779C  3416               	rlcf	??_fix_fft+3,w,c
  2790  00779E  3216               	rrcf	??_fix_fft+3,f,c
  2791  0077A0  3215               	rrcf	??_fix_fft+2,f,c
  2792  0077A2  3214               	rrcf	??_fix_fft+1,f,c
  2793  0077A4  3213               	rrcf	??_fix_fft,f,c
  2794  0077A6  5037               	movf	fix_fft@b,w,c
  2795  0077A8  2413               	addwf	??_fix_fft,w,c
  2796  0077AA  6E35               	movwf	fix_fft@ti,c
  2797  0077AC  5038               	movf	fix_fft@b+1,w,c
  2798  0077AE  2014               	addwfc	??_fix_fft+1,w,c
  2799  0077B0  6E36               	movwf	fix_fft@ti+1,c
  2800                           
  2801                           ;fft.c: 243: c = ((long int)wi * (long int)fr[j]);
  2802  0077B2  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2803  0077B6  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2804  0077BA  0E00               	movlw	0
  2805  0077BC  BE02               	btfsc	___lmul@multiplier+1,7,c
  2806  0077BE  0EFF               	movlw	-1
  2807  0077C0  6E03               	movwf	___lmul@multiplier+2,c
  2808  0077C2  6E04               	movwf	___lmul@multiplier+3,c
  2809  0077C4  90D8               	bcf	status,0,c
  2810  0077C6  3445               	rlcf	fix_fft@j,w,c
  2811  0077C8  6ED9               	movwf	fsr2l,c
  2812  0077CA  3446               	rlcf	fix_fft@j+1,w,c
  2813  0077CC  6EDA               	movwf	fsr2h,c
  2814  0077CE  500D               	movf	fix_fft@fr,w,c
  2815  0077D0  26D9               	addwf	fsr2l,f,c
  2816  0077D2  500E               	movf	fix_fft@fr+1,w,c
  2817  0077D4  22DA               	addwfc	fsr2h,f,c
  2818  0077D6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2819  0077DA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2820  0077DE  0E00               	movlw	0
  2821  0077E0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2822  0077E2  0EFF               	movlw	-1
  2823  0077E4  6E07               	movwf	___lmul@multiplicand+2,c
  2824  0077E6  6E08               	movwf	___lmul@multiplicand+3,c
  2825  0077E8  EC7C  F036         	call	___lmul	;wreg free
  2826  0077EC  C001  F049         	movff	?___lmul,fix_fft@c
  2827  0077F0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2828  0077F4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2829  0077F8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2830                           
  2831                           ;fft.c: 244: c = c >> 14;
  2832  0077FC  0E0E               	movlw	14
  2833  0077FE  6E13               	movwf	??_fix_fft& (0+255),c
  2834  007800  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2835  007804  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2836  007808  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2837  00780C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2838  007810                     u655:
  2839  007810  6613               	tstfsz	??_fix_fft,c
  2840  007812  D001               	goto	u656
  2841  007814  D007               	goto	u657
  2842  007816                     u656:
  2843  007816  3417               	rlcf	??_fix_fft+4,w,c
  2844  007818  3217               	rrcf	??_fix_fft+4,f,c
  2845  00781A  3216               	rrcf	??_fix_fft+3,f,c
  2846  00781C  3215               	rrcf	??_fix_fft+2,f,c
  2847  00781E  3214               	rrcf	??_fix_fft+1,f,c
  2848  007820  2E13               	decfsz	??_fix_fft,f,c
  2849  007822  D7F6               	goto	u655
  2850  007824                     u657:
  2851  007824  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2852  007828  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2853  00782C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2854  007830  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2855                           
  2856                           ;fft.c: 245: b = c & 0x01;
  2857  007834  0E01               	movlw	1
  2858  007836  1449               	andwf	fix_fft@c,w,c
  2859  007838  6E37               	movwf	fix_fft@b,c
  2860  00783A  6A38               	clrf	fix_fft@b+1,c
  2861                           
  2862                           ;fft.c: 246: ti = ti + ((c >> 1) + b);
  2863  00783C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2864  007840  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2865  007844  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2866  007848  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2867  00784C  3416               	rlcf	??_fix_fft+3,w,c
  2868  00784E  3216               	rrcf	??_fix_fft+3,f,c
  2869  007850  3215               	rrcf	??_fix_fft+2,f,c
  2870  007852  3214               	rrcf	??_fix_fft+1,f,c
  2871  007854  3213               	rrcf	??_fix_fft,f,c
  2872  007856  5037               	movf	fix_fft@b,w,c
  2873  007858  2613               	addwf	??_fix_fft,f,c
  2874  00785A  5038               	movf	fix_fft@b+1,w,c
  2875  00785C  2214               	addwfc	??_fix_fft+1,f,c
  2876  00785E  5035               	movf	fix_fft@ti,w,c
  2877  007860  2413               	addwf	??_fix_fft,w,c
  2878  007862  6E35               	movwf	fix_fft@ti,c
  2879  007864  5036               	movf	fix_fft@ti+1,w,c
  2880  007866  2014               	addwfc	??_fix_fft+1,w,c
  2881  007868  6E36               	movwf	fix_fft@ti+1,c
  2882                           
  2883                           ;fft.c: 248: qr = fr[i];
  2884  00786A  90D8               	bcf	status,0,c
  2885  00786C  3439               	rlcf	fix_fft@i,w,c
  2886  00786E  6ED9               	movwf	fsr2l,c
  2887  007870  343A               	rlcf	fix_fft@i+1,w,c
  2888  007872  6EDA               	movwf	fsr2h,c
  2889  007874  500D               	movf	fix_fft@fr,w,c
  2890  007876  26D9               	addwf	fsr2l,f,c
  2891  007878  500E               	movf	fix_fft@fr+1,w,c
  2892  00787A  22DA               	addwfc	fsr2h,f,c
  2893  00787C  CFDE F027          	movff	postinc2,fix_fft@qr
  2894  007880  CFDD F028          	movff	postdec2,fix_fft@qr+1
  2895                           
  2896                           ;fft.c: 249: qi = fi[i];
  2897  007884  90D8               	bcf	status,0,c
  2898  007886  3439               	rlcf	fix_fft@i,w,c
  2899  007888  6ED9               	movwf	fsr2l,c
  2900  00788A  343A               	rlcf	fix_fft@i+1,w,c
  2901  00788C  6EDA               	movwf	fsr2h,c
  2902  00788E  500F               	movf	fix_fft@fi,w,c
  2903  007890  26D9               	addwf	fsr2l,f,c
  2904  007892  5010               	movf	fix_fft@fi+1,w,c
  2905  007894  22DA               	addwfc	fsr2h,f,c
  2906  007896  CFDE F029          	movff	postinc2,fix_fft@qi
  2907  00789A  CFDD F02A          	movff	postdec2,fix_fft@qi+1
  2908                           
  2909                           ;fft.c: 250: qr >>= 1;
  2910  00789E  3428               	rlcf	fix_fft@qr+1,w,c
  2911  0078A0  3228               	rrcf	fix_fft@qr+1,f,c
  2912  0078A2  3227               	rrcf	fix_fft@qr,f,c
  2913                           
  2914                           ;fft.c: 251: qi >>= 1;
  2915  0078A4  342A               	rlcf	fix_fft@qi+1,w,c
  2916  0078A6  322A               	rrcf	fix_fft@qi+1,f,c
  2917  0078A8  3229               	rrcf	fix_fft@qi,f,c
  2918                           
  2919                           ;fft.c: 253: fr[j] = qr - tr;
  2920  0078AA  C033  F013         	movff	fix_fft@tr,??_fix_fft
  2921  0078AE  C034  F014         	movff	fix_fft@tr+1,??_fix_fft+1
  2922  0078B2  1E13               	comf	??_fix_fft,f,c
  2923  0078B4  1E14               	comf	??_fix_fft+1,f,c
  2924  0078B6  4A13               	infsnz	??_fix_fft,f,c
  2925  0078B8  2A14               	incf	??_fix_fft+1,f,c
  2926  0078BA  5027               	movf	fix_fft@qr,w,c
  2927  0078BC  2613               	addwf	??_fix_fft,f,c
  2928  0078BE  5028               	movf	fix_fft@qr+1,w,c
  2929  0078C0  2214               	addwfc	??_fix_fft+1,f,c
  2930  0078C2  90D8               	bcf	status,0,c
  2931  0078C4  3445               	rlcf	fix_fft@j,w,c
  2932  0078C6  6ED9               	movwf	fsr2l,c
  2933  0078C8  3446               	rlcf	fix_fft@j+1,w,c
  2934  0078CA  6EDA               	movwf	fsr2h,c
  2935  0078CC  500D               	movf	fix_fft@fr,w,c
  2936  0078CE  26D9               	addwf	fsr2l,f,c
  2937  0078D0  500E               	movf	fix_fft@fr+1,w,c
  2938  0078D2  22DA               	addwfc	fsr2h,f,c
  2939  0078D4  C013  FFDE         	movff	??_fix_fft,postinc2
  2940  0078D8  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2941                           
  2942                           ;fft.c: 254: fi[j] = qi - ti;
  2943  0078DC  C035  F013         	movff	fix_fft@ti,??_fix_fft
  2944  0078E0  C036  F014         	movff	fix_fft@ti+1,??_fix_fft+1
  2945  0078E4  1E13               	comf	??_fix_fft,f,c
  2946  0078E6  1E14               	comf	??_fix_fft+1,f,c
  2947  0078E8  4A13               	infsnz	??_fix_fft,f,c
  2948  0078EA  2A14               	incf	??_fix_fft+1,f,c
  2949  0078EC  5029               	movf	fix_fft@qi,w,c
  2950  0078EE  2613               	addwf	??_fix_fft,f,c
  2951  0078F0  502A               	movf	fix_fft@qi+1,w,c
  2952  0078F2  2214               	addwfc	??_fix_fft+1,f,c
  2953  0078F4  90D8               	bcf	status,0,c
  2954  0078F6  3445               	rlcf	fix_fft@j,w,c
  2955  0078F8  6ED9               	movwf	fsr2l,c
  2956  0078FA  3446               	rlcf	fix_fft@j+1,w,c
  2957  0078FC  6EDA               	movwf	fsr2h,c
  2958  0078FE  500F               	movf	fix_fft@fi,w,c
  2959  007900  26D9               	addwf	fsr2l,f,c
  2960  007902  5010               	movf	fix_fft@fi+1,w,c
  2961  007904  22DA               	addwfc	fsr2h,f,c
  2962  007906  C013  FFDE         	movff	??_fix_fft,postinc2
  2963  00790A  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2964                           
  2965                           ;fft.c: 255: fr[i] = qr + tr;
  2966  00790E  C027  F013         	movff	fix_fft@qr,??_fix_fft
  2967  007912  C028  F014         	movff	fix_fft@qr+1,??_fix_fft+1
  2968  007916  5033               	movf	fix_fft@tr,w,c
  2969  007918  2613               	addwf	??_fix_fft,f,c
  2970  00791A  5034               	movf	fix_fft@tr+1,w,c
  2971  00791C  2214               	addwfc	??_fix_fft+1,f,c
  2972  00791E  90D8               	bcf	status,0,c
  2973  007920  3439               	rlcf	fix_fft@i,w,c
  2974  007922  6ED9               	movwf	fsr2l,c
  2975  007924  343A               	rlcf	fix_fft@i+1,w,c
  2976  007926  6EDA               	movwf	fsr2h,c
  2977  007928  500D               	movf	fix_fft@fr,w,c
  2978  00792A  26D9               	addwf	fsr2l,f,c
  2979  00792C  500E               	movf	fix_fft@fr+1,w,c
  2980  00792E  22DA               	addwfc	fsr2h,f,c
  2981  007930  C013  FFDE         	movff	??_fix_fft,postinc2
  2982  007934  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2983                           
  2984                           ;fft.c: 256: fi[i] = qi + ti;
  2985  007938  C029  F013         	movff	fix_fft@qi,??_fix_fft
  2986  00793C  C02A  F014         	movff	fix_fft@qi+1,??_fix_fft+1
  2987  007940  5035               	movf	fix_fft@ti,w,c
  2988  007942  2613               	addwf	??_fix_fft,f,c
  2989  007944  5036               	movf	fix_fft@ti+1,w,c
  2990  007946  2214               	addwfc	??_fix_fft+1,f,c
  2991  007948  90D8               	bcf	status,0,c
  2992  00794A  3439               	rlcf	fix_fft@i,w,c
  2993  00794C  6ED9               	movwf	fsr2l,c
  2994  00794E  343A               	rlcf	fix_fft@i+1,w,c
  2995  007950  6EDA               	movwf	fsr2h,c
  2996  007952  500F               	movf	fix_fft@fi,w,c
  2997  007954  26D9               	addwf	fsr2l,f,c
  2998  007956  5010               	movf	fix_fft@fi+1,w,c
  2999  007958  22DA               	addwfc	fsr2h,f,c
  3000  00795A  C013  FFDE         	movff	??_fix_fft,postinc2
  3001  00795E  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3002  007962  5023               	movf	fix_fft@istep,w,c
  3003  007964  2639               	addwf	fix_fft@i,f,c
  3004  007966  5024               	movf	fix_fft@istep+1,w,c
  3005  007968  223A               	addwfc	fix_fft@i+1,f,c
  3006  00796A  5025               	movf	fix_fft@istep+2,w,c
  3007  00796C  223B               	addwfc	fix_fft@i+2,f,c
  3008  00796E  5026               	movf	fix_fft@istep+3,w,c
  3009  007970  223C               	addwfc	fix_fft@i+3,f,c
  3010  007972                     l1248:
  3011  007972  503C               	movf	fix_fft@i+3,w,c
  3012  007974  0A80               	xorlw	128
  3013  007976  6E13               	movwf	??_fix_fft& (0+255),c
  3014  007978  502F               	movf	fix_fft@n,w,c
  3015  00797A  5C39               	subwf	fix_fft@i,w,c
  3016  00797C  5030               	movf	fix_fft@n+1,w,c
  3017  00797E  583A               	subwfb	fix_fft@i+1,w,c
  3018  007980  5031               	movf	fix_fft@n+2,w,c
  3019  007982  583B               	subwfb	fix_fft@i+2,w,c
  3020  007984  5032               	movf	fix_fft@n+3,w,c
  3021  007986  0A80               	xorlw	128
  3022  007988  5813               	subwfb	??_fix_fft& (0+255),w,c
  3023  00798A  A0D8               	btfss	status,0,c
  3024  00798C  D5F6               	goto	l1204
  3025  00798E  4A11               	infsnz	fix_fft@m,f,c
  3026  007990  2A12               	incf	fix_fft@m+1,f,c
  3027  007992                     l1252:
  3028  007992  C011  F013         	movff	fix_fft@m,??_fix_fft
  3029  007996  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  3030  00799A  0E00               	movlw	0
  3031  00799C  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  3032  00799E  0EFF               	movlw	255
  3033  0079A0  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  3034  0079A2  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  3035  0079A4  5016               	movf	??_fix_fft+3,w,c
  3036  0079A6  0A80               	xorlw	128
  3037  0079A8  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  3038  0079AA  5041               	movf	fix_fft@l,w,c
  3039  0079AC  5C13               	subwf	??_fix_fft,w,c
  3040  0079AE  5042               	movf	fix_fft@l+1,w,c
  3041  0079B0  5814               	subwfb	??_fix_fft+1,w,c
  3042  0079B2  5043               	movf	fix_fft@l+2,w,c
  3043  0079B4  5815               	subwfb	??_fix_fft+2,w,c
  3044  0079B6  5044               	movf	fix_fft@l+3,w,c
  3045  0079B8  0A80               	xorlw	128
  3046  0079BA  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  3047  0079BC  A0D8               	btfss	status,0,c
  3048  0079BE  D581               	goto	l1196
  3049                           
  3050                           ;fft.c: 257: }
  3051                           ;fft.c: 258: }
  3052                           ;fft.c: 260: --k;
  3053  0079C0  0EFF               	movlw	255
  3054  0079C2  261B               	addwf	fix_fft@k,f,c
  3055  0079C4  0EFF               	movlw	255
  3056  0079C6  221C               	addwfc	fix_fft@k+1,f,c
  3057  0079C8  0EFF               	movlw	255
  3058  0079CA  221D               	addwfc	fix_fft@k+2,f,c
  3059  0079CC  0EFF               	movlw	255
  3060  0079CE  221E               	addwfc	fix_fft@k+3,f,c
  3061                           
  3062                           ;fft.c: 261: l = istep;
  3063  0079D0  C023  F041         	movff	fix_fft@istep,fix_fft@l
  3064  0079D4  C024  F042         	movff	fix_fft@istep+1,fix_fft@l+1
  3065  0079D8  C025  F043         	movff	fix_fft@istep+2,fix_fft@l+2
  3066  0079DC  C026  F044         	movff	fix_fft@istep+3,fix_fft@l+3
  3067  0079E0                     l107:
  3068  0079E0  5044               	movf	fix_fft@l+3,w,c
  3069  0079E2  0A80               	xorlw	128
  3070  0079E4  6E13               	movwf	??_fix_fft& (0+255),c
  3071  0079E6  502F               	movf	fix_fft@n,w,c
  3072  0079E8  5C41               	subwf	fix_fft@l,w,c
  3073  0079EA  5030               	movf	fix_fft@n+1,w,c
  3074  0079EC  5842               	subwfb	fix_fft@l+1,w,c
  3075  0079EE  5031               	movf	fix_fft@n+2,w,c
  3076  0079F0  5843               	subwfb	fix_fft@l+2,w,c
  3077  0079F2  5032               	movf	fix_fft@n+3,w,c
  3078  0079F4  0A80               	xorlw	128
  3079  0079F6  5813               	subwfb	??_fix_fft& (0+255),w,c
  3080  0079F8  B0D8               	btfsc	status,0,c
  3081  0079FA  0012               	return	
  3082  0079FC  D554               	goto	l1192
  3083  0079FE                     __end_of_fix_fft:
  3084                           	opt stack 0
  3085                           tblptru	equ	0xFF8
  3086                           tblptrh	equ	0xFF7
  3087                           tblptrl	equ	0xFF6
  3088                           tablat	equ	0xFF5
  3089                           postinc0	equ	0xFEE
  3090                           wreg	equ	0xFE8
  3091                           postinc1	equ	0xFE6
  3092                           postdec1	equ	0xFE5
  3093                           fsr1h	equ	0xFE2
  3094                           fsr1l	equ	0xFE1
  3095                           indf2	equ	0xFDF
  3096                           postinc2	equ	0xFDE
  3097                           postdec2	equ	0xFDD
  3098                           fsr2h	equ	0xFDA
  3099                           fsr2l	equ	0xFD9
  3100                           status	equ	0xFD8
  3101                           
  3102 ;; *************** function ___lmul *****************
  3103 ;; Defined at:
  3104 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  multiplier      4    0[COMRAM] unsigned long 
  3107 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  product         4    8[COMRAM] unsigned long 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  4    0[COMRAM] unsigned long 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3119 ;;      Params:         8       0       0       0       0       0       0
  3120 ;;      Locals:         4       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0
  3122 ;;      Totals:        12       0       0       0       0       0       0
  3123 ;;Total ram usage:       12 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_fix_fft
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text5
  3133  006CF8                     __ptext5:
  3134                           	opt stack 0
  3135  006CF8                     ___lmul:
  3136                           	opt stack 29
  3137                           
  3138                           ;incstack = 0
  3139  006CF8  0E00               	movlw	0
  3140  006CFA  6E09               	movwf	___lmul@product,c
  3141  006CFC  0E00               	movlw	0
  3142  006CFE  6E0A               	movwf	___lmul@product+1,c
  3143  006D00  0E00               	movlw	0
  3144  006D02  6E0B               	movwf	___lmul@product+2,c
  3145  006D04  0E00               	movlw	0
  3146  006D06  6E0C               	movwf	___lmul@product+3,c
  3147  006D08                     l1094:
  3148  006D08  A001               	btfss	___lmul@multiplier,0,c
  3149  006D0A  D008               	goto	l1098
  3150  006D0C  5005               	movf	___lmul@multiplicand,w,c
  3151  006D0E  2609               	addwf	___lmul@product,f,c
  3152  006D10  5006               	movf	___lmul@multiplicand+1,w,c
  3153  006D12  220A               	addwfc	___lmul@product+1,f,c
  3154  006D14  5007               	movf	___lmul@multiplicand+2,w,c
  3155  006D16  220B               	addwfc	___lmul@product+2,f,c
  3156  006D18  5008               	movf	___lmul@multiplicand+3,w,c
  3157  006D1A  220C               	addwfc	___lmul@product+3,f,c
  3158  006D1C                     l1098:
  3159  006D1C  90D8               	bcf	status,0,c
  3160  006D1E  3605               	rlcf	___lmul@multiplicand,f,c
  3161  006D20  3606               	rlcf	___lmul@multiplicand+1,f,c
  3162  006D22  3607               	rlcf	___lmul@multiplicand+2,f,c
  3163  006D24  3608               	rlcf	___lmul@multiplicand+3,f,c
  3164  006D26  90D8               	bcf	status,0,c
  3165  006D28  3204               	rrcf	___lmul@multiplier+3,f,c
  3166  006D2A  3203               	rrcf	___lmul@multiplier+2,f,c
  3167  006D2C  3202               	rrcf	___lmul@multiplier+1,f,c
  3168  006D2E  3201               	rrcf	___lmul@multiplier,f,c
  3169  006D30  5004               	movf	___lmul@multiplier+3,w,c
  3170  006D32  1001               	iorwf	___lmul@multiplier,w,c
  3171  006D34  1002               	iorwf	___lmul@multiplier+1,w,c
  3172  006D36  1003               	iorwf	___lmul@multiplier+2,w,c
  3173  006D38  A4D8               	btfss	status,2,c
  3174  006D3A  D7E6               	goto	l1094
  3175  006D3C  C009  F001         	movff	___lmul@product,?___lmul
  3176  006D40  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3177  006D44  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3178  006D48  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3179  006D4C  0012               	return	
  3180  006D4E                     __end_of___lmul:
  3181                           	opt stack 0
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           postinc0	equ	0xFEE
  3187                           wreg	equ	0xFE8
  3188                           postinc1	equ	0xFE6
  3189                           postdec1	equ	0xFE5
  3190                           fsr1h	equ	0xFE2
  3191                           fsr1l	equ	0xFE1
  3192                           indf2	equ	0xFDF
  3193                           postinc2	equ	0xFDE
  3194                           postdec2	equ	0xFDD
  3195                           fsr2h	equ	0xFDA
  3196                           fsr2l	equ	0xFD9
  3197                           status	equ	0xFD8
  3198                           
  3199 ;; *************** function ___wmul *****************
  3200 ;; Defined at:
  3201 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  multiplier      2    0[COMRAM] unsigned int 
  3204 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  product         2    4[COMRAM] unsigned int 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2    0[COMRAM] unsigned int 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0, prodl, prodh
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3216 ;;      Params:         4       0       0       0       0       0       0
  3217 ;;      Locals:         2       0       0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0       0
  3219 ;;      Totals:         6       0       0       0       0       0       0
  3220 ;;Total ram usage:        6 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text6
  3230  006C26                     __ptext6:
  3231                           	opt stack 0
  3232  006C26                     ___wmul:
  3233                           	opt stack 30
  3234                           
  3235                           ;incstack = 0
  3236  006C26  5001               	movf	___wmul@multiplier,w,c
  3237  006C28  0203               	mulwf	___wmul@multiplicand,c
  3238  006C2A  CFF3 F005          	movff	prodl,___wmul@product
  3239  006C2E  CFF4 F006          	movff	prodh,___wmul@product+1
  3240  006C32  5001               	movf	___wmul@multiplier,w,c
  3241  006C34  0204               	mulwf	___wmul@multiplicand+1,c
  3242  006C36  50F3               	movf	prodl,w,c
  3243  006C38  2606               	addwf	___wmul@product+1,f,c
  3244  006C3A  5002               	movf	___wmul@multiplier+1,w,c
  3245  006C3C  0203               	mulwf	___wmul@multiplicand,c
  3246  006C3E  50F3               	movf	prodl,w,c
  3247  006C40  2606               	addwf	___wmul@product+1,f,c
  3248  006C42  C005  F001         	movff	___wmul@product,?___wmul
  3249  006C46  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3250  006C4A  0012               	return	
  3251  006C4C                     __end_of___wmul:
  3252                           	opt stack 0
  3253                           tblptru	equ	0xFF8
  3254                           tblptrh	equ	0xFF7
  3255                           tblptrl	equ	0xFF6
  3256                           tablat	equ	0xFF5
  3257                           prodh	equ	0xFF4
  3258                           prodl	equ	0xFF3
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           postinc1	equ	0xFE6
  3262                           postdec1	equ	0xFE5
  3263                           fsr1h	equ	0xFE2
  3264                           fsr1l	equ	0xFE1
  3265                           indf2	equ	0xFDF
  3266                           postinc2	equ	0xFDE
  3267                           postdec2	equ	0xFDD
  3268                           fsr2h	equ	0xFDA
  3269                           fsr2l	equ	0xFD9
  3270                           status	equ	0xFD8
  3271                           
  3272 ;; *************** function _ReadADC *****************
  3273 ;; Defined at:
  3274 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcread.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  2    0[COMRAM] int 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3288 ;;      Params:         2       0       0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0
  3291 ;;      Totals:         2       0       0       0       0       0       0
  3292 ;;Total ram usage:        2 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text7
  3302  006BEA                     __ptext7:
  3303                           	opt stack 0
  3304  006BEA                     _ReadADC:
  3305                           	opt stack 30
  3306                           
  3307                           ;incstack = 0
  3308  006BEA  50C4               	movf	4036,w,c	;volatile
  3309  006BEC  6E02               	movwf	?_ReadADC+1,c
  3310  006BEE  50C3               	movf	4035,w,c	;volatile
  3311  006BF0  6E01               	movwf	?_ReadADC,c
  3312  006BF2  0012               	return	
  3313  006BF4                     __end_of_ReadADC:
  3314                           	opt stack 0
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           prodh	equ	0xFF4
  3320                           prodl	equ	0xFF3
  3321                           postinc0	equ	0xFEE
  3322                           wreg	equ	0xFE8
  3323                           postinc1	equ	0xFE6
  3324                           postdec1	equ	0xFE5
  3325                           fsr1h	equ	0xFE2
  3326                           fsr1l	equ	0xFE1
  3327                           indf2	equ	0xFDF
  3328                           postinc2	equ	0xFDE
  3329                           postdec2	equ	0xFDD
  3330                           fsr2h	equ	0xFDA
  3331                           fsr2l	equ	0xFD9
  3332                           status	equ	0xFD8
  3333                           
  3334 ;; *************** function _OpenADC *****************
  3335 ;; Defined at:
  3336 ;;		line 305 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcopen.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  config          1    wreg     unsigned char 
  3339 ;;  config2         1    0[COMRAM] unsigned char 
  3340 ;;  config3         1    1[COMRAM] unsigned char 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  config          1    4[COMRAM] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3352 ;;      Params:         2       0       0       0       0       0       0
  3353 ;;      Locals:         1       0       0       0       0       0       0
  3354 ;;      Temps:          2       0       0       0       0       0       0
  3355 ;;      Totals:         5       0       0       0       0       0       0
  3356 ;;Total ram usage:        5 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text8
  3366  006CAA                     __ptext8:
  3367                           	opt stack 0
  3368  006CAA                     _OpenADC:
  3369                           	opt stack 30
  3370                           
  3371                           ;incstack = 0
  3372                           ;OpenADC@config stored from wreg
  3373  006CAA  6E05               	movwf	OpenADC@config,c
  3374  006CAC  0E00               	movlw	0
  3375  006CAE  6EC2               	movwf	4034,c	;volatile
  3376  006CB0  0E00               	movlw	0
  3377  006CB2  6EC1               	movwf	4033,c	;volatile
  3378  006CB4  0E00               	movlw	0
  3379  006CB6  6EC0               	movwf	4032,c	;volatile
  3380  006CB8  5001               	movf	OpenADC@config2,w,c
  3381  006CBA  0B7C               	andlw	124
  3382  006CBC  6EC2               	movwf	4034,c	;volatile
  3383  006CBE  C002  FFC1         	movff	OpenADC@config3,4033	;volatile
  3384  006CC2  C005  F003         	movff	OpenADC@config,??_OpenADC
  3385  006CC6  90D8               	bcf	status,0,c
  3386  006CC8  3603               	rlcf	??_OpenADC,f,c
  3387  006CCA  90D8               	bcf	status,0,c
  3388  006CCC  3603               	rlcf	??_OpenADC,f,c
  3389  006CCE  0E38               	movlw	56
  3390  006CD0  1603               	andwf	??_OpenADC,f,c
  3391  006CD2  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  3392  006CD6  3A04               	swapf	??_OpenADC+1,f,c
  3393  006CD8  0E0F               	movlw	15
  3394  006CDA  1604               	andwf	??_OpenADC+1,f,c
  3395  006CDC  0E07               	movlw	7
  3396  006CDE  1604               	andwf	??_OpenADC+1,f,c
  3397  006CE0  5005               	movf	OpenADC@config,w,c
  3398  006CE2  0B80               	andlw	128
  3399  006CE4  1004               	iorwf	??_OpenADC+1,w,c
  3400  006CE6  1003               	iorwf	??_OpenADC,w,c
  3401  006CE8  6EC0               	movwf	4032,c	;volatile
  3402  006CEA  AE01               	btfss	OpenADC@config2,7,c
  3403  006CEC  D003               	goto	l143
  3404  006CEE  9C9E               	bcf	3998,6,c	;volatile
  3405  006CF0  8C9D               	bsf	3997,6,c	;volatile
  3406  006CF2  8CF2               	bsf	intcon,6,c	;volatile
  3407  006CF4                     l143:
  3408  006CF4  80C2               	bsf	4034,0,c	;volatile
  3409  006CF6  0012               	return	
  3410  006CF8                     __end_of_OpenADC:
  3411                           	opt stack 0
  3412                           tblptru	equ	0xFF8
  3413                           tblptrh	equ	0xFF7
  3414                           tblptrl	equ	0xFF6
  3415                           tablat	equ	0xFF5
  3416                           prodh	equ	0xFF4
  3417                           prodl	equ	0xFF3
  3418                           intcon	equ	0xFF2
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postinc1	equ	0xFE6
  3422                           postdec1	equ	0xFE5
  3423                           fsr1h	equ	0xFE2
  3424                           fsr1l	equ	0xFE1
  3425                           indf2	equ	0xFDF
  3426                           postinc2	equ	0xFDE
  3427                           postdec2	equ	0xFDD
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _Open1USART *****************
  3433 ;; Defined at:
  3434 ;;		line 124 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1open.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  config          1    wreg     unsigned char 
  3437 ;;  spbrg           2    0[COMRAM] unsigned int 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  config          1    5[COMRAM] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;		None               void
  3442 ;; Registers used:
  3443 ;;		wreg, status,2
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3449 ;;      Params:         2       0       0       0       0       0       0
  3450 ;;      Locals:         1       0       0       0       0       0       0
  3451 ;;      Temps:          3       0       0       0       0       0       0
  3452 ;;      Totals:         6       0       0       0       0       0       0
  3453 ;;Total ram usage:        6 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_main
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text9
  3463  006D4E                     __ptext9:
  3464                           	opt stack 0
  3465  006D4E                     _Open1USART:
  3466                           	opt stack 30
  3467                           
  3468                           ;incstack = 0
  3469                           ;Open1USART@config stored from wreg
  3470  006D4E  6E06               	movwf	Open1USART@config,c
  3471  006D50  0E00               	movlw	0
  3472  006D52  6EAC               	movwf	4012,c	;volatile
  3473  006D54  0E00               	movlw	0
  3474  006D56  6EAB               	movwf	4011,c	;volatile
  3475  006D58  B006               	btfsc	Open1USART@config,0,c
  3476  006D5A  88AC               	bsf	4012,4,c	;volatile
  3477  006D5C  A206               	btfss	Open1USART@config,1,c
  3478  006D5E  D002               	goto	l1124
  3479  006D60  8CAC               	bsf	4012,6,c	;volatile
  3480  006D62  8CAB               	bsf	4011,6,c	;volatile
  3481  006D64                     l1124:
  3482  006D64  B406               	btfsc	Open1USART@config,2,c
  3483  006D66  8EAC               	bsf	4012,7,c	;volatile
  3484  006D68  A606               	btfss	Open1USART@config,3,c
  3485  006D6A  D002               	goto	l171
  3486  006D6C  88AB               	bsf	4011,4,c	;volatile
  3487  006D6E  D001               	goto	l1132
  3488  006D70                     l171:
  3489  006D70  8AAB               	bsf	4011,5,c	;volatile
  3490  006D72                     l1132:
  3491  006D72  B806               	btfsc	Open1USART@config,4,c
  3492  006D74  84AC               	bsf	4012,2,c	;volatile
  3493  006D76  BA06               	btfsc	Open1USART@config,5,c
  3494  006D78  86AB               	bsf	4011,3,c	;volatile
  3495  006D7A  AC06               	btfss	Open1USART@config,6,c
  3496  006D7C  D002               	goto	l175
  3497  006D7E  8A9D               	bsf	3997,5,c	;volatile
  3498  006D80  D001               	goto	l1144
  3499  006D82                     l175:
  3500  006D82  9A9D               	bcf	3997,5,c	;volatile
  3501  006D84                     l1144:
  3502  006D84  AE06               	btfss	Open1USART@config,7,c
  3503  006D86  D002               	goto	l177
  3504  006D88  889D               	bsf	3997,4,c	;volatile
  3505  006D8A  D001               	goto	l178
  3506  006D8C                     l177:
  3507  006D8C  989D               	bcf	3997,4,c	;volatile
  3508  006D8E                     l178:
  3509  006D8E  C001  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3510  006D92  C002  F003         	movff	Open1USART@spbrg+1,??_Open1USART
  3511  006D96  C003  F004         	movff	??_Open1USART,??_Open1USART+1
  3512  006D9A  6A05               	clrf	(??_Open1USART+2)& (0+255),c
  3513  006D9C  5004               	movf	??_Open1USART+1,w,c
  3514  006D9E  6EB0               	movwf	4016,c	;volatile
  3515  006DA0  8AAC               	bsf	4012,5,c	;volatile
  3516  006DA2  8EAB               	bsf	4011,7,c	;volatile
  3517  006DA4  0012               	return	
  3518  006DA6                     __end_of_Open1USART:
  3519                           	opt stack 0
  3520                           tblptru	equ	0xFF8
  3521                           tblptrh	equ	0xFF7
  3522                           tblptrl	equ	0xFF6
  3523                           tablat	equ	0xFF5
  3524                           prodh	equ	0xFF4
  3525                           prodl	equ	0xFF3
  3526                           intcon	equ	0xFF2
  3527                           postinc0	equ	0xFEE
  3528                           wreg	equ	0xFE8
  3529                           postinc1	equ	0xFE6
  3530                           postdec1	equ	0xFE5
  3531                           fsr1h	equ	0xFE2
  3532                           fsr1l	equ	0xFE1
  3533                           indf2	equ	0xFDF
  3534                           postinc2	equ	0xFDE
  3535                           postdec2	equ	0xFDD
  3536                           fsr2h	equ	0xFDA
  3537                           fsr2l	equ	0xFD9
  3538                           status	equ	0xFD8
  3539                           
  3540 ;; *************** function _ConvertADC *****************
  3541 ;; Defined at:
  3542 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcconv.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;		None               void
  3549 ;; Registers used:
  3550 ;;		None
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3556 ;;      Params:         0       0       0       0       0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0
  3559 ;;      Totals:         0       0       0       0       0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text10
  3570  006BE6                     __ptext10:
  3571                           	opt stack 0
  3572  006BE6                     _ConvertADC:
  3573                           	opt stack 30
  3574                           
  3575                           ;incstack = 0
  3576  006BE6  82C2               	bsf	4034,1,c	;volatile
  3577  006BE8  0012               	return	
  3578  006BEA                     __end_of_ConvertADC:
  3579                           	opt stack 0
  3580                           tblptru	equ	0xFF8
  3581                           tblptrh	equ	0xFF7
  3582                           tblptrl	equ	0xFF6
  3583                           tablat	equ	0xFF5
  3584                           prodh	equ	0xFF4
  3585                           prodl	equ	0xFF3
  3586                           intcon	equ	0xFF2
  3587                           postinc0	equ	0xFEE
  3588                           wreg	equ	0xFE8
  3589                           postinc1	equ	0xFE6
  3590                           postdec1	equ	0xFE5
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           indf2	equ	0xFDF
  3594                           postinc2	equ	0xFDE
  3595                           postdec2	equ	0xFDD
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           status	equ	0xFD8
  3599                           
  3600 ;; *************** function _BusyADC *****************
  3601 ;; Defined at:
  3602 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcbusy.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;		None
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      unsigned char 
  3609 ;; Registers used:
  3610 ;;		wreg
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3616 ;;      Params:         0       0       0       0       0       0       0
  3617 ;;      Locals:         0       0       0       0       0       0       0
  3618 ;;      Temps:          0       0       0       0       0       0       0
  3619 ;;      Totals:         0       0       0       0       0       0       0
  3620 ;;Total ram usage:        0 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text11
  3630  006BF4                     __ptext11:
  3631                           	opt stack 0
  3632  006BF4                     _BusyADC:
  3633                           	opt stack 30
  3634                           
  3635                           ;incstack = 0
  3636  006BF4  A2C2               	btfss	4034,1,c	;volatile
  3637  006BF6  D002               	goto	u560
  3638  006BF8  0E01               	movlw	1
  3639  006BFA  0012               	return	
  3640  006BFC                     u560:
  3641  006BFC  0E00               	movlw	0
  3642  006BFE  0012               	return	
  3643  006C00                     __end_of_BusyADC:
  3644                           	opt stack 0
  3645                           tblptru	equ	0xFF8
  3646                           tblptrh	equ	0xFF7
  3647                           tblptrl	equ	0xFF6
  3648                           tablat	equ	0xFF5
  3649                           prodh	equ	0xFF4
  3650                           prodl	equ	0xFF3
  3651                           intcon	equ	0xFF2
  3652                           postinc0	equ	0xFEE
  3653                           wreg	equ	0xFE8
  3654                           postinc1	equ	0xFE6
  3655                           postdec1	equ	0xFE5
  3656                           fsr1h	equ	0xFE2
  3657                           fsr1l	equ	0xFE1
  3658                           indf2	equ	0xFDF
  3659                           postinc2	equ	0xFDE
  3660                           postdec2	equ	0xFDD
  3661                           fsr2h	equ	0xFDA
  3662                           fsr2l	equ	0xFD9
  3663                           status	equ	0xFD8
  3664                           tblptru	equ	0xFF8
  3665                           tblptrh	equ	0xFF7
  3666                           tblptrl	equ	0xFF6
  3667                           tablat	equ	0xFF5
  3668                           prodh	equ	0xFF4
  3669                           prodl	equ	0xFF3
  3670                           intcon	equ	0xFF2
  3671                           postinc0	equ	0xFEE
  3672                           wreg	equ	0xFE8
  3673                           postinc1	equ	0xFE6
  3674                           postdec1	equ	0xFE5
  3675                           fsr1h	equ	0xFE2
  3676                           fsr1l	equ	0xFE1
  3677                           indf2	equ	0xFDF
  3678                           postinc2	equ	0xFDE
  3679                           postdec2	equ	0xFDD
  3680                           fsr2h	equ	0xFDA
  3681                           fsr2l	equ	0xFD9
  3682                           status	equ	0xFD8
  3683                           
  3684                           	psect	rparam
  3685  0000                     tblptru	equ	0xFF8
  3686                           tblptrh	equ	0xFF7
  3687                           tblptrl	equ	0xFF6
  3688                           tablat	equ	0xFF5
  3689                           prodh	equ	0xFF4
  3690                           prodl	equ	0xFF3
  3691                           intcon	equ	0xFF2
  3692                           postinc0	equ	0xFEE
  3693                           wreg	equ	0xFE8
  3694                           postinc1	equ	0xFE6
  3695                           postdec1	equ	0xFE5
  3696                           fsr1h	equ	0xFE2
  3697                           fsr1l	equ	0xFE1
  3698                           indf2	equ	0xFDF
  3699                           postinc2	equ	0xFDE
  3700                           postdec2	equ	0xFDD
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1536
    Data        0
    BSS         265
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      93
    BANK0           160     14     147
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fix_fft@fi	PTR short  size(2) Largest target is 128
		 -> imaginaryNumbers(BANK1[128]), 

    fix_fft@fr	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 

    sendIntArray@array	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_fix_fft
    _sendChar->_Write1USART
    _fix_fft->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    4465
                                             76 COMRAM    13    13      0
                                              0 BANK0     14    14      0
                            _BusyADC
                         _ConvertADC
                         _Open1USART
                            _OpenADC
                            _ReadADC
                             ___wmul
                            _fix_fft
                       _sendIntArray
 ---------------------------------------------------------------------------------
 (1) _sendIntArray                                         4     0      4     172
                                              1 COMRAM     4     0      4
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      22
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fix_fft                                             64    58      6    2782
                                             12 COMRAM    64    58      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     444
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     371
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     238
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Open1USART
   _OpenADC
   _ReadADC
   ___wmul
   _fix_fft
     ___lmul
   _sendIntArray
     _sendChar
       _Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      E      93       4       91.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5D       1       97.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     170       9        0.0%
DATA                 0      0     170      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Dec 04 13:39:00 2014

                      _i 005A                       l86 6C12      ___wmul@multiplicand 0003  
                    l101 72CE                      l107 79E0                      l143 6CF4  
                    l171 6D70                      l175 6D82                      l177 6D8C  
                    l178 6D8E                      u614 74D8                      u615 74D2  
                    u560 6BFC                      u625 75F0                      u626 75F6  
                    u635 76A0                      u627 7604                      u636 76A6  
                    u645 7760                      u637 76B4                      u646 7766  
                    u574 7296                      u655 7810                      u647 7774  
                    u575 7290                      u656 7816                      u657 7824  
                    u827 6C1E                      u755 7038                      u756 703E  
                    u757 704C                      u785 71F4                      u786 71FA  
                    u787 7208                      wreg 000FE8               _TXSTA1bits 000FAC  
           __CFG_LVP$OFF 000000                     l1132 6D72                     l1124 6D64  
                   l1204 757A                     l1300 6E22                     l1144 6D84  
                   l1312 6E9C                     l1170 72DE                     l1252 7992  
                   l1084 6C0C                     l1260 6C80                     l1332 701C  
                   l1094 6D08                     l1342 71A6                     l1334 705C  
                   l1248 7972                     l1192 74A6                     l1264 6C9C  
                   l1336 70BA                     l1098 6D1C                     l1186 7452  
                   l1346 7218                     l1354 7258                     l1196 74C2  
                   l1188 7456                     l1348 7226                     l1292 6DF4  
                   _LATC 000F8B                     _PIE1 000F9D                     _data 0060  
                   _main 6DA6                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        __end_of_BusyADC 6C00          __end_of_ReadADC 6BF4          __end_of_OpenADC 6CF8  
                  ?_main 0001                    _TRISC 000F94      ___lmul@multiplicand 0005  
        __end_of_fix_fft 79FE                    _input 005D                    main@i 00EB  
                  main@k 00F1               _ConvertADC 6BE6                    tablat 000FF5  
                  status 000FD8            main@adc_value 00E5           __CFG_PBADEN$ON 000000  
        __initialization 6C4C             __end_of_main 7272               _Open1USART 6D4E  
                 ??_main 004D            __activetblptr 000002             fix_fft@istep 0023  
       __end_of_Sinewave 7FFF                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _ANSELC 000F3A           __CFG_WDTEN$OFF 000000                   _RCSTA1 000FAB  
                 _SPBRG1 000FAF                ??_BusyADC 0001                   _TXREG1 000FAD  
              ??_ReadADC 0003                   _TXSTA1 000FAC                ??_OpenADC 0003  
                 ___lmul 6CF8                   ___wmul 6C26                   clear_0 6C52  
                 clear_1 6C5E         __end_of_sendChar 6C26                ??_fix_fft 0013  
           __mediumconst 79FE                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8              ?_ConvertADC 0001               __accesstop 0060  
__end_of__initialization 6C6C           __pcstackCOMRAM 0001              ?_Open1USART 0001  
          ?_sendIntArray 0002               __pbssBANK0 0060               __pbssBANK1 0100  
        __CFG_PLLCFG$OFF 000000            ??_Write1USART 0001                  ?___lmul 0001  
                ?___wmul 0001           ___lmul@product 0009      __size_of_ConvertADC 0004  
       Open1USART@config 0006           ??_sendIntArray 0006        __CFG_PRICLKEN$OFF 000000  
                _SPBRGH1 000FB0      __size_of_Open1USART 0058                  _BusyADC 6BF4  
                _ReadADC 6BEA                ?_sendChar 0001                  _OpenADC 6CAA  
                __Hparam 0000                  __Lparam 0000      __end_of_Write1USART 6C12  
        __size_of___lmul 0056          __size_of___wmul 0026                  __pcinit 6C4C  
                __ramtop 0600                  __ptext0 6DA6                  __ptext1 6C76  
                __ptext2 6C12                  __ptext3 6C00                  __ptext4 7272  
                __ptext5 6CF8                  __ptext6 6C26                  __ptext7 6BEA  
                __ptext8 6CAA                  __ptext9 6D4E                  _fix_fft 7272  
         OpenADC@config2 0001           OpenADC@config3 0002     end_of_initialization 6C6C  
          __Lmediumconst 79FE               ??_sendChar 0002                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE        sendIntArray@array 0002                _TRISCbits 000F94  
           ??_ConvertADC 0001              _Write1USART 6C00     __end_of_sendIntArray 6CAA  
         __end_of___lmul 6D4E           __end_of___wmul 6C4C             ??_Open1USART 0003  
     __end_of_ConvertADC 6BEA      start_initialization 6C4C       __end_of_Open1USART 6DA6  
       _imaginaryNumbers 0100                 ??___lmul 0009                 ??___wmul 0005  
            __pbssCOMRAM 005A            __pcstackBANK0 00E5                 ?_BusyADC 0001  
               ?_ReadADC 0001                 ?_OpenADC 0001        __size_of_sendChar 0014  
          __pmediumconst 79FE          Open1USART@spbrg 0001                 ?_fix_fft 000D  
        Write1USART@data 0001    __size_of_sendIntArray 0034           ___wmul@product 0005  
          OpenADC@config 0005                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
       sendIntArray@size 0004               _ADCON0bits 000FC2        ___wmul@multiplier 0001  
              main@place 00ED             _sendIntArray 6C76                fix_fft@fi 000F  
              fix_fft@fr 000D                fix_fft@nn 001F                fix_fft@qi 0029  
              fix_fft@mr 003D                fix_fft@ti 0035                fix_fft@qr 0027  
              fix_fft@wi 002D                fix_fft@tr 0033                fix_fft@wr 002B  
      ___lmul@multiplier 0001             ?_Write1USART 0001         __size_of_BusyADC 000C  
       __size_of_ReadADC 000A                 __Hrparam 0000         __size_of_OpenADC 004E  
               __Lrparam 0000                 _Sinewave 79FF         __size_of_fix_fft 078C  
               __ptext10 6BE6                 __ptext11 6BF4              _realNumbers 0065  
          __size_of_main 04CC                 _sendChar 6C12                 main@root 00E7  
               fix_fft@b 0037                 fix_fft@c 0049                 fix_fft@i 0039  
               fix_fft@j 0045                 fix_fft@k 001B                 fix_fft@l 0041  
               fix_fft@m 0011                 fix_fft@n 002F            _USART1_Status 005C  
            _OSCTUNEbits 000F9B               _INTCONbits 000FF2               _RCSTA1bits 000FAB  
             _OSCCONbits 000FD3        __CFG_FOSC$ECHPIO6 000000        sendChar@character 0001  
   __size_of_Write1USART 0012  
