

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Dec  4 17:31:30 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           	psect	mediumconst
    28  0079FE                     __pmediumconst:
    29                           	opt stack 0
    30  0079FE  00                 	db	0
    31  0079FF                     _Sinewave:
    32                           	opt stack 0
    33  0079FF  0000               	dw	0
    34  007A01  00C9               	dw	201
    35  007A03  0192               	dw	402
    36  007A05  025B               	dw	603
    37  007A07  0324               	dw	804
    38  007A09  03ED               	dw	1005
    39  007A0B  04B6               	dw	1206
    40  007A0D  057E               	dw	1406
    41  007A0F  0647               	dw	1607
    42  007A11  0710               	dw	1808
    43  007A13  07D9               	dw	2009
    44  007A15  08A1               	dw	2209
    45  007A17  096A               	dw	2410
    46  007A19  0A32               	dw	2610
    47  007A1B  0AFB               	dw	2811
    48  007A1D  0BC3               	dw	3011
    49  007A1F  0C8B               	dw	3211
    50  007A21  0D53               	dw	3411
    51  007A23  0E1B               	dw	3611
    52  007A25  0EE3               	dw	3811
    53  007A27  0FAB               	dw	4011
    54  007A29  1072               	dw	4210
    55  007A2B  1139               	dw	4409
    56  007A2D  1200               	dw	4608
    57  007A2F  12C7               	dw	4807
    58  007A31  138E               	dw	5006
    59  007A33  1455               	dw	5205
    60  007A35  151B               	dw	5403
    61  007A37  15E1               	dw	5601
    62  007A39  16A7               	dw	5799
    63  007A3B  176D               	dw	5997
    64  007A3D  1833               	dw	6195
    65  007A3F  18F8               	dw	6392
    66  007A41  19BD               	dw	6589
    67  007A43  1A82               	dw	6786
    68  007A45  1B46               	dw	6982
    69  007A47  1C0B               	dw	7179
    70  007A49  1CCF               	dw	7375
    71  007A4B  1D93               	dw	7571
    72  007A4D  1E56               	dw	7766
    73  007A4F  1F19               	dw	7961
    74  007A51  1FDC               	dw	8156
    75  007A53  209F               	dw	8351
    76  007A55  2161               	dw	8545
    77  007A57  2223               	dw	8739
    78  007A59  22E4               	dw	8932
    79  007A5B  23A6               	dw	9126
    80  007A5D  2467               	dw	9319
    81  007A5F  2527               	dw	9511
    82  007A61  25E7               	dw	9703
    83  007A63  26A7               	dw	9895
    84  007A65  2767               	dw	10087
    85  007A67  2826               	dw	10278
    86  007A69  28E5               	dw	10469
    87  007A6B  29A3               	dw	10659
    88  007A6D  2A61               	dw	10849
    89  007A6F  2B1E               	dw	11038
    90  007A71  2BDB               	dw	11227
    91  007A73  2C98               	dw	11416
    92  007A75  2D54               	dw	11604
    93  007A77  2E10               	dw	11792
    94  007A79  2ECC               	dw	11980
    95  007A7B  2F86               	dw	12166
    96  007A7D  3041               	dw	12353
    97  007A7F  30FB               	dw	12539
    98  007A81  31B4               	dw	12724
    99  007A83  326D               	dw	12909
   100  007A85  3326               	dw	13094
   101  007A87  33DE               	dw	13278
   102  007A89  3496               	dw	13462
   103  007A8B  354D               	dw	13645
   104  007A8D  3603               	dw	13827
   105  007A8F  36B9               	dw	14009
   106  007A91  376F               	dw	14191
   107  007A93  3824               	dw	14372
   108  007A95  38D8               	dw	14552
   109  007A97  398C               	dw	14732
   110  007A99  3A3F               	dw	14911
   111  007A9B  3AF2               	dw	15090
   112  007A9D  3BA4               	dw	15268
   113  007A9F  3C56               	dw	15446
   114  007AA1  3D07               	dw	15623
   115  007AA3  3DB7               	dw	15799
   116  007AA5  3E67               	dw	15975
   117  007AA7  3F16               	dw	16150
   118  007AA9  3FC5               	dw	16325
   119  007AAB  4073               	dw	16499
   120  007AAD  4120               	dw	16672
   121  007AAF  41CD               	dw	16845
   122  007AB1  4279               	dw	17017
   123  007AB3  4325               	dw	17189
   124  007AB5  43D0               	dw	17360
   125  007AB7  447A               	dw	17530
   126  007AB9  4523               	dw	17699
   127  007ABB  45CC               	dw	17868
   128  007ABD  4674               	dw	18036
   129  007ABF  471C               	dw	18204
   130  007AC1  47C3               	dw	18371
   131  007AC3  4869               	dw	18537
   132  007AC5  490E               	dw	18702
   133  007AC7  49B3               	dw	18867
   134  007AC9  4A57               	dw	19031
   135  007ACB  4AFA               	dw	19194
   136  007ACD  4B9D               	dw	19357
   137  007ACF  4C3F               	dw	19519
   138  007AD1  4CE0               	dw	19680
   139  007AD3  4D80               	dw	19840
   140  007AD5  4E20               	dw	20000
   141  007AD7  4EBF               	dw	20159
   142  007AD9  4F5D               	dw	20317
   143  007ADB  4FFA               	dw	20474
   144  007ADD  5097               	dw	20631
   145  007ADF  5133               	dw	20787
   146  007AE1  51CE               	dw	20942
   147  007AE3  5268               	dw	21096
   148  007AE5  5301               	dw	21249
   149  007AE7  539A               	dw	21402
   150  007AE9  5432               	dw	21554
   151  007AEB  54C9               	dw	21705
   152  007AED  555F               	dw	21855
   153  007AEF  55F4               	dw	22004
   154  007AF1  5689               	dw	22153
   155  007AF3  571D               	dw	22301
   156  007AF5  57B0               	dw	22448
   157  007AF7  5842               	dw	22594
   158  007AF9  58D3               	dw	22739
   159  007AFB  5963               	dw	22883
   160  007AFD  59F3               	dw	23027
   161  007AFF  5A81               	dw	23169
   162  007B01  5B0F               	dw	23311
   163  007B03  5B9C               	dw	23452
   164  007B05  5C28               	dw	23592
   165  007B07  5CB3               	dw	23731
   166  007B09  5D3D               	dw	23869
   167  007B0B  5DC6               	dw	24006
   168  007B0D  5E4F               	dw	24143
   169  007B0F  5ED6               	dw	24278
   170  007B11  5F5D               	dw	24413
   171  007B13  5FE2               	dw	24546
   172  007B15  6067               	dw	24679
   173  007B17  60EB               	dw	24811
   174  007B19  616E               	dw	24942
   175  007B1B  61F0               	dw	25072
   176  007B1D  6271               	dw	25201
   177  007B1F  62F1               	dw	25329
   178  007B21  6370               	dw	25456
   179  007B23  63EE               	dw	25582
   180  007B25  646B               	dw	25707
   181  007B27  64E7               	dw	25831
   182  007B29  6562               	dw	25954
   183  007B2B  65DD               	dw	26077
   184  007B2D  6656               	dw	26198
   185  007B2F  66CE               	dw	26318
   186  007B31  6745               	dw	26437
   187  007B33  67BC               	dw	26556
   188  007B35  6831               	dw	26673
   189  007B37  68A5               	dw	26789
   190  007B39  6919               	dw	26905
   191  007B3B  698B               	dw	27019
   192  007B3D  69FC               	dw	27132
   193  007B3F  6A6C               	dw	27244
   194  007B41  6ADB               	dw	27355
   195  007B43  6B4A               	dw	27466
   196  007B45  6BB7               	dw	27575
   197  007B47  6C23               	dw	27683
   198  007B49  6C8E               	dw	27790
   199  007B4B  6CF8               	dw	27896
   200  007B4D  6D61               	dw	28001
   201  007B4F  6DC9               	dw	28105
   202  007B51  6E30               	dw	28208
   203  007B53  6E95               	dw	28309
   204  007B55  6EFA               	dw	28410
   205  007B57  6F5E               	dw	28510
   206  007B59  6FC0               	dw	28608
   207  007B5B  7022               	dw	28706
   208  007B5D  7082               	dw	28802
   209  007B5F  70E1               	dw	28897
   210  007B61  7140               	dw	28992
   211  007B63  719D               	dw	29085
   212  007B65  71F9               	dw	29177
   213  007B67  7254               	dw	29268
   214  007B69  72AE               	dw	29358
   215  007B6B  7306               	dw	29446
   216  007B6D  735E               	dw	29534
   217  007B6F  73B5               	dw	29621
   218  007B71  740A               	dw	29706
   219  007B73  745E               	dw	29790
   220  007B75  74B1               	dw	29873
   221  007B77  7503               	dw	29955
   222  007B79  7554               	dw	30036
   223  007B7B  75A4               	dw	30116
   224  007B7D  75F3               	dw	30195
   225  007B7F  7640               	dw	30272
   226  007B81  768D               	dw	30349
   227  007B83  76D8               	dw	30424
   228  007B85  7722               	dw	30498
   229  007B87  776B               	dw	30571
   230  007B89  77B3               	dw	30643
   231  007B8B  77F9               	dw	30713
   232  007B8D  783F               	dw	30783
   233  007B8F  7883               	dw	30851
   234  007B91  78C6               	dw	30918
   235  007B93  7908               	dw	30984
   236  007B95  7949               	dw	31049
   237  007B97  7989               	dw	31113
   238  007B99  79C7               	dw	31175
   239  007B9B  7A04               	dw	31236
   240  007B9D  7A41               	dw	31297
   241  007B9F  7A7C               	dw	31356
   242  007BA1  7AB5               	dw	31413
   243  007BA3  7AEE               	dw	31470
   244  007BA5  7B25               	dw	31525
   245  007BA7  7B5C               	dw	31580
   246  007BA9  7B91               	dw	31633
   247  007BAB  7BC4               	dw	31684
   248  007BAD  7BF7               	dw	31735
   249  007BAF  7C29               	dw	31785
   250  007BB1  7C59               	dw	31833
   251  007BB3  7C88               	dw	31880
   252  007BB5  7CB6               	dw	31926
   253  007BB7  7CE2               	dw	31970
   254  007BB9  7D0E               	dw	32014
   255  007BBB  7D38               	dw	32056
   256  007BBD  7D61               	dw	32097
   257  007BBF  7D89               	dw	32137
   258  007BC1  7DB0               	dw	32176
   259  007BC3  7DD5               	dw	32213
   260  007BC5  7DF9               	dw	32249
   261  007BC7  7E1C               	dw	32284
   262  007BC9  7E3E               	dw	32318
   263  007BCB  7E5E               	dw	32350
   264  007BCD  7E7E               	dw	32382
   265  007BCF  7E9C               	dw	32412
   266  007BD1  7EB9               	dw	32441
   267  007BD3  7ED4               	dw	32468
   268  007BD5  7EEF               	dw	32495
   269  007BD7  7F08               	dw	32520
   270  007BD9  7F20               	dw	32544
   271  007BDB  7F37               	dw	32567
   272  007BDD  7F4C               	dw	32588
   273  007BDF  7F61               	dw	32609
   274  007BE1  7F74               	dw	32628
   275  007BE3  7F86               	dw	32646
   276  007BE5  7F96               	dw	32662
   277  007BE7  7FA6               	dw	32678
   278  007BE9  7FB4               	dw	32692
   279  007BEB  7FC1               	dw	32705
   280  007BED  7FCD               	dw	32717
   281  007BEF  7FD7               	dw	32727
   282  007BF1  7FE0               	dw	32736
   283  007BF3  7FE8               	dw	32744
   284  007BF5  7FEF               	dw	32751
   285  007BF7  7FF5               	dw	32757
   286  007BF9  7FF9               	dw	32761
   287  007BFB  7FFC               	dw	32764
   288  007BFD  7FFE               	dw	32766
   289  007BFF  7FFF               	dw	32767
   290  007C01  7FFE               	dw	32766
   291  007C03  7FFC               	dw	32764
   292  007C05  7FF9               	dw	32761
   293  007C07  7FF5               	dw	32757
   294  007C09  7FEF               	dw	32751
   295  007C0B  7FE8               	dw	32744
   296  007C0D  7FE0               	dw	32736
   297  007C0F  7FD7               	dw	32727
   298  007C11  7FCD               	dw	32717
   299  007C13  7FC1               	dw	32705
   300  007C15  7FB4               	dw	32692
   301  007C17  7FA6               	dw	32678
   302  007C19  7F96               	dw	32662
   303  007C1B  7F86               	dw	32646
   304  007C1D  7F74               	dw	32628
   305  007C1F  7F61               	dw	32609
   306  007C21  7F4C               	dw	32588
   307  007C23  7F37               	dw	32567
   308  007C25  7F20               	dw	32544
   309  007C27  7F08               	dw	32520
   310  007C29  7EEF               	dw	32495
   311  007C2B  7ED4               	dw	32468
   312  007C2D  7EB9               	dw	32441
   313  007C2F  7E9C               	dw	32412
   314  007C31  7E7E               	dw	32382
   315  007C33  7E5E               	dw	32350
   316  007C35  7E3E               	dw	32318
   317  007C37  7E1C               	dw	32284
   318  007C39  7DF9               	dw	32249
   319  007C3B  7DD5               	dw	32213
   320  007C3D  7DB0               	dw	32176
   321  007C3F  7D89               	dw	32137
   322  007C41  7D61               	dw	32097
   323  007C43  7D38               	dw	32056
   324  007C45  7D0E               	dw	32014
   325  007C47  7CE2               	dw	31970
   326  007C49  7CB6               	dw	31926
   327  007C4B  7C88               	dw	31880
   328  007C4D  7C59               	dw	31833
   329  007C4F  7C29               	dw	31785
   330  007C51  7BF7               	dw	31735
   331  007C53  7BC4               	dw	31684
   332  007C55  7B91               	dw	31633
   333  007C57  7B5C               	dw	31580
   334  007C59  7B25               	dw	31525
   335  007C5B  7AEE               	dw	31470
   336  007C5D  7AB5               	dw	31413
   337  007C5F  7A7C               	dw	31356
   338  007C61  7A41               	dw	31297
   339  007C63  7A04               	dw	31236
   340  007C65  79C7               	dw	31175
   341  007C67  7989               	dw	31113
   342  007C69  7949               	dw	31049
   343  007C6B  7908               	dw	30984
   344  007C6D  78C6               	dw	30918
   345  007C6F  7883               	dw	30851
   346  007C71  783F               	dw	30783
   347  007C73  77F9               	dw	30713
   348  007C75  77B3               	dw	30643
   349  007C77  776B               	dw	30571
   350  007C79  7722               	dw	30498
   351  007C7B  76D8               	dw	30424
   352  007C7D  768D               	dw	30349
   353  007C7F  7640               	dw	30272
   354  007C81  75F3               	dw	30195
   355  007C83  75A4               	dw	30116
   356  007C85  7554               	dw	30036
   357  007C87  7503               	dw	29955
   358  007C89  74B1               	dw	29873
   359  007C8B  745E               	dw	29790
   360  007C8D  740A               	dw	29706
   361  007C8F  73B5               	dw	29621
   362  007C91  735E               	dw	29534
   363  007C93  7306               	dw	29446
   364  007C95  72AE               	dw	29358
   365  007C97  7254               	dw	29268
   366  007C99  71F9               	dw	29177
   367  007C9B  719D               	dw	29085
   368  007C9D  7140               	dw	28992
   369  007C9F  70E1               	dw	28897
   370  007CA1  7082               	dw	28802
   371  007CA3  7022               	dw	28706
   372  007CA5  6FC0               	dw	28608
   373  007CA7  6F5E               	dw	28510
   374  007CA9  6EFA               	dw	28410
   375  007CAB  6E95               	dw	28309
   376  007CAD  6E30               	dw	28208
   377  007CAF  6DC9               	dw	28105
   378  007CB1  6D61               	dw	28001
   379  007CB3  6CF8               	dw	27896
   380  007CB5  6C8E               	dw	27790
   381  007CB7  6C23               	dw	27683
   382  007CB9  6BB7               	dw	27575
   383  007CBB  6B4A               	dw	27466
   384  007CBD  6ADB               	dw	27355
   385  007CBF  6A6C               	dw	27244
   386  007CC1  69FC               	dw	27132
   387  007CC3  698B               	dw	27019
   388  007CC5  6919               	dw	26905
   389  007CC7  68A5               	dw	26789
   390  007CC9  6831               	dw	26673
   391  007CCB  67BC               	dw	26556
   392  007CCD  6745               	dw	26437
   393  007CCF  66CE               	dw	26318
   394  007CD1  6656               	dw	26198
   395  007CD3  65DD               	dw	26077
   396  007CD5  6562               	dw	25954
   397  007CD7  64E7               	dw	25831
   398  007CD9  646B               	dw	25707
   399  007CDB  63EE               	dw	25582
   400  007CDD  6370               	dw	25456
   401  007CDF  62F1               	dw	25329
   402  007CE1  6271               	dw	25201
   403  007CE3  61F0               	dw	25072
   404  007CE5  616E               	dw	24942
   405  007CE7  60EB               	dw	24811
   406  007CE9  6067               	dw	24679
   407  007CEB  5FE2               	dw	24546
   408  007CED  5F5D               	dw	24413
   409  007CEF  5ED6               	dw	24278
   410  007CF1  5E4F               	dw	24143
   411  007CF3  5DC6               	dw	24006
   412  007CF5  5D3D               	dw	23869
   413  007CF7  5CB3               	dw	23731
   414  007CF9  5C28               	dw	23592
   415  007CFB  5B9C               	dw	23452
   416  007CFD  5B0F               	dw	23311
   417  007CFF  5A81               	dw	23169
   418  007D01  59F3               	dw	23027
   419  007D03  5963               	dw	22883
   420  007D05  58D3               	dw	22739
   421  007D07  5842               	dw	22594
   422  007D09  57B0               	dw	22448
   423  007D0B  571D               	dw	22301
   424  007D0D  5689               	dw	22153
   425  007D0F  55F4               	dw	22004
   426  007D11  555F               	dw	21855
   427  007D13  54C9               	dw	21705
   428  007D15  5432               	dw	21554
   429  007D17  539A               	dw	21402
   430  007D19  5301               	dw	21249
   431  007D1B  5268               	dw	21096
   432  007D1D  51CE               	dw	20942
   433  007D1F  5133               	dw	20787
   434  007D21  5097               	dw	20631
   435  007D23  4FFA               	dw	20474
   436  007D25  4F5D               	dw	20317
   437  007D27  4EBF               	dw	20159
   438  007D29  4E20               	dw	20000
   439  007D2B  4D80               	dw	19840
   440  007D2D  4CE0               	dw	19680
   441  007D2F  4C3F               	dw	19519
   442  007D31  4B9D               	dw	19357
   443  007D33  4AFA               	dw	19194
   444  007D35  4A57               	dw	19031
   445  007D37  49B3               	dw	18867
   446  007D39  490E               	dw	18702
   447  007D3B  4869               	dw	18537
   448  007D3D  47C3               	dw	18371
   449  007D3F  471C               	dw	18204
   450  007D41  4674               	dw	18036
   451  007D43  45CC               	dw	17868
   452  007D45  4523               	dw	17699
   453  007D47  447A               	dw	17530
   454  007D49  43D0               	dw	17360
   455  007D4B  4325               	dw	17189
   456  007D4D  4279               	dw	17017
   457  007D4F  41CD               	dw	16845
   458  007D51  4120               	dw	16672
   459  007D53  4073               	dw	16499
   460  007D55  3FC5               	dw	16325
   461  007D57  3F16               	dw	16150
   462  007D59  3E67               	dw	15975
   463  007D5B  3DB7               	dw	15799
   464  007D5D  3D07               	dw	15623
   465  007D5F  3C56               	dw	15446
   466  007D61  3BA4               	dw	15268
   467  007D63  3AF2               	dw	15090
   468  007D65  3A3F               	dw	14911
   469  007D67  398C               	dw	14732
   470  007D69  38D8               	dw	14552
   471  007D6B  3824               	dw	14372
   472  007D6D  376F               	dw	14191
   473  007D6F  36B9               	dw	14009
   474  007D71  3603               	dw	13827
   475  007D73  354D               	dw	13645
   476  007D75  3496               	dw	13462
   477  007D77  33DE               	dw	13278
   478  007D79  3326               	dw	13094
   479  007D7B  326D               	dw	12909
   480  007D7D  31B4               	dw	12724
   481  007D7F  30FB               	dw	12539
   482  007D81  3041               	dw	12353
   483  007D83  2F86               	dw	12166
   484  007D85  2ECC               	dw	11980
   485  007D87  2E10               	dw	11792
   486  007D89  2D54               	dw	11604
   487  007D8B  2C98               	dw	11416
   488  007D8D  2BDB               	dw	11227
   489  007D8F  2B1E               	dw	11038
   490  007D91  2A61               	dw	10849
   491  007D93  29A3               	dw	10659
   492  007D95  28E5               	dw	10469
   493  007D97  2826               	dw	10278
   494  007D99  2767               	dw	10087
   495  007D9B  26A7               	dw	9895
   496  007D9D  25E7               	dw	9703
   497  007D9F  2527               	dw	9511
   498  007DA1  2467               	dw	9319
   499  007DA3  23A6               	dw	9126
   500  007DA5  22E4               	dw	8932
   501  007DA7  2223               	dw	8739
   502  007DA9  2161               	dw	8545
   503  007DAB  209F               	dw	8351
   504  007DAD  1FDC               	dw	8156
   505  007DAF  1F19               	dw	7961
   506  007DB1  1E56               	dw	7766
   507  007DB3  1D93               	dw	7571
   508  007DB5  1CCF               	dw	7375
   509  007DB7  1C0B               	dw	7179
   510  007DB9  1B46               	dw	6982
   511  007DBB  1A82               	dw	6786
   512  007DBD  19BD               	dw	6589
   513  007DBF  18F8               	dw	6392
   514  007DC1  1833               	dw	6195
   515  007DC3  176D               	dw	5997
   516  007DC5  16A7               	dw	5799
   517  007DC7  15E1               	dw	5601
   518  007DC9  151B               	dw	5403
   519  007DCB  1455               	dw	5205
   520  007DCD  138E               	dw	5006
   521  007DCF  12C7               	dw	4807
   522  007DD1  1200               	dw	4608
   523  007DD3  1139               	dw	4409
   524  007DD5  1072               	dw	4210
   525  007DD7  0FAB               	dw	4011
   526  007DD9  0EE3               	dw	3811
   527  007DDB  0E1B               	dw	3611
   528  007DDD  0D53               	dw	3411
   529  007DDF  0C8B               	dw	3211
   530  007DE1  0BC3               	dw	3011
   531  007DE3  0AFB               	dw	2811
   532  007DE5  0A32               	dw	2610
   533  007DE7  096A               	dw	2410
   534  007DE9  08A1               	dw	2209
   535  007DEB  07D9               	dw	2009
   536  007DED  0710               	dw	1808
   537  007DEF  0647               	dw	1607
   538  007DF1  057E               	dw	1406
   539  007DF3  04B6               	dw	1206
   540  007DF5  03ED               	dw	1005
   541  007DF7  0324               	dw	804
   542  007DF9  025B               	dw	603
   543  007DFB  0192               	dw	402
   544  007DFD  00C9               	dw	201
   545  007DFF  0000               	dw	0
   546  007E01  FF37               	dw	65335
   547  007E03  FE6E               	dw	65134
   548  007E05  FDA5               	dw	64933
   549  007E07  FCDC               	dw	64732
   550  007E09  FC13               	dw	64531
   551  007E0B  FB4A               	dw	64330
   552  007E0D  FA82               	dw	64130
   553  007E0F  F9B9               	dw	63929
   554  007E11  F8F0               	dw	63728
   555  007E13  F827               	dw	63527
   556  007E15  F75F               	dw	63327
   557  007E17  F696               	dw	63126
   558  007E19  F5CE               	dw	62926
   559  007E1B  F505               	dw	62725
   560  007E1D  F43D               	dw	62525
   561  007E1F  F375               	dw	62325
   562  007E21  F2AD               	dw	62125
   563  007E23  F1E5               	dw	61925
   564  007E25  F11D               	dw	61725
   565  007E27  F055               	dw	61525
   566  007E29  EF8E               	dw	61326
   567  007E2B  EEC7               	dw	61127
   568  007E2D  EE00               	dw	60928
   569  007E2F  ED39               	dw	60729
   570  007E31  EC72               	dw	60530
   571  007E33  EBAB               	dw	60331
   572  007E35  EAE5               	dw	60133
   573  007E37  EA1F               	dw	59935
   574  007E39  E959               	dw	59737
   575  007E3B  E893               	dw	59539
   576  007E3D  E7CD               	dw	59341
   577  007E3F  E708               	dw	59144
   578  007E41  E643               	dw	58947
   579  007E43  E57E               	dw	58750
   580  007E45  E4BA               	dw	58554
   581  007E47  E3F5               	dw	58357
   582  007E49  E331               	dw	58161
   583  007E4B  E26D               	dw	57965
   584  007E4D  E1AA               	dw	57770
   585  007E4F  E0E7               	dw	57575
   586  007E51  E024               	dw	57380
   587  007E53  DF61               	dw	57185
   588  007E55  DE9F               	dw	56991
   589  007E57  DDDD               	dw	56797
   590  007E59  DD1C               	dw	56604
   591  007E5B  DC5A               	dw	56410
   592  007E5D  DB99               	dw	56217
   593  007E5F  DAD9               	dw	56025
   594  007E61  DA19               	dw	55833
   595  007E63  D959               	dw	55641
   596  007E65  D899               	dw	55449
   597  007E67  D7DA               	dw	55258
   598  007E69  D71B               	dw	55067
   599  007E6B  D65D               	dw	54877
   600  007E6D  D59F               	dw	54687
   601  007E6F  D4E2               	dw	54498
   602  007E71  D425               	dw	54309
   603  007E73  D368               	dw	54120
   604  007E75  D2AC               	dw	53932
   605  007E77  D1F0               	dw	53744
   606  007E79  D134               	dw	53556
   607  007E7B  D07A               	dw	53370
   608  007E7D  CFBF               	dw	53183
   609  007E7F  CF05               	dw	52997
   610  007E81  CE4C               	dw	52812
   611  007E83  CD93               	dw	52627
   612  007E85  CCDA               	dw	52442
   613  007E87  CC22               	dw	52258
   614  007E89  CB6A               	dw	52074
   615  007E8B  CAB3               	dw	51891
   616  007E8D  C9FD               	dw	51709
   617  007E8F  C947               	dw	51527
   618  007E91  C891               	dw	51345
   619  007E93  C7DC               	dw	51164
   620  007E95  C728               	dw	50984
   621  007E97  C674               	dw	50804
   622  007E99  C5C1               	dw	50625
   623  007E9B  C50E               	dw	50446
   624  007E9D  C45C               	dw	50268
   625  007E9F  C3AA               	dw	50090
   626  007EA1  C2F9               	dw	49913
   627  007EA3  C249               	dw	49737
   628  007EA5  C199               	dw	49561
   629  007EA7  C0EA               	dw	49386
   630  007EA9  C03B               	dw	49211
   631  007EAB  BF8D               	dw	49037
   632  007EAD  BEE0               	dw	48864
   633  007EAF  BE33               	dw	48691
   634  007EB1  BD87               	dw	48519
   635  007EB3  BCDB               	dw	48347
   636  007EB5  BC30               	dw	48176
   637  007EB7  BB86               	dw	48006
   638  007EB9  BADD               	dw	47837
   639  007EBB  BA34               	dw	47668
   640  007EBD  B98C               	dw	47500
   641  007EBF  B8E4               	dw	47332
   642  007EC1  B83D               	dw	47165
   643  007EC3  B797               	dw	46999
   644  007EC5  B6F2               	dw	46834
   645  007EC7  B64D               	dw	46669
   646  007EC9  B5A9               	dw	46505
   647  007ECB  B506               	dw	46342
   648  007ECD  B463               	dw	46179
   649  007ECF  B3C1               	dw	46017
   650  007ED1  B320               	dw	45856
   651  007ED3  B280               	dw	45696
   652  007ED5  B1E0               	dw	45536
   653  007ED7  B141               	dw	45377
   654  007ED9  B0A3               	dw	45219
   655  007EDB  B006               	dw	45062
   656  007EDD  AF69               	dw	44905
   657  007EDF  AECD               	dw	44749
   658  007EE1  AE32               	dw	44594
   659  007EE3  AD98               	dw	44440
   660  007EE5  ACFF               	dw	44287
   661  007EE7  AC66               	dw	44134
   662  007EE9  ABCE               	dw	43982
   663  007EEB  AB37               	dw	43831
   664  007EED  AAA1               	dw	43681
   665  007EEF  AA0C               	dw	43532
   666  007EF1  A977               	dw	43383
   667  007EF3  A8E3               	dw	43235
   668  007EF5  A850               	dw	43088
   669  007EF7  A7BE               	dw	42942
   670  007EF9  A72D               	dw	42797
   671  007EFB  A69D               	dw	42653
   672  007EFD  A60D               	dw	42509
   673  007EFF  A57F               	dw	42367
   674  007F01  A4F1               	dw	42225
   675  007F03  A464               	dw	42084
   676  007F05  A3D8               	dw	41944
   677  007F07  A34D               	dw	41805
   678  007F09  A2C3               	dw	41667
   679  007F0B  A23A               	dw	41530
   680  007F0D  A1B1               	dw	41393
   681  007F0F  A12A               	dw	41258
   682  007F11  A0A3               	dw	41123
   683  007F13  A01E               	dw	40990
   684  007F15  9F99               	dw	40857
   685  007F17  9F15               	dw	40725
   686  007F19  9E92               	dw	40594
   687  007F1B  9E10               	dw	40464
   688  007F1D  9D8F               	dw	40335
   689  007F1F  9D0F               	dw	40207
   690  007F21  9C90               	dw	40080
   691  007F23  9C12               	dw	39954
   692  007F25  9B95               	dw	39829
   693  007F27  9B19               	dw	39705
   694  007F29  9A9E               	dw	39582
   695  007F2B  9A23               	dw	39459
   696  007F2D  99AA               	dw	39338
   697  007F2F  9932               	dw	39218
   698  007F31  98BB               	dw	39099
   699  007F33  9844               	dw	38980
   700  007F35  97CF               	dw	38863
   701  007F37  975B               	dw	38747
   702  007F39  96E7               	dw	38631
   703  007F3B  9675               	dw	38517
   704  007F3D  9604               	dw	38404
   705  007F3F  9594               	dw	38292
   706  007F41  9525               	dw	38181
   707  007F43  94B6               	dw	38070
   708  007F45  9449               	dw	37961
   709  007F47  93DD               	dw	37853
   710  007F49  9372               	dw	37746
   711  007F4B  9308               	dw	37640
   712  007F4D  929F               	dw	37535
   713  007F4F  9237               	dw	37431
   714  007F51  91D0               	dw	37328
   715  007F53  916B               	dw	37227
   716  007F55  9106               	dw	37126
   717  007F57  90A2               	dw	37026
   718  007F59  9040               	dw	36928
   719  007F5B  8FDE               	dw	36830
   720  007F5D  8F7E               	dw	36734
   721  007F5F  8F1F               	dw	36639
   722  007F61  8EC0               	dw	36544
   723  007F63  8E63               	dw	36451
   724  007F65  8E07               	dw	36359
   725  007F67  8DAC               	dw	36268
   726  007F69  8D52               	dw	36178
   727  007F6B  8CFA               	dw	36090
   728  007F6D  8CA2               	dw	36002
   729  007F6F  8C4B               	dw	35915
   730  007F71  8BF6               	dw	35830
   731  007F73  8BA2               	dw	35746
   732  007F75  8B4F               	dw	35663
   733  007F77  8AFD               	dw	35581
   734  007F79  8AAC               	dw	35500
   735  007F7B  8A5C               	dw	35420
   736  007F7D  8A0D               	dw	35341
   737  007F7F  89C0               	dw	35264
   738  007F81  8973               	dw	35187
   739  007F83  8928               	dw	35112
   740  007F85  88DE               	dw	35038
   741  007F87  8895               	dw	34965
   742  007F89  884D               	dw	34893
   743  007F8B  8807               	dw	34823
   744  007F8D  87C1               	dw	34753
   745  007F8F  877D               	dw	34685
   746  007F91  873A               	dw	34618
   747  007F93  86F8               	dw	34552
   748  007F95  86B7               	dw	34487
   749  007F97  8677               	dw	34423
   750  007F99  8639               	dw	34361
   751  007F9B  85FC               	dw	34300
   752  007F9D  85BF               	dw	34239
   753  007F9F  8584               	dw	34180
   754  007FA1  854B               	dw	34123
   755  007FA3  8512               	dw	34066
   756  007FA5  84DB               	dw	34011
   757  007FA7  84A4               	dw	33956
   758  007FA9  846F               	dw	33903
   759  007FAB  843C               	dw	33852
   760  007FAD  8409               	dw	33801
   761  007FAF  83D7               	dw	33751
   762  007FB1  83A7               	dw	33703
   763  007FB3  8378               	dw	33656
   764  007FB5  834A               	dw	33610
   765  007FB7  831E               	dw	33566
   766  007FB9  82F2               	dw	33522
   767  007FBB  82C8               	dw	33480
   768  007FBD  829F               	dw	33439
   769  007FBF  8277               	dw	33399
   770  007FC1  8250               	dw	33360
   771  007FC3  822B               	dw	33323
   772  007FC5  8207               	dw	33287
   773  007FC7  81E4               	dw	33252
   774  007FC9  81C2               	dw	33218
   775  007FCB  81A2               	dw	33186
   776  007FCD  8182               	dw	33154
   777  007FCF  8164               	dw	33124
   778  007FD1  8147               	dw	33095
   779  007FD3  812C               	dw	33068
   780  007FD5  8111               	dw	33041
   781  007FD7  80F8               	dw	33016
   782  007FD9  80E0               	dw	32992
   783  007FDB  80C9               	dw	32969
   784  007FDD  80B4               	dw	32948
   785  007FDF  809F               	dw	32927
   786  007FE1  808C               	dw	32908
   787  007FE3  807A               	dw	32890
   788  007FE5  806A               	dw	32874
   789  007FE7  805A               	dw	32858
   790  007FE9  804C               	dw	32844
   791  007FEB  803F               	dw	32831
   792  007FED  8033               	dw	32819
   793  007FEF  8029               	dw	32809
   794  007FF1  8020               	dw	32800
   795  007FF3  8018               	dw	32792
   796  007FF5  8011               	dw	32785
   797  007FF7  800B               	dw	32779
   798  007FF9  8007               	dw	32775
   799  007FFB  8004               	dw	32772
   800  007FFD  8002               	dw	32770
   801  007FFF                     __end_of_Sinewave:
   802                           	opt stack 0
   803  0000                     _ADCON0	set	4034
   804  0000                     _ADCON0bits	set	4034
   805  0000                     _ADCON1	set	4033
   806  0000                     _ADCON2	set	4032
   807  0000                     _ADRESH	set	4036
   808  0000                     _ADRESL	set	4035
   809  0000                     _ANSELAbits	set	3896
   810  0000                     _ANSELBbits	set	3897
   811  0000                     _ANSELC	set	3898
   812  0000                     _INTCONbits	set	4082
   813  0000                     _LATC	set	3979
   814  0000                     _OSCCONbits	set	4051
   815  0000                     _OSCTUNEbits	set	3995
   816  0000                     _PIE1	set	3997
   817  0000                     _PIE1bits	set	3997
   818  0000                     _PIR1bits	set	3998
   819  0000                     _RCSTA1	set	4011
   820  0000                     _RCSTA1bits	set	4011
   821  0000                     _SPBRG1	set	4015
   822  0000                     _SPBRGH1	set	4016
   823  0000                     _TRISAbits	set	3986
   824  0000                     _TRISBbits	set	3987
   825  0000                     _TRISC	set	3988
   826  0000                     _TRISCbits	set	3988
   827  0000                     _TXREG1	set	4013
   828  0000                     _TXSTA1	set	4012
   829  0000                     _TXSTA1bits	set	4012
   830  007FFF  00                 	db	0	; dummy byte at the end
   831  0000                     
   832                           	psect	nvBANK0
   833  0000F3                     __pnvBANK0:
   834                           	opt stack 0
   835  0000F3                     _baud_rate:
   836                           	opt stack 0
   837  0000F3                     	ds	4
   838                           
   839                           ; #config settings
   840  0000                     
   841                           	psect	cinit
   842  006C14                     __pcinit:
   843                           	opt stack 0
   844  006C14                     start_initialization:
   845                           	opt stack 0
   846  006C14                     __initialization:
   847                           	opt stack 0
   848                           
   849                           ; Clear objects allocated to BANK1 (128 bytes)
   850  006C14  EE01  F000         	lfsr	0,__pbssBANK1
   851  006C18  0E80               	movlw	128
   852  006C1A                     clear_0:
   853  006C1A  6AEE               	clrf	postinc0,c
   854  006C1C  06E8               	decf	wreg,f,c
   855  006C1E  E1FD               	bnz	clear_0
   856                           
   857                           ; Clear objects allocated to BANK0 (133 bytes)
   858  006C20  EE00  F060         	lfsr	0,__pbssBANK0
   859  006C24  0E85               	movlw	133
   860  006C26                     clear_1:
   861  006C26  6AEE               	clrf	postinc0,c
   862  006C28  06E8               	decf	wreg,f,c
   863  006C2A  E1FD               	bnz	clear_1
   864                           
   865                           ; Clear objects allocated to COMRAM (4 bytes)
   866  006C2C  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   867  006C2E  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   868  006C30  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   869  006C32  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   870  006C34                     end_of_initialization:
   871                           	opt stack 0
   872  006C34                     __end_of__initialization:
   873                           	opt stack 0
   874  006C34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   875  006C36  6EF8               	movwf	tblptru,c
   876  006C38  0100               	movlb	0
   877  006C3A  EFB7  F036         	goto	_main	;jump to C main() function
   878                           tblptru	equ	0xFF8
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           
   882                           	psect	bssCOMRAM
   883  00005A                     __pbssCOMRAM:
   884                           	opt stack 0
   885  00005A                     _i:
   886                           	opt stack 0
   887  00005A                     	ds	2
   888  00005C                     _USART1_Status:
   889                           	opt stack 0
   890  00005C                     	ds	1
   891  00005D                     _input:
   892                           	opt stack 0
   893  00005D                     	ds	1
   894                           tblptru	equ	0xFF8
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           
   898                           	psect	bssBANK0
   899  000060                     __pbssBANK0:
   900                           	opt stack 0
   901  000060                     _data:
   902                           	opt stack 0
   903  000060                     	ds	5
   904  000065                     _realNumbers:
   905                           	opt stack 0
   906  000065                     	ds	128
   907                           tblptru	equ	0xFF8
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           
   911                           	psect	bssBANK1
   912  000100                     __pbssBANK1:
   913                           	opt stack 0
   914  000100                     _imaginaryNumbers:
   915                           	opt stack 0
   916  000100                     	ds	128
   917                           tblptru	equ	0xFF8
   918                           postinc0	equ	0xFEE
   919                           wreg	equ	0xFE8
   920                           
   921                           	psect	cstackBANK0
   922  0000E5                     __pcstackBANK0:
   923                           	opt stack 0
   924  0000E5                     main@adc_value:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x0
   928  0000E5                     	ds	2
   929  0000E7                     main@root:
   930                           	opt stack 0
   931                           
   932                           ; 4 bytes @ 0x2
   933  0000E7                     	ds	4
   934  0000EB                     main@i:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0x6
   938  0000EB                     	ds	2
   939  0000ED                     main@place:
   940                           	opt stack 0
   941                           
   942                           ; 4 bytes @ 0x8
   943  0000ED                     	ds	4
   944  0000F1                     main@k:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0xC
   948  0000F1                     	ds	2
   949                           tblptru	equ	0xFF8
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           
   953                           	psect	cstackCOMRAM
   954  000001                     __pcstackCOMRAM:
   955                           	opt stack 0
   956  000001                     ?___wmul:
   957                           	opt stack 0
   958  000001                     ?___lmul:
   959                           	opt stack 0
   960  000001                     OpenADC@config2:
   961                           	opt stack 0
   962  000001                     Write1USART@data:
   963                           	opt stack 0
   964  000001                     Open1USART@spbrg:
   965                           	opt stack 0
   966  000001                     ___wmul@multiplier:
   967                           	opt stack 0
   968  000001                     ___lmul@multiplier:
   969                           	opt stack 0
   970                           
   971                           ; 4 bytes @ 0x0
   972  000001                     	ds	1
   973  000002                     sendChar@character:
   974                           	opt stack 0
   975  000002                     OpenADC@config3:
   976                           	opt stack 0
   977                           
   978                           ; 1 bytes @ 0x1
   979  000002                     	ds	1
   980  000003                     ??_OpenADC:
   981  000003                     ??_Open1USART:
   982  000003                     sendIntArray@array:
   983                           	opt stack 0
   984  000003                     ___wmul@multiplicand:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x2
   988  000003                     	ds	2
   989  000005                     OpenADC@config:
   990                           	opt stack 0
   991  000005                     sendIntArray@size:
   992                           	opt stack 0
   993  000005                     ___wmul@product:
   994                           	opt stack 0
   995  000005                     ___lmul@multiplicand:
   996                           	opt stack 0
   997                           
   998                           ; 4 bytes @ 0x4
   999  000005                     	ds	1
  1000  000006                     Open1USART@config:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x5
  1004  000006                     	ds	1
  1005  000007                     
  1006                           ; 0 bytes @ 0x6
  1007  000007                     	ds	2
  1008  000009                     ___lmul@product:
  1009                           	opt stack 0
  1010                           
  1011                           ; 4 bytes @ 0x8
  1012  000009                     	ds	4
  1013  00000D                     fix_fft@fr:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0xC
  1017  00000D                     	ds	2
  1018  00000F                     fix_fft@fi:
  1019                           	opt stack 0
  1020                           
  1021                           ; 2 bytes @ 0xE
  1022  00000F                     	ds	2
  1023  000011                     fix_fft@m:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x10
  1027  000011                     	ds	2
  1028  000013                     ??_fix_fft:
  1029                           
  1030                           ; 0 bytes @ 0x12
  1031  000013                     	ds	8
  1032  00001B                     fix_fft@k:
  1033                           	opt stack 0
  1034                           
  1035                           ; 4 bytes @ 0x1A
  1036  00001B                     	ds	4
  1037  00001F                     fix_fft@nn:
  1038                           	opt stack 0
  1039                           
  1040                           ; 4 bytes @ 0x1E
  1041  00001F                     	ds	4
  1042  000023                     fix_fft@istep:
  1043                           	opt stack 0
  1044                           
  1045                           ; 4 bytes @ 0x22
  1046  000023                     	ds	4
  1047  000027                     fix_fft@qr:
  1048                           	opt stack 0
  1049                           
  1050                           ; 2 bytes @ 0x26
  1051  000027                     	ds	2
  1052  000029                     fix_fft@qi:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x28
  1056  000029                     	ds	2
  1057  00002B                     fix_fft@wr:
  1058                           	opt stack 0
  1059                           
  1060                           ; 2 bytes @ 0x2A
  1061  00002B                     	ds	2
  1062  00002D                     fix_fft@wi:
  1063                           	opt stack 0
  1064                           
  1065                           ; 2 bytes @ 0x2C
  1066  00002D                     	ds	2
  1067  00002F                     fix_fft@n:
  1068                           	opt stack 0
  1069                           
  1070                           ; 4 bytes @ 0x2E
  1071  00002F                     	ds	4
  1072  000033                     fix_fft@tr:
  1073                           	opt stack 0
  1074                           
  1075                           ; 2 bytes @ 0x32
  1076  000033                     	ds	2
  1077  000035                     fix_fft@ti:
  1078                           	opt stack 0
  1079                           
  1080                           ; 2 bytes @ 0x34
  1081  000035                     	ds	2
  1082  000037                     fix_fft@b:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x36
  1086  000037                     	ds	2
  1087  000039                     fix_fft@i:
  1088                           	opt stack 0
  1089                           
  1090                           ; 4 bytes @ 0x38
  1091  000039                     	ds	4
  1092  00003D                     fix_fft@mr:
  1093                           	opt stack 0
  1094                           
  1095                           ; 4 bytes @ 0x3C
  1096  00003D                     	ds	4
  1097  000041                     fix_fft@l:
  1098                           	opt stack 0
  1099                           
  1100                           ; 4 bytes @ 0x40
  1101  000041                     	ds	4
  1102  000045                     fix_fft@j:
  1103                           	opt stack 0
  1104                           
  1105                           ; 4 bytes @ 0x44
  1106  000045                     	ds	4
  1107  000049                     fix_fft@c:
  1108                           	opt stack 0
  1109                           
  1110                           ; 4 bytes @ 0x48
  1111  000049                     	ds	4
  1112  00004D                     ??_main:
  1113                           
  1114                           ; 0 bytes @ 0x4C
  1115  00004D                     	ds	13
  1116                           tblptru	equ	0xFF8
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           
  1120 ;;
  1121 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
  1122 ;;
  1123 ;; *************** function _main *****************
  1124 ;; Defined at:
  1125 ;;		line 37 in file "main pic18.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  place           4    8[BANK0 ] long 
  1130 ;;  root            4    2[BANK0 ] long 
  1131 ;;  k               2   12[BANK0 ] int 
  1132 ;;  i               2    6[BANK0 ] short 
  1133 ;;  adc_value       2    0[BANK0 ] unsigned int 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;		None               void
  1136 ;; Registers used:
  1137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         0       0       0       0       0       0       0
  1144 ;;      Locals:         0      14       0       0       0       0       0
  1145 ;;      Temps:         13       0       0       0       0       0       0
  1146 ;;      Totals:        13      14       0       0       0       0       0
  1147 ;;Total ram usage:       27 bytes
  1148 ;; Hardware stack levels required when called:    3
  1149 ;; This function calls:
  1150 ;;		_BusyADC
  1151 ;;		_ConvertADC
  1152 ;;		_Open1USART
  1153 ;;		_OpenADC
  1154 ;;		___wmul
  1155 ;;		_fix_fft
  1156 ;;		_sendIntArray
  1157 ;; This function is called by:
  1158 ;;		Startup code after reset
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text0
  1163  006D6E                     __ptext0:
  1164                           	opt stack 0
  1165  006D6E                     _main:
  1166                           	opt stack 28
  1167                           
  1168                           ;main pic18.c: 38: unsigned int adc_value;
  1169                           ;main pic18.c: 39: TRISAbits.RA3 = 1;
  1170                           
  1171                           ;incstack = 0
  1172  006D6E  8692               	bsf	3986,3,c	;volatile
  1173                           
  1174                           ;main pic18.c: 40: ANSELAbits.ANSA3 = 1;
  1175  006D70  010F               	movlb	15	; () banked
  1176  006D72  8738               	bsf	56,3,b	;volatile
  1177                           
  1178                           ;main pic18.c: 41: TRISAbits.RA7 = 1;
  1179  006D74  8E92               	bsf	3986,7,c	;volatile
  1180                           
  1181                           ; BSR set to: 15
  1182                           ;main pic18.c: 42: TRISC = 0x00;
  1183  006D76  0E00               	movlw	0
  1184  006D78  6E94               	movwf	3988,c	;volatile
  1185                           
  1186                           ;main pic18.c: 43: LATC = 0x00;
  1187  006D7A  0E00               	movlw	0
  1188  006D7C  6E8B               	movwf	3979,c	;volatile
  1189                           
  1190                           ;main pic18.c: 44: ANSELC = 0x00;
  1191  006D7E  0E00               	movlw	0
  1192  006D80  010F               	movlb	15	; () banked
  1193  006D82  6F3A               	movwf	58,b	;volatile
  1194                           
  1195                           ; BSR set to: 15
  1196                           ;main pic18.c: 45: TRISCbits.TRISC6 = 1;
  1197  006D84  8C94               	bsf	3988,6,c	;volatile
  1198                           
  1199                           ; BSR set to: 15
  1200                           ;main pic18.c: 46: TRISCbits.TRISC7 = 1;
  1201  006D86  8E94               	bsf	3988,7,c	;volatile
  1202                           
  1203                           ; BSR set to: 15
  1204                           ;main pic18.c: 49: TRISBbits.TRISB0 = 1;
  1205  006D88  8093               	bsf	3987,0,c	;volatile
  1206                           
  1207                           ; BSR set to: 15
  1208                           ;main pic18.c: 50: ANSELBbits.ANSB0 = 0;
  1209  006D8A  010F               	movlb	15	; () banked
  1210  006D8C  9139               	bcf	57,0,b	;volatile
  1211                           
  1212                           ; BSR set to: 15
  1213                           ;main pic18.c: 53: OSCCONbits.IRCF = 0b111;
  1214  006D8E  88D3               	bsf	4051,4,c	;volatile
  1215  006D90  8AD3               	bsf	4051,5,c	;volatile
  1216  006D92  8CD3               	bsf	4051,6,c	;volatile
  1217                           
  1218                           ;main pic18.c: 54: OSCCONbits.SCS = 0b11;
  1219  006D94  0E03               	movlw	3
  1220  006D96  12D3               	iorwf	4051,f,c	;volatile
  1221                           
  1222                           ; BSR set to: 15
  1223                           ;main pic18.c: 55: OSCTUNEbits.TUN = 0b01111;
  1224  006D98  809B               	bsf	3995,0,c	;volatile
  1225  006D9A  829B               	bsf	3995,1,c	;volatile
  1226  006D9C  849B               	bsf	3995,2,c	;volatile
  1227  006D9E  869B               	bsf	3995,3,c	;volatile
  1228  006DA0  989B               	bcf	3995,4,c	;volatile
  1229  006DA2  9A9B               	bcf	3995,5,c	;volatile
  1230                           
  1231                           ;main pic18.c: 58: baud_rate = (4000000 / 9600 / 16 - 1);
  1232  006DA4  0E19               	movlw	25
  1233  006DA6  0100               	movlb	0	; () banked
  1234  006DA8  6FF3               	movwf	_baud_rate& (0+255),b
  1235  006DAA  0E00               	movlw	0
  1236  006DAC  0100               	movlb	0	; () banked
  1237  006DAE  6FF4               	movwf	(_baud_rate+1)& (0+255),b
  1238  006DB0  0E00               	movlw	0
  1239  006DB2  0100               	movlb	0	; () banked
  1240  006DB4  6FF5               	movwf	(_baud_rate+2)& (0+255),b
  1241  006DB6  0E00               	movlw	0
  1242  006DB8  0100               	movlb	0	; () banked
  1243  006DBA  6FF6               	movwf	(_baud_rate+3)& (0+255),b
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;main pic18.c: 59: OpenADC(0b11111111 &
  1247                           ;main pic18.c: 60: 0b11111111 &
  1248                           ;main pic18.c: 61: 0b11110001,
  1249                           ;main pic18.c: 62: 0b10000011 &
  1250                           ;main pic18.c: 63: 0b01111111 &
  1251                           ;main pic18.c: 64: 0b11110111 &
  1252                           ;main pic18.c: 65: 0b11111100,
  1253                           ;main pic18.c: 66: 0b1110);
  1254  006DBC  0E00               	movlw	0
  1255  006DBE  6E01               	movwf	OpenADC@config2,c
  1256  006DC0  0E0E               	movlw	14
  1257  006DC2  6E02               	movwf	OpenADC@config3,c
  1258  006DC4  0EF1               	movlw	241
  1259  006DC6  EC39  F036         	call	_OpenADC
  1260                           
  1261                           ;main pic18.c: 68: RCSTA1&=0b01001111,TXSTA1bits.TXEN=0,PIE1&=0b11001111;
  1262  006DCA  0E4F               	movlw	79
  1263  006DCC  16AB               	andwf	4011,f,c	;volatile
  1264  006DCE  9AAC               	bcf	4012,5,c	;volatile
  1265  006DD0  0ECF               	movlw	207
  1266  006DD2  169D               	andwf	3997,f,c	;volatile
  1267                           
  1268                           ;main pic18.c: 69: Open1USART( 0b01111111 &
  1269                           ;main pic18.c: 70: 0b10111111 &
  1270                           ;main pic18.c: 71: 0b11111110 &
  1271                           ;main pic18.c: 72: 0b11111101 &
  1272                           ;main pic18.c: 73: 0b11111111 &
  1273                           ;main pic18.c: 74: 0b11101111,
  1274                           ;main pic18.c: 75: baud_rate );
  1275  006DD4  C0F3  F001         	movff	_baud_rate,Open1USART@spbrg
  1276  006DD8  C0F4  F002         	movff	_baud_rate+1,Open1USART@spbrg+1
  1277  006DDC  0E2C               	movlw	44
  1278  006DDE  EC8B  F036         	call	_Open1USART
  1279  006DE2                     l1297:
  1280                           
  1281                           ;main pic18.c: 78: short i = 0;
  1282  006DE2  0E00               	movlw	0
  1283  006DE4  0100               	movlb	0	; () banked
  1284  006DE6  6FEC               	movwf	(main@i+1)& (0+255),b
  1285  006DE8  0E00               	movlw	0
  1286  006DEA  0100               	movlb	0	; () banked
  1287  006DEC  6FEB               	movwf	main@i& (0+255),b
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;main pic18.c: 79: for (i = 0; i < 64; i++) {
  1291  006DEE  0E00               	movlw	0
  1292  006DF0  0100               	movlb	0	; () banked
  1293  006DF2  6FEC               	movwf	(main@i+1)& (0+255),b
  1294  006DF4  0E00               	movlw	0
  1295  006DF6  0100               	movlb	0	; () banked
  1296  006DF8  6FEB               	movwf	main@i& (0+255),b
  1297  006DFA  0100               	movlb	0	; () banked
  1298  006DFC  51EC               	movf	(main@i+1)& (0+255),w,b
  1299  006DFE  0A80               	xorlw	128
  1300  006E00  0F80               	addlw	-128
  1301  006E02  0E40               	movlw	64
  1302  006E04  B4D8               	btfsc	status,2,c
  1303  006E06  5DEB               	subwf	main@i& (0+255),w,b
  1304  006E08  B0D8               	btfsc	status,0,c
  1305  006E0A  D049               	goto	l1317
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;main pic18.c: 81: ConvertADC();
  1309                           
  1310                           ; BSR set to: 0
  1311                           
  1312                           ; BSR set to: 0
  1313  006E0C  ECDF  F035         	call	_ConvertADC	;wreg free
  1314  006E10                     l1305:
  1315  006E10  ECE1  F035         	call	_BusyADC	;wreg free
  1316  006E14  0900               	iorlw	0
  1317  006E16  A4D8               	btfss	status,2,c
  1318  006E18  D7FB               	goto	l1305
  1319                           
  1320                           ;main pic18.c: 90: adc_value = ((short)(ADRESH << 8) + (short)ADRESL) - 512;
  1321  006E1A  50C3               	movf	4035,w,c	;volatile
  1322  006E1C  CFC4 F04D          	movff	4036,??_main	;volatile
  1323  006E20  6A4E               	clrf	(??_main+1)& (0+255),c
  1324  006E22  C04D  F04E         	movff	??_main,??_main+1
  1325  006E26  6A4D               	clrf	??_main,c
  1326  006E28  264D               	addwf	??_main,f,c
  1327  006E2A  0E00               	movlw	0
  1328  006E2C  224E               	addwfc	??_main+1,f,c
  1329  006E2E  0E00               	movlw	0
  1330  006E30  244D               	addwf	??_main,w,c
  1331  006E32  0100               	movlb	0	; () banked
  1332  006E34  6FE5               	movwf	main@adc_value& (0+255),b
  1333  006E36  0EFE               	movlw	254
  1334  006E38  204E               	addwfc	??_main+1,w,c
  1335  006E3A  0100               	movlb	0	; () banked
  1336  006E3C  6FE6               	movwf	(main@adc_value+1)& (0+255),b
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;main pic18.c: 91: realNumbers[i] = adc_value;
  1340  006E3E  0E65               	movlw	low _realNumbers
  1341  006E40  6E4D               	movwf	??_main& (0+255),c
  1342  006E42  0E00               	movlw	high _realNumbers
  1343  006E44  6E4E               	movwf	(??_main+1)& (0+255),c
  1344  006E46  90D8               	bcf	status,0,c
  1345  006E48  0100               	movlb	0	; () banked
  1346  006E4A  35EB               	rlcf	main@i& (0+255),w,b
  1347  006E4C  6ED9               	movwf	fsr2l,c
  1348  006E4E  0100               	movlb	0	; () banked
  1349  006E50  35EC               	rlcf	(main@i+1)& (0+255),w,b
  1350  006E52  6EDA               	movwf	fsr2h,c
  1351  006E54  504D               	movf	??_main,w,c
  1352  006E56  26D9               	addwf	fsr2l,f,c
  1353  006E58  504E               	movf	??_main+1,w,c
  1354  006E5A  22DA               	addwfc	fsr2h,f,c
  1355  006E5C  0100               	movlb	0	; () banked
  1356  006E5E  C0E5  FFDE         	movff	main@adc_value,postinc2
  1357  006E62  0100               	movlb	0	; () banked
  1358  006E64  C0E6  FFDD         	movff	main@adc_value+1,postdec2
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;main pic18.c: 97: imaginaryNumbers[i] = 0;
  1362  006E68  0E00               	movlw	low _imaginaryNumbers
  1363  006E6A  6E4D               	movwf	??_main& (0+255),c
  1364  006E6C  0E01               	movlw	high _imaginaryNumbers
  1365  006E6E  6E4E               	movwf	(??_main+1)& (0+255),c
  1366  006E70  90D8               	bcf	status,0,c
  1367  006E72  0100               	movlb	0	; () banked
  1368  006E74  35EB               	rlcf	main@i& (0+255),w,b
  1369  006E76  6ED9               	movwf	fsr2l,c
  1370  006E78  0100               	movlb	0	; () banked
  1371  006E7A  35EC               	rlcf	(main@i+1)& (0+255),w,b
  1372  006E7C  6EDA               	movwf	fsr2h,c
  1373  006E7E  504D               	movf	??_main,w,c
  1374  006E80  26D9               	addwf	fsr2l,f,c
  1375  006E82  504E               	movf	??_main+1,w,c
  1376  006E84  22DA               	addwfc	fsr2h,f,c
  1377  006E86  0E00               	movlw	0
  1378  006E88  6EDE               	movwf	postinc2,c
  1379  006E8A  0E00               	movlw	0
  1380  006E8C  6EDD               	movwf	postdec2,c
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;main pic18.c: 98: _delay(200);
  1384  006E8E  0E42               	movlw	66
  1385  006E90                     u827:
  1386  006E90  2EE8               	decfsz	wreg,f,c
  1387  006E92  D7FE               	goto	u827
  1388  006E94  D000               	nop2		;nop
  1389  006E96  0100               	movlb	0	; () banked
  1390  006E98  4BEB               	infsnz	main@i& (0+255),f,b
  1391  006E9A  2BEC               	incf	(main@i+1)& (0+255),f,b
  1392  006E9C  D7AE               	goto	L1
  1393  006E9E                     l1317:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;main pic18.c: 99: }
  1397                           ;main pic18.c: 104: fix_fft(realNumbers, imaginaryNumbers, 6);
  1398  006E9E  0100               	movlb	0	; () banked
  1399  006EA0  0E00               	movlw	high _realNumbers
  1400  006EA2  6E0E               	movwf	fix_fft@fr+1,c
  1401  006EA4  0100               	movlb	0	; () banked
  1402  006EA6  0E65               	movlw	low _realNumbers
  1403  006EA8  6E0D               	movwf	fix_fft@fr,c
  1404  006EAA  0101               	movlb	1	; () banked
  1405  006EAC  0E01               	movlw	high _imaginaryNumbers
  1406  006EAE  6E10               	movwf	fix_fft@fi+1,c
  1407  006EB0  0101               	movlb	1	; () banked
  1408  006EB2  0E00               	movlw	low _imaginaryNumbers
  1409  006EB4  6E0F               	movwf	fix_fft@fi,c
  1410  006EB6  0E00               	movlw	0
  1411  006EB8  6E12               	movwf	fix_fft@m+1,c
  1412  006EBA  0E06               	movlw	6
  1413  006EBC  6E11               	movwf	fix_fft@m,c
  1414  006EBE  EC39  F039         	call	_fix_fft	;wreg free
  1415                           
  1416                           ;main pic18.c: 105: sendIntArray(realNumbers, 64);
  1417  006EC2  0100               	movlb	0	; () banked
  1418  006EC4  0E00               	movlw	high _realNumbers
  1419  006EC6  6E04               	movwf	sendIntArray@array+1,c
  1420  006EC8  0100               	movlb	0	; () banked
  1421  006ECA  0E65               	movlw	low _realNumbers
  1422  006ECC  6E03               	movwf	sendIntArray@array,c
  1423  006ECE  0E00               	movlw	0
  1424  006ED0  6E06               	movwf	sendIntArray@size+1,c
  1425  006ED2  0E40               	movlw	64
  1426  006ED4  6E05               	movwf	sendIntArray@size,c
  1427  006ED6  EC1F  F036         	call	_sendIntArray	;wreg free
  1428                           
  1429                           ;main pic18.c: 107: long place, root;
  1430                           ;main pic18.c: 108: int k = 0;
  1431  006EDA  0E00               	movlw	0
  1432  006EDC  0100               	movlb	0	; () banked
  1433  006EDE  6FF2               	movwf	(main@k+1)& (0+255),b
  1434  006EE0  0E00               	movlw	0
  1435  006EE2  0100               	movlb	0	; () banked
  1436  006EE4  6FF1               	movwf	main@k& (0+255),b
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main pic18.c: 109: for (k=0; k < 32; k++) {
  1440  006EE6  0E00               	movlw	0
  1441  006EE8  0100               	movlb	0	; () banked
  1442  006EEA  6FF2               	movwf	(main@k+1)& (0+255),b
  1443  006EEC  0E00               	movlw	0
  1444  006EEE  0100               	movlb	0	; () banked
  1445  006EF0  6FF1               	movwf	main@k& (0+255),b
  1446  006EF2                     
  1447                           ; BSR set to: 0
  1448  006EF2  0100               	movlb	0	; () banked
  1449  006EF4  51F2               	movf	(main@k+1)& (0+255),w,b
  1450  006EF6  0A80               	xorlw	128
  1451  006EF8  0F80               	addlw	-128
  1452  006EFA  0E20               	movlw	32
  1453  006EFC  B4D8               	btfsc	status,2,c
  1454  006EFE  5DF1               	subwf	main@k& (0+255),w,b
  1455  006F00  B0D8               	btfsc	status,0,c
  1456  006F02  D76F               	goto	l1297
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;main pic18.c: 110: realNumbers[k] = (realNumbers[k] * realNumbers[k] +
  1460                           ;main pic18.c: 111: imaginaryNumbers[k] * imaginaryNumbers[k]);
  1461                           
  1462                           ; BSR set to: 0
  1463                           
  1464                           ; BSR set to: 0
  1465  006F04  0E65               	movlw	low _realNumbers
  1466  006F06  6E4D               	movwf	??_main& (0+255),c
  1467  006F08  0E00               	movlw	high _realNumbers
  1468  006F0A  6E4E               	movwf	(??_main+1)& (0+255),c
  1469  006F0C  90D8               	bcf	status,0,c
  1470  006F0E  0100               	movlb	0	; () banked
  1471  006F10  35F1               	rlcf	main@k& (0+255),w,b
  1472  006F12  6ED9               	movwf	fsr2l,c
  1473  006F14  0100               	movlb	0	; () banked
  1474  006F16  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1475  006F18  6EDA               	movwf	fsr2h,c
  1476  006F1A  504D               	movf	??_main,w,c
  1477  006F1C  26D9               	addwf	fsr2l,f,c
  1478  006F1E  504E               	movf	??_main+1,w,c
  1479  006F20  22DA               	addwfc	fsr2h,f,c
  1480  006F22  CFDE F001          	movff	postinc2,___wmul@multiplier
  1481  006F26  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1482  006F2A  0E65               	movlw	low _realNumbers
  1483  006F2C  6E4F               	movwf	(??_main+2)& (0+255),c
  1484  006F2E  0E00               	movlw	high _realNumbers
  1485  006F30  6E50               	movwf	(??_main+3)& (0+255),c
  1486  006F32  90D8               	bcf	status,0,c
  1487  006F34  0100               	movlb	0	; () banked
  1488  006F36  35F1               	rlcf	main@k& (0+255),w,b
  1489  006F38  6ED9               	movwf	fsr2l,c
  1490  006F3A  0100               	movlb	0	; () banked
  1491  006F3C  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1492  006F3E  6EDA               	movwf	fsr2h,c
  1493  006F40  504F               	movf	??_main+2,w,c
  1494  006F42  26D9               	addwf	fsr2l,f,c
  1495  006F44  5050               	movf	??_main+3,w,c
  1496  006F46  22DA               	addwfc	fsr2h,f,c
  1497  006F48  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1498  006F4C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1499  006F50  ECF7  F035         	call	___wmul	;wreg free
  1500  006F54  C001  F051         	movff	?___wmul,??_main+4
  1501  006F58  C002  F052         	movff	?___wmul+1,??_main+5
  1502  006F5C  0E00               	movlw	low _imaginaryNumbers
  1503  006F5E  6E53               	movwf	(??_main+6)& (0+255),c
  1504  006F60  0E01               	movlw	high _imaginaryNumbers
  1505  006F62  6E54               	movwf	(??_main+7)& (0+255),c
  1506  006F64  90D8               	bcf	status,0,c
  1507  006F66  0100               	movlb	0	; () banked
  1508  006F68  35F1               	rlcf	main@k& (0+255),w,b
  1509  006F6A  6ED9               	movwf	fsr2l,c
  1510  006F6C  0100               	movlb	0	; () banked
  1511  006F6E  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1512  006F70  6EDA               	movwf	fsr2h,c
  1513  006F72  5053               	movf	??_main+6,w,c
  1514  006F74  26D9               	addwf	fsr2l,f,c
  1515  006F76  5054               	movf	??_main+7,w,c
  1516  006F78  22DA               	addwfc	fsr2h,f,c
  1517  006F7A  CFDE F001          	movff	postinc2,___wmul@multiplier
  1518  006F7E  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1519  006F82  0E00               	movlw	low _imaginaryNumbers
  1520  006F84  6E55               	movwf	(??_main+8)& (0+255),c
  1521  006F86  0E01               	movlw	high _imaginaryNumbers
  1522  006F88  6E56               	movwf	(??_main+9)& (0+255),c
  1523  006F8A  90D8               	bcf	status,0,c
  1524  006F8C  0100               	movlb	0	; () banked
  1525  006F8E  35F1               	rlcf	main@k& (0+255),w,b
  1526  006F90  6ED9               	movwf	fsr2l,c
  1527  006F92  0100               	movlb	0	; () banked
  1528  006F94  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1529  006F96  6EDA               	movwf	fsr2h,c
  1530  006F98  5055               	movf	??_main+8,w,c
  1531  006F9A  26D9               	addwf	fsr2l,f,c
  1532  006F9C  5056               	movf	??_main+9,w,c
  1533  006F9E  22DA               	addwfc	fsr2h,f,c
  1534  006FA0  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1535  006FA4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1536  006FA8  ECF7  F035         	call	___wmul	;wreg free
  1537  006FAC  5001               	movf	?___wmul,w,c
  1538  006FAE  2651               	addwf	??_main+4,f,c
  1539  006FB0  5002               	movf	?___wmul+1,w,c
  1540  006FB2  2252               	addwfc	??_main+5,f,c
  1541  006FB4  0E65               	movlw	low _realNumbers
  1542  006FB6  6E57               	movwf	(??_main+10)& (0+255),c
  1543  006FB8  0E00               	movlw	high _realNumbers
  1544  006FBA  6E58               	movwf	(??_main+11)& (0+255),c
  1545  006FBC  90D8               	bcf	status,0,c
  1546  006FBE  0100               	movlb	0	; () banked
  1547  006FC0  35F1               	rlcf	main@k& (0+255),w,b
  1548  006FC2  6ED9               	movwf	fsr2l,c
  1549  006FC4  0100               	movlb	0	; () banked
  1550  006FC6  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1551  006FC8  6EDA               	movwf	fsr2h,c
  1552  006FCA  5057               	movf	??_main+10,w,c
  1553  006FCC  26D9               	addwf	fsr2l,f,c
  1554  006FCE  5058               	movf	??_main+11,w,c
  1555  006FD0  22DA               	addwfc	fsr2h,f,c
  1556  006FD2  C051  FFDE         	movff	??_main+4,postinc2
  1557  006FD6  C052  FFDD         	movff	??_main+5,postdec2
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;main pic18.c: 113: place = 0x40000000;
  1561  006FDA  0E00               	movlw	0
  1562  006FDC  0100               	movlb	0	; () banked
  1563  006FDE  6FED               	movwf	main@place& (0+255),b
  1564  006FE0  0E00               	movlw	0
  1565  006FE2  0100               	movlb	0	; () banked
  1566  006FE4  6FEE               	movwf	(main@place+1)& (0+255),b
  1567  006FE6  0E00               	movlw	0
  1568  006FE8  0100               	movlb	0	; () banked
  1569  006FEA  6FEF               	movwf	(main@place+2)& (0+255),b
  1570  006FEC  0E40               	movlw	64
  1571  006FEE  0100               	movlb	0	; () banked
  1572  006FF0  6FF0               	movwf	(main@place+3)& (0+255),b
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;main pic18.c: 114: root = 0;
  1576  006FF2  0E00               	movlw	0
  1577  006FF4  0100               	movlb	0	; () banked
  1578  006FF6  6FE7               	movwf	main@root& (0+255),b
  1579  006FF8  0E00               	movlw	0
  1580  006FFA  0100               	movlb	0	; () banked
  1581  006FFC  6FE8               	movwf	(main@root+1)& (0+255),b
  1582  006FFE  0E00               	movlw	0
  1583  007000  0100               	movlb	0	; () banked
  1584  007002  6FE9               	movwf	(main@root+2)& (0+255),b
  1585  007004  0E00               	movlw	0
  1586  007006  0100               	movlb	0	; () banked
  1587  007008  6FEA               	movwf	(main@root+3)& (0+255),b
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;main pic18.c: 116: if (realNumbers[k] >= 0) {
  1591  00700A  0E65               	movlw	low _realNumbers
  1592  00700C  6E4D               	movwf	??_main& (0+255),c
  1593  00700E  0E00               	movlw	high _realNumbers
  1594  007010  6E4E               	movwf	(??_main+1)& (0+255),c
  1595  007012  90D8               	bcf	status,0,c
  1596  007014  0100               	movlb	0	; () banked
  1597  007016  35F1               	rlcf	main@k& (0+255),w,b
  1598  007018  6ED9               	movwf	fsr2l,c
  1599  00701A  0100               	movlb	0	; () banked
  1600  00701C  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1601  00701E  6EDA               	movwf	fsr2h,c
  1602  007020  504D               	movf	??_main,w,c
  1603  007022  26D9               	addwf	fsr2l,f,c
  1604  007024  504E               	movf	??_main+1,w,c
  1605  007026  22DA               	addwfc	fsr2h,f,c
  1606  007028  CFDE F04F          	movff	postinc2,??_main+2
  1607  00702C  CFDD F050          	movff	postdec2,??_main+3
  1608  007030  AE50               	btfss	??_main+3,7,c
  1609  007032  D021               	goto	l1341
  1610  007034  D105               	goto	l1355
  1611  007036                     l1339:
  1612                           
  1613                           ; BSR set to: 0
  1614  007036  0E02               	movlw	2
  1615  007038  6E4D               	movwf	??_main& (0+255),c
  1616  00703A  0100               	movlb	0	; () banked
  1617  00703C  C0ED  F04E         	movff	main@place,??_main+1
  1618  007040  0100               	movlb	0	; () banked
  1619  007042  C0EE  F04F         	movff	main@place+1,??_main+2
  1620  007046  0100               	movlb	0	; () banked
  1621  007048  C0EF  F050         	movff	main@place+2,??_main+3
  1622  00704C  0100               	movlb	0	; () banked
  1623  00704E  C0F0  F051         	movff	main@place+3,??_main+4
  1624  007052                     u755:
  1625  007052  664D               	tstfsz	??_main,c
  1626  007054  D001               	goto	u756
  1627  007056  D007               	goto	u757
  1628  007058                     u756:
  1629  007058  3451               	rlcf	??_main+4,w,c
  1630  00705A  3251               	rrcf	??_main+4,f,c
  1631  00705C  3250               	rrcf	??_main+3,f,c
  1632  00705E  324F               	rrcf	??_main+2,f,c
  1633  007060  324E               	rrcf	??_main+1,f,c
  1634  007062  2E4D               	decfsz	??_main,f,c
  1635  007064  D7F6               	goto	u755
  1636  007066                     u757:
  1637  007066  C04E  F0ED         	movff	??_main+1,main@place
  1638  00706A  C04F  F0EE         	movff	??_main+2,main@place+1
  1639  00706E  C050  F0EF         	movff	??_main+3,main@place+2
  1640  007072  C051  F0F0         	movff	??_main+4,main@place+3
  1641  007076                     l1341:
  1642                           
  1643                           ; BSR set to: 0
  1644  007076  0E65               	movlw	low _realNumbers
  1645  007078  6E4D               	movwf	??_main& (0+255),c
  1646  00707A  0E00               	movlw	high _realNumbers
  1647  00707C  6E4E               	movwf	(??_main+1)& (0+255),c
  1648  00707E  90D8               	bcf	status,0,c
  1649  007080  0100               	movlb	0	; () banked
  1650  007082  35F1               	rlcf	main@k& (0+255),w,b
  1651  007084  6ED9               	movwf	fsr2l,c
  1652  007086  0100               	movlb	0	; () banked
  1653  007088  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1654  00708A  6EDA               	movwf	fsr2h,c
  1655  00708C  504D               	movf	??_main,w,c
  1656  00708E  26D9               	addwf	fsr2l,f,c
  1657  007090  504E               	movf	??_main+1,w,c
  1658  007092  22DA               	addwfc	fsr2h,f,c
  1659  007094  CFDE F04F          	movff	postinc2,??_main+2
  1660  007098  CFDD F050          	movff	postdec2,??_main+3
  1661  00709C  C04F  F051         	movff	??_main+2,??_main+4
  1662  0070A0  C050  F052         	movff	??_main+3,??_main+5
  1663  0070A4  0E00               	movlw	0
  1664  0070A6  BE52               	btfsc	(??_main+5)& (0+255),7,c
  1665  0070A8  0EFF               	movlw	255
  1666  0070AA  6E53               	movwf	(??_main+6)& (0+255),c
  1667  0070AC  6E54               	movwf	(??_main+7)& (0+255),c
  1668  0070AE  5054               	movf	??_main+7,w,c
  1669  0070B0  0A80               	xorlw	128
  1670  0070B2  6E55               	movwf	(??_main+8)& (0+255),c
  1671  0070B4  0100               	movlb	0	; () banked
  1672  0070B6  51ED               	movf	main@place& (0+255),w,b
  1673  0070B8  5C51               	subwf	??_main+4,w,c
  1674  0070BA  0100               	movlb	0	; () banked
  1675  0070BC  51EE               	movf	(main@place+1)& (0+255),w,b
  1676  0070BE  5852               	subwfb	??_main+5,w,c
  1677  0070C0  0100               	movlb	0	; () banked
  1678  0070C2  51EF               	movf	(main@place+2)& (0+255),w,b
  1679  0070C4  5853               	subwfb	??_main+6,w,c
  1680  0070C6  0100               	movlb	0	; () banked
  1681  0070C8  51F0               	movf	(main@place+3)& (0+255),w,b
  1682  0070CA  0A80               	xorlw	128
  1683  0070CC  5855               	subwfb	(??_main+8)& (0+255),w,c
  1684  0070CE  B0D8               	btfsc	status,0,c
  1685  0070D0  D0B0               	goto	l1353
  1686  0070D2  D7B1               	goto	l1339
  1687  0070D4                     l1343:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main pic18.c: 121: if (realNumbers[k] >= root + place) {
  1691  0070D4  0100               	movlb	0	; () banked
  1692  0070D6  51ED               	movf	main@place& (0+255),w,b
  1693  0070D8  0100               	movlb	0	; () banked
  1694  0070DA  25E7               	addwf	main@root& (0+255),w,b
  1695  0070DC  6E4D               	movwf	??_main& (0+255),c
  1696  0070DE  0100               	movlb	0	; () banked
  1697  0070E0  51EE               	movf	(main@place+1)& (0+255),w,b
  1698  0070E2  0100               	movlb	0	; () banked
  1699  0070E4  21E8               	addwfc	(main@root+1)& (0+255),w,b
  1700  0070E6  6E4E               	movwf	(??_main+1)& (0+255),c
  1701  0070E8  0100               	movlb	0	; () banked
  1702  0070EA  51EF               	movf	(main@place+2)& (0+255),w,b
  1703  0070EC  0100               	movlb	0	; () banked
  1704  0070EE  21E9               	addwfc	(main@root+2)& (0+255),w,b
  1705  0070F0  6E4F               	movwf	(??_main+2)& (0+255),c
  1706  0070F2  0100               	movlb	0	; () banked
  1707  0070F4  51F0               	movf	(main@place+3)& (0+255),w,b
  1708  0070F6  0100               	movlb	0	; () banked
  1709  0070F8  21EA               	addwfc	(main@root+3)& (0+255),w,b
  1710  0070FA  6E50               	movwf	(??_main+3)& (0+255),c
  1711  0070FC  0E65               	movlw	low _realNumbers
  1712  0070FE  6E51               	movwf	(??_main+4)& (0+255),c
  1713  007100  0E00               	movlw	high _realNumbers
  1714  007102  6E52               	movwf	(??_main+5)& (0+255),c
  1715  007104  90D8               	bcf	status,0,c
  1716  007106  0100               	movlb	0	; () banked
  1717  007108  35F1               	rlcf	main@k& (0+255),w,b
  1718  00710A  6ED9               	movwf	fsr2l,c
  1719  00710C  0100               	movlb	0	; () banked
  1720  00710E  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1721  007110  6EDA               	movwf	fsr2h,c
  1722  007112  5051               	movf	??_main+4,w,c
  1723  007114  26D9               	addwf	fsr2l,f,c
  1724  007116  5052               	movf	??_main+5,w,c
  1725  007118  22DA               	addwfc	fsr2h,f,c
  1726  00711A  CFDE F053          	movff	postinc2,??_main+6
  1727  00711E  CFDD F054          	movff	postdec2,??_main+7
  1728  007122  C053  F055         	movff	??_main+6,??_main+8
  1729  007126  C054  F056         	movff	??_main+7,??_main+9
  1730  00712A  0E00               	movlw	0
  1731  00712C  BE56               	btfsc	(??_main+9)& (0+255),7,c
  1732  00712E  0EFF               	movlw	255
  1733  007130  6E57               	movwf	(??_main+10)& (0+255),c
  1734  007132  6E58               	movwf	(??_main+11)& (0+255),c
  1735  007134  5058               	movf	??_main+11,w,c
  1736  007136  0A80               	xorlw	128
  1737  007138  6E59               	movwf	(??_main+12)& (0+255),c
  1738  00713A  504D               	movf	??_main,w,c
  1739  00713C  5C55               	subwf	??_main+8,w,c
  1740  00713E  504E               	movf	??_main+1,w,c
  1741  007140  5856               	subwfb	??_main+9,w,c
  1742  007142  504F               	movf	??_main+2,w,c
  1743  007144  5857               	subwfb	??_main+10,w,c
  1744  007146  5050               	movf	??_main+3,w,c
  1745  007148  0A80               	xorlw	128
  1746  00714A  5859               	subwfb	(??_main+12)& (0+255),w,c
  1747  00714C  A0D8               	btfss	status,0,c
  1748  00714E  D038               	goto	l1349
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;main pic18.c: 122: realNumbers[k] -= root + place;
  1752  007150  0100               	movlb	0	; () banked
  1753  007152  C0E7  F04D         	movff	main@root,??_main
  1754  007156  0100               	movlb	0	; () banked
  1755  007158  C0E8  F04E         	movff	main@root+1,??_main+1
  1756  00715C  0100               	movlb	0	; () banked
  1757  00715E  51ED               	movf	main@place& (0+255),w,b
  1758  007160  264D               	addwf	??_main,f,c
  1759  007162  0100               	movlb	0	; () banked
  1760  007164  51EE               	movf	(main@place+1)& (0+255),w,b
  1761  007166  224E               	addwfc	??_main+1,f,c
  1762  007168  0E65               	movlw	low _realNumbers
  1763  00716A  6E4F               	movwf	(??_main+2)& (0+255),c
  1764  00716C  0E00               	movlw	high _realNumbers
  1765  00716E  6E50               	movwf	(??_main+3)& (0+255),c
  1766  007170  90D8               	bcf	status,0,c
  1767  007172  0100               	movlb	0	; () banked
  1768  007174  35F1               	rlcf	main@k& (0+255),w,b
  1769  007176  6ED9               	movwf	fsr2l,c
  1770  007178  0100               	movlb	0	; () banked
  1771  00717A  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1772  00717C  6EDA               	movwf	fsr2h,c
  1773  00717E  504F               	movf	??_main+2,w,c
  1774  007180  26D9               	addwf	fsr2l,f,c
  1775  007182  5050               	movf	??_main+3,w,c
  1776  007184  22DA               	addwfc	fsr2h,f,c
  1777  007186  504D               	movf	??_main,w,c
  1778  007188  5EDE               	subwf	postinc2,f,c
  1779  00718A  504E               	movf	??_main+1,w,c
  1780  00718C  5ADD               	subwfb	postdec2,f,c
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main pic18.c: 123: root += place * 2;
  1784  00718E  90D8               	bcf	status,0,c
  1785  007190  0100               	movlb	0	; () banked
  1786  007192  35ED               	rlcf	main@place& (0+255),w,b
  1787  007194  6E4D               	movwf	??_main& (0+255),c
  1788  007196  0100               	movlb	0	; () banked
  1789  007198  35EE               	rlcf	(main@place+1)& (0+255),w,b
  1790  00719A  6E4E               	movwf	(??_main+1)& (0+255),c
  1791  00719C  0100               	movlb	0	; () banked
  1792  00719E  35EF               	rlcf	(main@place+2)& (0+255),w,b
  1793  0071A0  6E4F               	movwf	(??_main+2)& (0+255),c
  1794  0071A2  0100               	movlb	0	; () banked
  1795  0071A4  35F0               	rlcf	(main@place+3)& (0+255),w,b
  1796  0071A6  6E50               	movwf	(??_main+3)& (0+255),c
  1797  0071A8  504D               	movf	??_main,w,c
  1798  0071AA  0100               	movlb	0	; () banked
  1799  0071AC  27E7               	addwf	main@root& (0+255),f,b
  1800  0071AE  504E               	movf	??_main+1,w,c
  1801  0071B0  0100               	movlb	0	; () banked
  1802  0071B2  23E8               	addwfc	(main@root+1)& (0+255),f,b
  1803  0071B4  504F               	movf	??_main+2,w,c
  1804  0071B6  0100               	movlb	0	; () banked
  1805  0071B8  23E9               	addwfc	(main@root+2)& (0+255),f,b
  1806  0071BA  5050               	movf	??_main+3,w,c
  1807  0071BC  0100               	movlb	0	; () banked
  1808  0071BE  23EA               	addwfc	(main@root+3)& (0+255),f,b
  1809  0071C0                     l1349:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;main pic18.c: 124: }
  1813                           ;main pic18.c: 126: root = root >> 1;
  1814  0071C0  0100               	movlb	0	; () banked
  1815  0071C2  C0E7  F04D         	movff	main@root,??_main
  1816  0071C6  0100               	movlb	0	; () banked
  1817  0071C8  C0E8  F04E         	movff	main@root+1,??_main+1
  1818  0071CC  0100               	movlb	0	; () banked
  1819  0071CE  C0E9  F04F         	movff	main@root+2,??_main+2
  1820  0071D2  0100               	movlb	0	; () banked
  1821  0071D4  C0EA  F050         	movff	main@root+3,??_main+3
  1822  0071D8  3450               	rlcf	??_main+3,w,c
  1823  0071DA  3250               	rrcf	??_main+3,f,c
  1824  0071DC  324F               	rrcf	??_main+2,f,c
  1825  0071DE  324E               	rrcf	??_main+1,f,c
  1826  0071E0  324D               	rrcf	??_main,f,c
  1827  0071E2  C04D  F0E7         	movff	??_main,main@root
  1828  0071E6  C04E  F0E8         	movff	??_main+1,main@root+1
  1829  0071EA  C04F  F0E9         	movff	??_main+2,main@root+2
  1830  0071EE  C050  F0EA         	movff	??_main+3,main@root+3
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;main pic18.c: 127: place = place >> 2;
  1834  0071F2  0E02               	movlw	2
  1835  0071F4  6E4D               	movwf	??_main& (0+255),c
  1836  0071F6  0100               	movlb	0	; () banked
  1837  0071F8  C0ED  F04E         	movff	main@place,??_main+1
  1838  0071FC  0100               	movlb	0	; () banked
  1839  0071FE  C0EE  F04F         	movff	main@place+1,??_main+2
  1840  007202  0100               	movlb	0	; () banked
  1841  007204  C0EF  F050         	movff	main@place+2,??_main+3
  1842  007208  0100               	movlb	0	; () banked
  1843  00720A  C0F0  F051         	movff	main@place+3,??_main+4
  1844  00720E                     u785:
  1845  00720E  664D               	tstfsz	??_main,c
  1846  007210  D001               	goto	u786
  1847  007212  D007               	goto	u787
  1848  007214                     u786:
  1849  007214  3451               	rlcf	??_main+4,w,c
  1850  007216  3251               	rrcf	??_main+4,f,c
  1851  007218  3250               	rrcf	??_main+3,f,c
  1852  00721A  324F               	rrcf	??_main+2,f,c
  1853  00721C  324E               	rrcf	??_main+1,f,c
  1854  00721E  2E4D               	decfsz	??_main,f,c
  1855  007220  D7F6               	goto	u785
  1856  007222                     u787:
  1857  007222  C04E  F0ED         	movff	??_main+1,main@place
  1858  007226  C04F  F0EE         	movff	??_main+2,main@place+1
  1859  00722A  C050  F0EF         	movff	??_main+3,main@place+2
  1860  00722E  C051  F0F0         	movff	??_main+4,main@place+3
  1861  007232                     l1353:
  1862                           
  1863                           ; BSR set to: 0
  1864  007232  0100               	movlb	0	; () banked
  1865  007234  51F0               	movf	(main@place+3)& (0+255),w,b
  1866  007236  11ED               	iorwf	main@place& (0+255),w,b
  1867  007238  11EE               	iorwf	(main@place+1)& (0+255),w,b
  1868  00723A  11EF               	iorwf	(main@place+2)& (0+255),w,b
  1869  00723C  A4D8               	btfss	status,2,c
  1870  00723E  D74A               	goto	l1343
  1871  007240                     l1355:
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;main pic18.c: 128: }
  1875                           ;main pic18.c: 129: }
  1876                           ;main pic18.c: 131: realNumbers[k] = root;
  1877  007240  0E65               	movlw	low _realNumbers
  1878  007242  6E4D               	movwf	??_main& (0+255),c
  1879  007244  0E00               	movlw	high _realNumbers
  1880  007246  6E4E               	movwf	(??_main+1)& (0+255),c
  1881  007248  90D8               	bcf	status,0,c
  1882  00724A  0100               	movlb	0	; () banked
  1883  00724C  35F1               	rlcf	main@k& (0+255),w,b
  1884  00724E  6ED9               	movwf	fsr2l,c
  1885  007250  0100               	movlb	0	; () banked
  1886  007252  35F2               	rlcf	(main@k+1)& (0+255),w,b
  1887  007254  6EDA               	movwf	fsr2h,c
  1888  007256  504D               	movf	??_main,w,c
  1889  007258  26D9               	addwf	fsr2l,f,c
  1890  00725A  504E               	movf	??_main+1,w,c
  1891  00725C  22DA               	addwfc	fsr2h,f,c
  1892  00725E  0100               	movlb	0	; () banked
  1893  007260  C0E7  FFDE         	movff	main@root,postinc2
  1894  007264  0100               	movlb	0	; () banked
  1895  007266  C0E8  FFDD         	movff	main@root+1,postdec2
  1896                           
  1897                           ; BSR set to: 0
  1898  00726A  0100               	movlb	0	; () banked
  1899  00726C  4BF1               	infsnz	main@k& (0+255),f,b
  1900  00726E  2BF2               	incf	(main@k+1)& (0+255),f,b
  1901  007270  D640               	goto	L2
  1902  007272                     __end_of_main:
  1903                           	opt stack 0
  1904                           tblptru	equ	0xFF8
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postinc2	equ	0xFDE
  1908                           postdec2	equ	0xFDD
  1909                           fsr2h	equ	0xFDA
  1910                           fsr2l	equ	0xFD9
  1911                           status	equ	0xFD8
  1912                           
  1913 ;; *************** function _sendIntArray *****************
  1914 ;; Defined at:
  1915 ;;		line 157 in file "main pic18.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  array           2    2[COMRAM] PTR short 
  1918 ;;		 -> realNumbers(128), 
  1919 ;;  size            2    4[COMRAM] unsigned int 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;		None               void
  1924 ;; Registers used:
  1925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1931 ;;      Params:         4       0       0       0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0
  1934 ;;      Totals:         4       0       0       0       0       0       0
  1935 ;;Total ram usage:        4 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    2
  1938 ;; This function calls:
  1939 ;;		_sendChar
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text1
  1946  006C3E                     __ptext1:
  1947                           	opt stack 0
  1948  006C3E                     _sendIntArray:
  1949                           	opt stack 28
  1950                           
  1951                           ;main pic18.c: 158: for(i = 0; i < size; i++) {
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;incstack = 0
  1955  006C3E  0E00               	movlw	0
  1956  006C40  6E5B               	movwf	_i+1,c
  1957  006C42  0E00               	movlw	0
  1958  006C44  6E5A               	movwf	_i,c
  1959  006C46  D00E               	goto	l1263
  1960  006C48                     l1259:
  1961                           
  1962                           ;main pic18.c: 159: sendChar(array[i]);
  1963  006C48  90D8               	bcf	status,0,c
  1964  006C4A  345A               	rlcf	_i,w,c
  1965  006C4C  6ED9               	movwf	fsr2l,c
  1966  006C4E  345B               	rlcf	_i+1,w,c
  1967  006C50  6EDA               	movwf	fsr2h,c
  1968  006C52  5003               	movf	sendIntArray@array,w,c
  1969  006C54  26D9               	addwf	fsr2l,f,c
  1970  006C56  5004               	movf	sendIntArray@array+1,w,c
  1971  006C58  22DA               	addwfc	fsr2h,f,c
  1972  006C5A  50DF               	movf	indf2,w,c
  1973  006C5C  ECE7  F035         	call	_sendChar
  1974  006C60  4A5A               	infsnz	_i,f,c
  1975  006C62  2A5B               	incf	_i+1,f,c
  1976  006C64                     l1263:
  1977  006C64  5005               	movf	sendIntArray@size,w,c
  1978  006C66  5C5A               	subwf	_i,w,c
  1979  006C68  5006               	movf	sendIntArray@size+1,w,c
  1980  006C6A  585B               	subwfb	_i+1,w,c
  1981  006C6C  B0D8               	btfsc	status,0,c
  1982  006C6E  0012               	return	
  1983  006C70  D7EB               	goto	l1259
  1984  006C72                     __end_of_sendIntArray:
  1985                           	opt stack 0
  1986                           tblptru	equ	0xFF8
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           indf2	equ	0xFDF
  1990                           postinc2	equ	0xFDE
  1991                           postdec2	equ	0xFDD
  1992                           fsr2h	equ	0xFDA
  1993                           fsr2l	equ	0xFD9
  1994                           status	equ	0xFD8
  1995                           
  1996 ;; *************** function _sendChar *****************
  1997 ;; Defined at:
  1998 ;;		line 152 in file "main pic18.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  character       1    wreg     unsigned char 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  character       1    1[COMRAM] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;		None               void
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2012 ;;      Params:         0       0       0       0       0       0       0
  2013 ;;      Locals:         1       0       0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0
  2015 ;;      Totals:         1       0       0       0       0       0       0
  2016 ;;Total ram usage:        1 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    1
  2019 ;; This function calls:
  2020 ;;		_Write1USART
  2021 ;; This function is called by:
  2022 ;;		_sendIntArray
  2023 ;;		_sendCharArray
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text2
  2028  006BCE                     __ptext2:
  2029                           	opt stack 0
  2030  006BCE                     _sendChar:
  2031                           	opt stack 28
  2032                           
  2033                           ;incstack = 0
  2034                           ;sendChar@character stored from wreg
  2035  006BCE  6E02               	movwf	sendChar@character,c
  2036  006BD0                     l98:
  2037  006BD0  A2AC               	btfss	4012,1,c	;volatile
  2038  006BD2  D7FE               	goto	l98
  2039                           
  2040                           ;main pic18.c: 154: Write1USART(character);
  2041  006BD4  5002               	movf	sendChar@character,w,c
  2042  006BD6  ECEE  F035         	call	_Write1USART
  2043  006BDA  0012               	return	
  2044  006BDC                     __end_of_sendChar:
  2045                           	opt stack 0
  2046                           tblptru	equ	0xFF8
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           indf2	equ	0xFDF
  2050                           postinc2	equ	0xFDE
  2051                           postdec2	equ	0xFDD
  2052                           fsr2h	equ	0xFDA
  2053                           fsr2l	equ	0xFD9
  2054                           status	equ	0xFD8
  2055                           
  2056 ;; *************** function _Write1USART *****************
  2057 ;; Defined at:
  2058 ;;		line 14 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/USART/u1write.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  data            1    wreg     unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  data            1    0[COMRAM] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;		None               void
  2065 ;; Registers used:
  2066 ;;		wreg
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2072 ;;      Params:         0       0       0       0       0       0       0
  2073 ;;      Locals:         1       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0
  2075 ;;      Totals:         1       0       0       0       0       0       0
  2076 ;;Total ram usage:        1 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_sendChar
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text3
  2086  006BDC                     __ptext3:
  2087                           	opt stack 0
  2088  006BDC                     _Write1USART:
  2089                           	opt stack 28
  2090                           
  2091                           ;incstack = 0
  2092                           ;Write1USART@data stored from wreg
  2093  006BDC  6E01               	movwf	Write1USART@data,c
  2094  006BDE  ACAC               	btfss	4012,6,c	;volatile
  2095  006BE0  D003               	goto	l1089
  2096  006BE2  90AC               	bcf	4012,0,c	;volatile
  2097  006BE4  B25C               	btfsc	_USART1_Status,1,c
  2098  006BE6  80AC               	bsf	4012,0,c	;volatile
  2099  006BE8                     l1089:
  2100  006BE8  C001  FFAD         	movff	Write1USART@data,4013	;volatile
  2101  006BEC  0012               	return	
  2102  006BEE                     __end_of_Write1USART:
  2103                           	opt stack 0
  2104                           tblptru	equ	0xFF8
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           indf2	equ	0xFDF
  2108                           postinc2	equ	0xFDE
  2109                           postdec2	equ	0xFDD
  2110                           fsr2h	equ	0xFDA
  2111                           fsr2l	equ	0xFD9
  2112                           status	equ	0xFD8
  2113                           
  2114 ;; *************** function _fix_fft *****************
  2115 ;; Defined at:
  2116 ;;		line 155 in file "fft.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  fr              2   12[COMRAM] PTR short 
  2119 ;;		 -> realNumbers(128), 
  2120 ;;  fi              2   14[COMRAM] PTR short 
  2121 ;;		 -> imaginaryNumbers(128), 
  2122 ;;  m               2   16[COMRAM] short 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  c               4   72[COMRAM] long 
  2125 ;;  b               2   54[COMRAM] short 
  2126 ;;  j               4   68[COMRAM] long 
  2127 ;;  l               4   64[COMRAM] long 
  2128 ;;  mr              4   60[COMRAM] long 
  2129 ;;  i               4   56[COMRAM] long 
  2130 ;;  n               4   46[COMRAM] long 
  2131 ;;  istep           4   34[COMRAM] long 
  2132 ;;  nn              4   30[COMRAM] long 
  2133 ;;  k               4   26[COMRAM] long 
  2134 ;;  ti              2   52[COMRAM] short 
  2135 ;;  tr              2   50[COMRAM] short 
  2136 ;;  wi              2   44[COMRAM] short 
  2137 ;;  wr              2   42[COMRAM] short 
  2138 ;;  qi              2   40[COMRAM] short 
  2139 ;;  qr              2   38[COMRAM] short 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;		None               void
  2142 ;; Registers used:
  2143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:         6       0       0       0       0       0       0
  2150 ;;      Locals:        50       0       0       0       0       0       0
  2151 ;;      Temps:          8       0       0       0       0       0       0
  2152 ;;      Totals:        64       0       0       0       0       0       0
  2153 ;;Total ram usage:       64 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    1
  2156 ;; This function calls:
  2157 ;;		___lmul
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text4
  2164  007272                     __ptext4:
  2165                           	opt stack 0
  2166  007272                     _fix_fft:
  2167                           	opt stack 29
  2168                           
  2169                           ;fft.c: 157: long int mr = 0, nn, i, j, l, k, istep, n;
  2170                           
  2171                           ;incstack = 0
  2172  007272  0E00               	movlw	0
  2173  007274  6E3D               	movwf	fix_fft@mr,c
  2174  007276  0E00               	movlw	0
  2175  007278  6E3E               	movwf	fix_fft@mr+1,c
  2176  00727A  0E00               	movlw	0
  2177  00727C  6E3F               	movwf	fix_fft@mr+2,c
  2178  00727E  0E00               	movlw	0
  2179  007280  6E40               	movwf	fix_fft@mr+3,c
  2180                           
  2181                           ;fft.c: 158: short qr, qi, tr, ti, wr, wi;
  2182                           ;fft.c: 160: n = 1 << m;
  2183  007282  C011  F013         	movff	fix_fft@m,??_fix_fft
  2184  007286  0E01               	movlw	1
  2185  007288  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2186  00728A  6A15               	clrf	(??_fix_fft+2)& (0+255),c
  2187  00728C  2A13               	incf	??_fix_fft,f,c
  2188  00728E  D003               	goto	u574
  2189  007290                     u575:
  2190  007290  90D8               	bcf	status,0,c
  2191  007292  3614               	rlcf	??_fix_fft+1,f,c
  2192  007294  3615               	rlcf	??_fix_fft+2,f,c
  2193  007296                     u574:
  2194  007296  2E13               	decfsz	??_fix_fft,f,c
  2195  007298  D7FB               	goto	u575
  2196  00729A  C014  F02F         	movff	??_fix_fft+1,fix_fft@n
  2197  00729E  C015  F030         	movff	??_fix_fft+2,fix_fft@n+1
  2198  0072A2  0E00               	movlw	0
  2199  0072A4  BE30               	btfsc	fix_fft@n+1,7,c
  2200  0072A6  0EFF               	movlw	-1
  2201  0072A8  6E31               	movwf	fix_fft@n+2,c
  2202  0072AA  6E32               	movwf	fix_fft@n+3,c
  2203                           
  2204                           ;fft.c: 161: nn = n - 1;
  2205  0072AC  0EFF               	movlw	255
  2206  0072AE  242F               	addwf	fix_fft@n,w,c
  2207  0072B0  6E1F               	movwf	fix_fft@nn,c
  2208  0072B2  0EFF               	movlw	255
  2209  0072B4  2030               	addwfc	fix_fft@n+1,w,c
  2210  0072B6  6E20               	movwf	fix_fft@nn+1,c
  2211  0072B8  0EFF               	movlw	255
  2212  0072BA  2031               	addwfc	fix_fft@n+2,w,c
  2213  0072BC  6E21               	movwf	fix_fft@nn+2,c
  2214  0072BE  0EFF               	movlw	255
  2215  0072C0  2032               	addwfc	fix_fft@n+3,w,c
  2216  0072C2  6E22               	movwf	fix_fft@nn+3,c
  2217                           
  2218                           ;fft.c: 167: for (m=1; m<=nn; ++m)
  2219  0072C4  0E00               	movlw	0
  2220  0072C6  6E12               	movwf	fix_fft@m+1,c
  2221  0072C8  0E01               	movlw	1
  2222  0072CA  6E11               	movwf	fix_fft@m,c
  2223  0072CC  D0C4               	goto	l1187
  2224  0072CE                     l113:
  2225                           
  2226                           ;fft.c: 168: {
  2227                           ;fft.c: 169: l = n;
  2228  0072CE  C02F  F041         	movff	fix_fft@n,fix_fft@l
  2229  0072D2  C030  F042         	movff	fix_fft@n+1,fix_fft@l+1
  2230  0072D6  C031  F043         	movff	fix_fft@n+2,fix_fft@l+2
  2231  0072DA  C032  F044         	movff	fix_fft@n+3,fix_fft@l+3
  2232  0072DE                     l1169:
  2233                           
  2234                           ;fft.c: 171: {
  2235                           ;fft.c: 172: l >>= 1;
  2236  0072DE  3444               	rlcf	fix_fft@l+3,w,c
  2237  0072E0  3244               	rrcf	fix_fft@l+3,f,c
  2238  0072E2  3243               	rrcf	fix_fft@l+2,f,c
  2239  0072E4  3242               	rrcf	fix_fft@l+1,f,c
  2240  0072E6  3241               	rrcf	fix_fft@l,f,c
  2241                           
  2242                           ;fft.c: 173: } while (mr+l > nn);
  2243  0072E8  5041               	movf	fix_fft@l,w,c
  2244  0072EA  243D               	addwf	fix_fft@mr,w,c
  2245  0072EC  6E13               	movwf	??_fix_fft& (0+255),c
  2246  0072EE  5042               	movf	fix_fft@l+1,w,c
  2247  0072F0  203E               	addwfc	fix_fft@mr+1,w,c
  2248  0072F2  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2249  0072F4  5043               	movf	fix_fft@l+2,w,c
  2250  0072F6  203F               	addwfc	fix_fft@mr+2,w,c
  2251  0072F8  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2252  0072FA  5044               	movf	fix_fft@l+3,w,c
  2253  0072FC  2040               	addwfc	fix_fft@mr+3,w,c
  2254  0072FE  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2255  007300  5022               	movf	fix_fft@nn+3,w,c
  2256  007302  0A80               	xorlw	128
  2257  007304  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2258  007306  5013               	movf	??_fix_fft,w,c
  2259  007308  5C1F               	subwf	fix_fft@nn,w,c
  2260  00730A  5014               	movf	??_fix_fft+1,w,c
  2261  00730C  5820               	subwfb	fix_fft@nn+1,w,c
  2262  00730E  5015               	movf	??_fix_fft+2,w,c
  2263  007310  5821               	subwfb	fix_fft@nn+2,w,c
  2264  007312  5016               	movf	??_fix_fft+3,w,c
  2265  007314  0A80               	xorlw	128
  2266  007316  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2267  007318  A0D8               	btfss	status,0,c
  2268  00731A  D7E1               	goto	l1169
  2269                           
  2270                           ;fft.c: 175: mr = (mr & (l-1)) + l;
  2271  00731C  0EFF               	movlw	255
  2272  00731E  2441               	addwf	fix_fft@l,w,c
  2273  007320  6E13               	movwf	??_fix_fft& (0+255),c
  2274  007322  0EFF               	movlw	255
  2275  007324  2042               	addwfc	fix_fft@l+1,w,c
  2276  007326  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2277  007328  0EFF               	movlw	255
  2278  00732A  2043               	addwfc	fix_fft@l+2,w,c
  2279  00732C  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2280  00732E  0EFF               	movlw	255
  2281  007330  2044               	addwfc	fix_fft@l+3,w,c
  2282  007332  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2283  007334  503D               	movf	fix_fft@mr,w,c
  2284  007336  1413               	andwf	??_fix_fft,w,c
  2285  007338  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2286  00733A  503E               	movf	fix_fft@mr+1,w,c
  2287  00733C  1414               	andwf	??_fix_fft+1,w,c
  2288  00733E  6E18               	movwf	(??_fix_fft+5)& (0+255),c
  2289  007340  503F               	movf	fix_fft@mr+2,w,c
  2290  007342  1415               	andwf	??_fix_fft+2,w,c
  2291  007344  6E19               	movwf	(??_fix_fft+6)& (0+255),c
  2292  007346  5040               	movf	fix_fft@mr+3,w,c
  2293  007348  1416               	andwf	??_fix_fft+3,w,c
  2294  00734A  6E1A               	movwf	(??_fix_fft+7)& (0+255),c
  2295  00734C  5041               	movf	fix_fft@l,w,c
  2296  00734E  2417               	addwf	??_fix_fft+4,w,c
  2297  007350  6E3D               	movwf	fix_fft@mr,c
  2298  007352  5042               	movf	fix_fft@l+1,w,c
  2299  007354  2018               	addwfc	??_fix_fft+5,w,c
  2300  007356  6E3E               	movwf	fix_fft@mr+1,c
  2301  007358  5043               	movf	fix_fft@l+2,w,c
  2302  00735A  2019               	addwfc	??_fix_fft+6,w,c
  2303  00735C  6E3F               	movwf	fix_fft@mr+2,c
  2304  00735E  5044               	movf	fix_fft@l+3,w,c
  2305  007360  201A               	addwfc	??_fix_fft+7,w,c
  2306  007362  6E40               	movwf	fix_fft@mr+3,c
  2307                           
  2308                           ;fft.c: 176: if (mr <= m) continue;
  2309  007364  C011  F013         	movff	fix_fft@m,??_fix_fft
  2310  007368  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2311  00736C  0E00               	movlw	0
  2312  00736E  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2313  007370  0EFF               	movlw	255
  2314  007372  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2315  007374  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2316  007376  5016               	movf	??_fix_fft+3,w,c
  2317  007378  0A80               	xorlw	128
  2318  00737A  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2319  00737C  503D               	movf	fix_fft@mr,w,c
  2320  00737E  5C13               	subwf	??_fix_fft,w,c
  2321  007380  503E               	movf	fix_fft@mr+1,w,c
  2322  007382  5814               	subwfb	??_fix_fft+1,w,c
  2323  007384  503F               	movf	fix_fft@mr+2,w,c
  2324  007386  5815               	subwfb	??_fix_fft+2,w,c
  2325  007388  5040               	movf	fix_fft@mr+3,w,c
  2326  00738A  0A80               	xorlw	128
  2327  00738C  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2328  00738E  B0D8               	btfsc	status,0,c
  2329  007390  D060               	goto	l1185
  2330                           
  2331                           ;fft.c: 178: tr = fr[m];
  2332  007392  90D8               	bcf	status,0,c
  2333  007394  3411               	rlcf	fix_fft@m,w,c
  2334  007396  6ED9               	movwf	fsr2l,c
  2335  007398  3412               	rlcf	fix_fft@m+1,w,c
  2336  00739A  6EDA               	movwf	fsr2h,c
  2337  00739C  500D               	movf	fix_fft@fr,w,c
  2338  00739E  26D9               	addwf	fsr2l,f,c
  2339  0073A0  500E               	movf	fix_fft@fr+1,w,c
  2340  0073A2  22DA               	addwfc	fsr2h,f,c
  2341  0073A4  CFDE F033          	movff	postinc2,fix_fft@tr
  2342  0073A8  CFDD F034          	movff	postdec2,fix_fft@tr+1
  2343                           
  2344                           ;fft.c: 179: fr[m] = fr[mr];
  2345  0073AC  90D8               	bcf	status,0,c
  2346  0073AE  343D               	rlcf	fix_fft@mr,w,c
  2347  0073B0  6ED9               	movwf	fsr2l,c
  2348  0073B2  343E               	rlcf	fix_fft@mr+1,w,c
  2349  0073B4  6EDA               	movwf	fsr2h,c
  2350  0073B6  500D               	movf	fix_fft@fr,w,c
  2351  0073B8  26D9               	addwf	fsr2l,f,c
  2352  0073BA  500E               	movf	fix_fft@fr+1,w,c
  2353  0073BC  22DA               	addwfc	fsr2h,f,c
  2354  0073BE  90D8               	bcf	status,0,c
  2355  0073C0  3411               	rlcf	fix_fft@m,w,c
  2356  0073C2  6EE1               	movwf	fsr1l,c
  2357  0073C4  3412               	rlcf	fix_fft@m+1,w,c
  2358  0073C6  6EE2               	movwf	fsr1h,c
  2359  0073C8  500D               	movf	fix_fft@fr,w,c
  2360  0073CA  26E1               	addwf	fsr1l,f,c
  2361  0073CC  500E               	movf	fix_fft@fr+1,w,c
  2362  0073CE  22E2               	addwfc	fsr1h,f,c
  2363  0073D0  CFDE FFE6          	movff	postinc2,postinc1
  2364  0073D4  CFDD FFE5          	movff	postdec2,postdec1
  2365                           
  2366                           ;fft.c: 180: fr[mr] = tr;
  2367  0073D8  90D8               	bcf	status,0,c
  2368  0073DA  343D               	rlcf	fix_fft@mr,w,c
  2369  0073DC  6ED9               	movwf	fsr2l,c
  2370  0073DE  343E               	rlcf	fix_fft@mr+1,w,c
  2371  0073E0  6EDA               	movwf	fsr2h,c
  2372  0073E2  500D               	movf	fix_fft@fr,w,c
  2373  0073E4  26D9               	addwf	fsr2l,f,c
  2374  0073E6  500E               	movf	fix_fft@fr+1,w,c
  2375  0073E8  22DA               	addwfc	fsr2h,f,c
  2376  0073EA  C033  FFDE         	movff	fix_fft@tr,postinc2
  2377  0073EE  C034  FFDD         	movff	fix_fft@tr+1,postdec2
  2378                           
  2379                           ;fft.c: 181: ti = fi[m];
  2380  0073F2  90D8               	bcf	status,0,c
  2381  0073F4  3411               	rlcf	fix_fft@m,w,c
  2382  0073F6  6ED9               	movwf	fsr2l,c
  2383  0073F8  3412               	rlcf	fix_fft@m+1,w,c
  2384  0073FA  6EDA               	movwf	fsr2h,c
  2385  0073FC  500F               	movf	fix_fft@fi,w,c
  2386  0073FE  26D9               	addwf	fsr2l,f,c
  2387  007400  5010               	movf	fix_fft@fi+1,w,c
  2388  007402  22DA               	addwfc	fsr2h,f,c
  2389  007404  CFDE F035          	movff	postinc2,fix_fft@ti
  2390  007408  CFDD F036          	movff	postdec2,fix_fft@ti+1
  2391                           
  2392                           ;fft.c: 182: fi[m] = fi[mr];
  2393  00740C  90D8               	bcf	status,0,c
  2394  00740E  343D               	rlcf	fix_fft@mr,w,c
  2395  007410  6ED9               	movwf	fsr2l,c
  2396  007412  343E               	rlcf	fix_fft@mr+1,w,c
  2397  007414  6EDA               	movwf	fsr2h,c
  2398  007416  500F               	movf	fix_fft@fi,w,c
  2399  007418  26D9               	addwf	fsr2l,f,c
  2400  00741A  5010               	movf	fix_fft@fi+1,w,c
  2401  00741C  22DA               	addwfc	fsr2h,f,c
  2402  00741E  90D8               	bcf	status,0,c
  2403  007420  3411               	rlcf	fix_fft@m,w,c
  2404  007422  6EE1               	movwf	fsr1l,c
  2405  007424  3412               	rlcf	fix_fft@m+1,w,c
  2406  007426  6EE2               	movwf	fsr1h,c
  2407  007428  500F               	movf	fix_fft@fi,w,c
  2408  00742A  26E1               	addwf	fsr1l,f,c
  2409  00742C  5010               	movf	fix_fft@fi+1,w,c
  2410  00742E  22E2               	addwfc	fsr1h,f,c
  2411  007430  CFDE FFE6          	movff	postinc2,postinc1
  2412  007434  CFDD FFE5          	movff	postdec2,postdec1
  2413                           
  2414                           ;fft.c: 183: fi[mr] = ti;
  2415  007438  90D8               	bcf	status,0,c
  2416  00743A  343D               	rlcf	fix_fft@mr,w,c
  2417  00743C  6ED9               	movwf	fsr2l,c
  2418  00743E  343E               	rlcf	fix_fft@mr+1,w,c
  2419  007440  6EDA               	movwf	fsr2h,c
  2420  007442  500F               	movf	fix_fft@fi,w,c
  2421  007444  26D9               	addwf	fsr2l,f,c
  2422  007446  5010               	movf	fix_fft@fi+1,w,c
  2423  007448  22DA               	addwfc	fsr2h,f,c
  2424  00744A  C035  FFDE         	movff	fix_fft@ti,postinc2
  2425  00744E  C036  FFDD         	movff	fix_fft@ti+1,postdec2
  2426  007452                     l1185:
  2427  007452  4A11               	infsnz	fix_fft@m,f,c
  2428  007454  2A12               	incf	fix_fft@m+1,f,c
  2429  007456                     l1187:
  2430  007456  C011  F013         	movff	fix_fft@m,??_fix_fft
  2431  00745A  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2432  00745E  0E00               	movlw	0
  2433  007460  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2434  007462  0EFF               	movlw	255
  2435  007464  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2436  007466  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2437  007468  5022               	movf	fix_fft@nn+3,w,c
  2438  00746A  0A80               	xorlw	128
  2439  00746C  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2440  00746E  5013               	movf	??_fix_fft,w,c
  2441  007470  5C1F               	subwf	fix_fft@nn,w,c
  2442  007472  5014               	movf	??_fix_fft+1,w,c
  2443  007474  5820               	subwfb	fix_fft@nn+1,w,c
  2444  007476  5015               	movf	??_fix_fft+2,w,c
  2445  007478  5821               	subwfb	fix_fft@nn+2,w,c
  2446  00747A  5016               	movf	??_fix_fft+3,w,c
  2447  00747C  0A80               	xorlw	128
  2448  00747E  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2449  007480  B0D8               	btfsc	status,0,c
  2450  007482  D725               	goto	l113
  2451                           
  2452                           ;fft.c: 184: }
  2453                           ;fft.c: 186: l = 1;
  2454  007484  0E01               	movlw	1
  2455  007486  6E41               	movwf	fix_fft@l,c
  2456  007488  0E00               	movlw	0
  2457  00748A  6E42               	movwf	fix_fft@l+1,c
  2458  00748C  0E00               	movlw	0
  2459  00748E  6E43               	movwf	fix_fft@l+2,c
  2460  007490  0E00               	movlw	0
  2461  007492  6E44               	movwf	fix_fft@l+3,c
  2462                           
  2463                           ;fft.c: 187: k = 10-1;
  2464  007494  0E09               	movlw	9
  2465  007496  6E1B               	movwf	fix_fft@k,c
  2466  007498  0E00               	movlw	0
  2467  00749A  6E1C               	movwf	fix_fft@k+1,c
  2468  00749C  0E00               	movlw	0
  2469  00749E  6E1D               	movwf	fix_fft@k+2,c
  2470  0074A0  0E00               	movlw	0
  2471  0074A2  6E1E               	movwf	fix_fft@k+3,c
  2472                           
  2473                           ;fft.c: 189: while (l < n)
  2474  0074A4  D29D               	goto	l119
  2475  0074A6                     l1191:
  2476                           
  2477                           ;fft.c: 190: {
  2478                           ;fft.c: 203: long int c;
  2479                           ;fft.c: 204: short b;
  2480                           ;fft.c: 206: istep = l << 1;
  2481  0074A6  90D8               	bcf	status,0,c
  2482  0074A8  3441               	rlcf	fix_fft@l,w,c
  2483  0074AA  6E23               	movwf	fix_fft@istep,c
  2484  0074AC  3442               	rlcf	fix_fft@l+1,w,c
  2485  0074AE  6E24               	movwf	fix_fft@istep+1,c
  2486  0074B0  3443               	rlcf	fix_fft@l+2,w,c
  2487  0074B2  6E25               	movwf	fix_fft@istep+2,c
  2488  0074B4  3444               	rlcf	fix_fft@l+3,w,c
  2489  0074B6  6E26               	movwf	fix_fft@istep+3,c
  2490                           
  2491                           ;fft.c: 207: for (m=0; m<l; ++m)
  2492  0074B8  0E00               	movlw	0
  2493  0074BA  6E12               	movwf	fix_fft@m+1,c
  2494  0074BC  0E00               	movlw	0
  2495  0074BE  6E11               	movwf	fix_fft@m,c
  2496  0074C0  D268               	goto	l1251
  2497  0074C2                     l1195:
  2498                           
  2499                           ;fft.c: 208: {
  2500                           ;fft.c: 209: j = m << k;
  2501  0074C2  C01B  F013         	movff	fix_fft@k,??_fix_fft
  2502  0074C6  C011  F014         	movff	fix_fft@m,??_fix_fft+1
  2503  0074CA  C012  F015         	movff	fix_fft@m+1,??_fix_fft+2
  2504  0074CE  2A13               	incf	??_fix_fft,f,c
  2505  0074D0  D003               	goto	u614
  2506  0074D2                     u615:
  2507  0074D2  90D8               	bcf	status,0,c
  2508  0074D4  3614               	rlcf	??_fix_fft+1,f,c
  2509  0074D6  3615               	rlcf	??_fix_fft+2,f,c
  2510  0074D8                     u614:
  2511  0074D8  2E13               	decfsz	??_fix_fft,f,c
  2512  0074DA  D7FB               	goto	u615
  2513  0074DC  C014  F045         	movff	??_fix_fft+1,fix_fft@j
  2514  0074E0  C015  F046         	movff	??_fix_fft+2,fix_fft@j+1
  2515  0074E4  0E00               	movlw	0
  2516  0074E6  BE46               	btfsc	fix_fft@j+1,7,c
  2517  0074E8  0EFF               	movlw	-1
  2518  0074EA  6E47               	movwf	fix_fft@j+2,c
  2519  0074EC  6E48               	movwf	fix_fft@j+3,c
  2520                           
  2521                           ;fft.c: 211: wr = Sinewave[j+1024/4];
  2522  0074EE  0E00               	movlw	0
  2523  0074F0  6E13               	movwf	??_fix_fft& (0+255),c
  2524  0074F2  0E02               	movlw	2
  2525  0074F4  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2526  0074F6  C045  F015         	movff	fix_fft@j,??_fix_fft+2
  2527  0074FA  C046  F016         	movff	fix_fft@j+1,??_fix_fft+3
  2528  0074FE  90D8               	bcf	status,0,c
  2529  007500  3615               	rlcf	??_fix_fft+2,f,c
  2530  007502  3616               	rlcf	??_fix_fft+3,f,c
  2531  007504  5013               	movf	??_fix_fft,w,c
  2532  007506  2615               	addwf	??_fix_fft+2,f,c
  2533  007508  5014               	movf	??_fix_fft+1,w,c
  2534  00750A  2216               	addwfc	??_fix_fft+3,f,c
  2535  00750C  0EFF               	movlw	low _Sinewave
  2536  00750E  2415               	addwf	??_fix_fft+2,w,c
  2537  007510  6EF6               	movwf	tblptrl,c
  2538  007512  0E79               	movlw	high _Sinewave
  2539  007514  2016               	addwfc	??_fix_fft+3,w,c
  2540  007516  6EF7               	movwf	tblptrh,c
  2541  007518                     	if	0	;There are less than 3 active tblptr bytes
  2542  007518                     	endif
  2543  007518  0009               	tblrd		*+
  2544  00751A  CFF5 F02B          	movff	tablat,fix_fft@wr
  2545  00751E  000A               	tblrd		*-
  2546  007520  CFF5 F02C          	movff	tablat,fix_fft@wr+1
  2547                           
  2548                           ;fft.c: 212: wi = -Sinewave[j];
  2549  007524  C045  F013         	movff	fix_fft@j,??_fix_fft
  2550  007528  C046  F014         	movff	fix_fft@j+1,??_fix_fft+1
  2551  00752C  90D8               	bcf	status,0,c
  2552  00752E  3613               	rlcf	??_fix_fft,f,c
  2553  007530  3614               	rlcf	??_fix_fft+1,f,c
  2554  007532  0EFF               	movlw	low _Sinewave
  2555  007534  2413               	addwf	??_fix_fft,w,c
  2556  007536  6EF6               	movwf	tblptrl,c
  2557  007538  0E79               	movlw	high _Sinewave
  2558  00753A  2014               	addwfc	??_fix_fft+1,w,c
  2559  00753C  6EF7               	movwf	tblptrh,c
  2560  00753E                     	if	0	;There are less than 3 active tblptr bytes
  2561  00753E                     	endif
  2562  00753E  0009               	tblrd		*+
  2563  007540  CFF5 F015          	movff	tablat,??_fix_fft+2
  2564  007544  0009               	tblrd		*+
  2565  007546  CFF5 F016          	movff	tablat,??_fix_fft+3
  2566  00754A  1E15               	comf	??_fix_fft+2,f,c
  2567  00754C  1E16               	comf	??_fix_fft+3,f,c
  2568  00754E  4A15               	infsnz	??_fix_fft+2,f,c
  2569  007550  2A16               	incf	??_fix_fft+3,f,c
  2570  007552  C015  F02D         	movff	??_fix_fft+2,fix_fft@wi
  2571  007556  C016  F02E         	movff	??_fix_fft+3,fix_fft@wi+1
  2572                           
  2573                           ;fft.c: 214: wr >>= 1;
  2574  00755A  342C               	rlcf	fix_fft@wr+1,w,c
  2575  00755C  322C               	rrcf	fix_fft@wr+1,f,c
  2576  00755E  322B               	rrcf	fix_fft@wr,f,c
  2577                           
  2578                           ;fft.c: 215: wi >>= 1;
  2579  007560  342E               	rlcf	fix_fft@wi+1,w,c
  2580  007562  322E               	rrcf	fix_fft@wi+1,f,c
  2581  007564  322D               	rrcf	fix_fft@wi,f,c
  2582                           
  2583                           ;fft.c: 217: for (i=m; i<n; i+=istep)
  2584  007566  C011  F039         	movff	fix_fft@m,fix_fft@i
  2585  00756A  C012  F03A         	movff	fix_fft@m+1,fix_fft@i+1
  2586  00756E  0E00               	movlw	0
  2587  007570  BE3A               	btfsc	fix_fft@i+1,7,c
  2588  007572  0EFF               	movlw	-1
  2589  007574  6E3B               	movwf	fix_fft@i+2,c
  2590  007576  6E3C               	movwf	fix_fft@i+3,c
  2591  007578  D1FC               	goto	l1247
  2592  00757A                     l1203:
  2593                           
  2594                           ;fft.c: 218: {
  2595                           ;fft.c: 219: j = i + l;
  2596  00757A  5041               	movf	fix_fft@l,w,c
  2597  00757C  2439               	addwf	fix_fft@i,w,c
  2598  00757E  6E45               	movwf	fix_fft@j,c
  2599  007580  5042               	movf	fix_fft@l+1,w,c
  2600  007582  203A               	addwfc	fix_fft@i+1,w,c
  2601  007584  6E46               	movwf	fix_fft@j+1,c
  2602  007586  5043               	movf	fix_fft@l+2,w,c
  2603  007588  203B               	addwfc	fix_fft@i+2,w,c
  2604  00758A  6E47               	movwf	fix_fft@j+2,c
  2605  00758C  5044               	movf	fix_fft@l+3,w,c
  2606  00758E  203C               	addwfc	fix_fft@i+3,w,c
  2607  007590  6E48               	movwf	fix_fft@j+3,c
  2608                           
  2609                           ;fft.c: 227: c = ((long int)wr * (long int)fr[j]);
  2610  007592  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2611  007596  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2612  00759A  0E00               	movlw	0
  2613  00759C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2614  00759E  0EFF               	movlw	-1
  2615  0075A0  6E03               	movwf	___lmul@multiplier+2,c
  2616  0075A2  6E04               	movwf	___lmul@multiplier+3,c
  2617  0075A4  90D8               	bcf	status,0,c
  2618  0075A6  3445               	rlcf	fix_fft@j,w,c
  2619  0075A8  6ED9               	movwf	fsr2l,c
  2620  0075AA  3446               	rlcf	fix_fft@j+1,w,c
  2621  0075AC  6EDA               	movwf	fsr2h,c
  2622  0075AE  500D               	movf	fix_fft@fr,w,c
  2623  0075B0  26D9               	addwf	fsr2l,f,c
  2624  0075B2  500E               	movf	fix_fft@fr+1,w,c
  2625  0075B4  22DA               	addwfc	fsr2h,f,c
  2626  0075B6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2627  0075BA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2628  0075BE  0E00               	movlw	0
  2629  0075C0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2630  0075C2  0EFF               	movlw	-1
  2631  0075C4  6E07               	movwf	___lmul@multiplicand+2,c
  2632  0075C6  6E08               	movwf	___lmul@multiplicand+3,c
  2633  0075C8  EC60  F036         	call	___lmul	;wreg free
  2634  0075CC  C001  F049         	movff	?___lmul,fix_fft@c
  2635  0075D0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2636  0075D4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2637  0075D8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2638                           
  2639                           ;fft.c: 228: c = c >> 14;
  2640  0075DC  0E0E               	movlw	14
  2641  0075DE  6E13               	movwf	??_fix_fft& (0+255),c
  2642  0075E0  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2643  0075E4  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2644  0075E8  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2645  0075EC  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2646  0075F0                     u625:
  2647  0075F0  6613               	tstfsz	??_fix_fft,c
  2648  0075F2  D001               	goto	u626
  2649  0075F4  D007               	goto	u627
  2650  0075F6                     u626:
  2651  0075F6  3417               	rlcf	??_fix_fft+4,w,c
  2652  0075F8  3217               	rrcf	??_fix_fft+4,f,c
  2653  0075FA  3216               	rrcf	??_fix_fft+3,f,c
  2654  0075FC  3215               	rrcf	??_fix_fft+2,f,c
  2655  0075FE  3214               	rrcf	??_fix_fft+1,f,c
  2656  007600  2E13               	decfsz	??_fix_fft,f,c
  2657  007602  D7F6               	goto	u625
  2658  007604                     u627:
  2659  007604  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2660  007608  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2661  00760C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2662  007610  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2663                           
  2664                           ;fft.c: 229: b = c & 0x01;
  2665  007614  0E01               	movlw	1
  2666  007616  1449               	andwf	fix_fft@c,w,c
  2667  007618  6E37               	movwf	fix_fft@b,c
  2668  00761A  6A38               	clrf	fix_fft@b+1,c
  2669                           
  2670                           ;fft.c: 230: tr = (c >> 1) + b;
  2671  00761C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2672  007620  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2673  007624  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2674  007628  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2675  00762C  3416               	rlcf	??_fix_fft+3,w,c
  2676  00762E  3216               	rrcf	??_fix_fft+3,f,c
  2677  007630  3215               	rrcf	??_fix_fft+2,f,c
  2678  007632  3214               	rrcf	??_fix_fft+1,f,c
  2679  007634  3213               	rrcf	??_fix_fft,f,c
  2680  007636  5037               	movf	fix_fft@b,w,c
  2681  007638  2413               	addwf	??_fix_fft,w,c
  2682  00763A  6E33               	movwf	fix_fft@tr,c
  2683  00763C  5038               	movf	fix_fft@b+1,w,c
  2684  00763E  2014               	addwfc	??_fix_fft+1,w,c
  2685  007640  6E34               	movwf	fix_fft@tr+1,c
  2686                           
  2687                           ;fft.c: 232: c = ((long int)wi * (long int)fi[j]);
  2688  007642  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2689  007646  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2690  00764A  0E00               	movlw	0
  2691  00764C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2692  00764E  0EFF               	movlw	-1
  2693  007650  6E03               	movwf	___lmul@multiplier+2,c
  2694  007652  6E04               	movwf	___lmul@multiplier+3,c
  2695  007654  90D8               	bcf	status,0,c
  2696  007656  3445               	rlcf	fix_fft@j,w,c
  2697  007658  6ED9               	movwf	fsr2l,c
  2698  00765A  3446               	rlcf	fix_fft@j+1,w,c
  2699  00765C  6EDA               	movwf	fsr2h,c
  2700  00765E  500F               	movf	fix_fft@fi,w,c
  2701  007660  26D9               	addwf	fsr2l,f,c
  2702  007662  5010               	movf	fix_fft@fi+1,w,c
  2703  007664  22DA               	addwfc	fsr2h,f,c
  2704  007666  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2705  00766A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2706  00766E  0E00               	movlw	0
  2707  007670  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2708  007672  0EFF               	movlw	-1
  2709  007674  6E07               	movwf	___lmul@multiplicand+2,c
  2710  007676  6E08               	movwf	___lmul@multiplicand+3,c
  2711  007678  EC60  F036         	call	___lmul	;wreg free
  2712  00767C  C001  F049         	movff	?___lmul,fix_fft@c
  2713  007680  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2714  007684  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2715  007688  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2716                           
  2717                           ;fft.c: 233: c = c >> 14;
  2718  00768C  0E0E               	movlw	14
  2719  00768E  6E13               	movwf	??_fix_fft& (0+255),c
  2720  007690  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2721  007694  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2722  007698  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2723  00769C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2724  0076A0                     u635:
  2725  0076A0  6613               	tstfsz	??_fix_fft,c
  2726  0076A2  D001               	goto	u636
  2727  0076A4  D007               	goto	u637
  2728  0076A6                     u636:
  2729  0076A6  3417               	rlcf	??_fix_fft+4,w,c
  2730  0076A8  3217               	rrcf	??_fix_fft+4,f,c
  2731  0076AA  3216               	rrcf	??_fix_fft+3,f,c
  2732  0076AC  3215               	rrcf	??_fix_fft+2,f,c
  2733  0076AE  3214               	rrcf	??_fix_fft+1,f,c
  2734  0076B0  2E13               	decfsz	??_fix_fft,f,c
  2735  0076B2  D7F6               	goto	u635
  2736  0076B4                     u637:
  2737  0076B4  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2738  0076B8  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2739  0076BC  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2740  0076C0  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2741                           
  2742                           ;fft.c: 234: b = c & 0x01;
  2743  0076C4  0E01               	movlw	1
  2744  0076C6  1449               	andwf	fix_fft@c,w,c
  2745  0076C8  6E37               	movwf	fix_fft@b,c
  2746  0076CA  6A38               	clrf	fix_fft@b+1,c
  2747                           
  2748                           ;fft.c: 235: tr = tr - ((c >> 1) + b);
  2749  0076CC  C049  F013         	movff	fix_fft@c,??_fix_fft
  2750  0076D0  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2751  0076D4  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2752  0076D8  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2753  0076DC  3416               	rlcf	??_fix_fft+3,w,c
  2754  0076DE  3216               	rrcf	??_fix_fft+3,f,c
  2755  0076E0  3215               	rrcf	??_fix_fft+2,f,c
  2756  0076E2  3214               	rrcf	??_fix_fft+1,f,c
  2757  0076E4  3213               	rrcf	??_fix_fft,f,c
  2758  0076E6  5037               	movf	fix_fft@b,w,c
  2759  0076E8  2613               	addwf	??_fix_fft,f,c
  2760  0076EA  5038               	movf	fix_fft@b+1,w,c
  2761  0076EC  2214               	addwfc	??_fix_fft+1,f,c
  2762  0076EE  1E13               	comf	??_fix_fft,f,c
  2763  0076F0  1E14               	comf	??_fix_fft+1,f,c
  2764  0076F2  4A13               	infsnz	??_fix_fft,f,c
  2765  0076F4  2A14               	incf	??_fix_fft+1,f,c
  2766  0076F6  5033               	movf	fix_fft@tr,w,c
  2767  0076F8  2413               	addwf	??_fix_fft,w,c
  2768  0076FA  6E33               	movwf	fix_fft@tr,c
  2769  0076FC  5034               	movf	fix_fft@tr+1,w,c
  2770  0076FE  2014               	addwfc	??_fix_fft+1,w,c
  2771  007700  6E34               	movwf	fix_fft@tr+1,c
  2772                           
  2773                           ;fft.c: 238: c = ((long int)wr * (long int)fi[j]);
  2774  007702  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2775  007706  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2776  00770A  0E00               	movlw	0
  2777  00770C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2778  00770E  0EFF               	movlw	-1
  2779  007710  6E03               	movwf	___lmul@multiplier+2,c
  2780  007712  6E04               	movwf	___lmul@multiplier+3,c
  2781  007714  90D8               	bcf	status,0,c
  2782  007716  3445               	rlcf	fix_fft@j,w,c
  2783  007718  6ED9               	movwf	fsr2l,c
  2784  00771A  3446               	rlcf	fix_fft@j+1,w,c
  2785  00771C  6EDA               	movwf	fsr2h,c
  2786  00771E  500F               	movf	fix_fft@fi,w,c
  2787  007720  26D9               	addwf	fsr2l,f,c
  2788  007722  5010               	movf	fix_fft@fi+1,w,c
  2789  007724  22DA               	addwfc	fsr2h,f,c
  2790  007726  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2791  00772A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2792  00772E  0E00               	movlw	0
  2793  007730  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2794  007732  0EFF               	movlw	-1
  2795  007734  6E07               	movwf	___lmul@multiplicand+2,c
  2796  007736  6E08               	movwf	___lmul@multiplicand+3,c
  2797  007738  EC60  F036         	call	___lmul	;wreg free
  2798  00773C  C001  F049         	movff	?___lmul,fix_fft@c
  2799  007740  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2800  007744  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2801  007748  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2802                           
  2803                           ;fft.c: 239: c = c >> 14;
  2804  00774C  0E0E               	movlw	14
  2805  00774E  6E13               	movwf	??_fix_fft& (0+255),c
  2806  007750  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2807  007754  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2808  007758  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2809  00775C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2810  007760                     u645:
  2811  007760  6613               	tstfsz	??_fix_fft,c
  2812  007762  D001               	goto	u646
  2813  007764  D007               	goto	u647
  2814  007766                     u646:
  2815  007766  3417               	rlcf	??_fix_fft+4,w,c
  2816  007768  3217               	rrcf	??_fix_fft+4,f,c
  2817  00776A  3216               	rrcf	??_fix_fft+3,f,c
  2818  00776C  3215               	rrcf	??_fix_fft+2,f,c
  2819  00776E  3214               	rrcf	??_fix_fft+1,f,c
  2820  007770  2E13               	decfsz	??_fix_fft,f,c
  2821  007772  D7F6               	goto	u645
  2822  007774                     u647:
  2823  007774  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2824  007778  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2825  00777C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2826  007780  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2827                           
  2828                           ;fft.c: 240: b = c & 0x01;
  2829  007784  0E01               	movlw	1
  2830  007786  1449               	andwf	fix_fft@c,w,c
  2831  007788  6E37               	movwf	fix_fft@b,c
  2832  00778A  6A38               	clrf	fix_fft@b+1,c
  2833                           
  2834                           ;fft.c: 241: ti = (c >> 1) + b;
  2835  00778C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2836  007790  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2837  007794  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2838  007798  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2839  00779C  3416               	rlcf	??_fix_fft+3,w,c
  2840  00779E  3216               	rrcf	??_fix_fft+3,f,c
  2841  0077A0  3215               	rrcf	??_fix_fft+2,f,c
  2842  0077A2  3214               	rrcf	??_fix_fft+1,f,c
  2843  0077A4  3213               	rrcf	??_fix_fft,f,c
  2844  0077A6  5037               	movf	fix_fft@b,w,c
  2845  0077A8  2413               	addwf	??_fix_fft,w,c
  2846  0077AA  6E35               	movwf	fix_fft@ti,c
  2847  0077AC  5038               	movf	fix_fft@b+1,w,c
  2848  0077AE  2014               	addwfc	??_fix_fft+1,w,c
  2849  0077B0  6E36               	movwf	fix_fft@ti+1,c
  2850                           
  2851                           ;fft.c: 243: c = ((long int)wi * (long int)fr[j]);
  2852  0077B2  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2853  0077B6  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2854  0077BA  0E00               	movlw	0
  2855  0077BC  BE02               	btfsc	___lmul@multiplier+1,7,c
  2856  0077BE  0EFF               	movlw	-1
  2857  0077C0  6E03               	movwf	___lmul@multiplier+2,c
  2858  0077C2  6E04               	movwf	___lmul@multiplier+3,c
  2859  0077C4  90D8               	bcf	status,0,c
  2860  0077C6  3445               	rlcf	fix_fft@j,w,c
  2861  0077C8  6ED9               	movwf	fsr2l,c
  2862  0077CA  3446               	rlcf	fix_fft@j+1,w,c
  2863  0077CC  6EDA               	movwf	fsr2h,c
  2864  0077CE  500D               	movf	fix_fft@fr,w,c
  2865  0077D0  26D9               	addwf	fsr2l,f,c
  2866  0077D2  500E               	movf	fix_fft@fr+1,w,c
  2867  0077D4  22DA               	addwfc	fsr2h,f,c
  2868  0077D6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2869  0077DA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2870  0077DE  0E00               	movlw	0
  2871  0077E0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2872  0077E2  0EFF               	movlw	-1
  2873  0077E4  6E07               	movwf	___lmul@multiplicand+2,c
  2874  0077E6  6E08               	movwf	___lmul@multiplicand+3,c
  2875  0077E8  EC60  F036         	call	___lmul	;wreg free
  2876  0077EC  C001  F049         	movff	?___lmul,fix_fft@c
  2877  0077F0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2878  0077F4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2879  0077F8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2880                           
  2881                           ;fft.c: 244: c = c >> 14;
  2882  0077FC  0E0E               	movlw	14
  2883  0077FE  6E13               	movwf	??_fix_fft& (0+255),c
  2884  007800  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2885  007804  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2886  007808  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2887  00780C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2888  007810                     u655:
  2889  007810  6613               	tstfsz	??_fix_fft,c
  2890  007812  D001               	goto	u656
  2891  007814  D007               	goto	u657
  2892  007816                     u656:
  2893  007816  3417               	rlcf	??_fix_fft+4,w,c
  2894  007818  3217               	rrcf	??_fix_fft+4,f,c
  2895  00781A  3216               	rrcf	??_fix_fft+3,f,c
  2896  00781C  3215               	rrcf	??_fix_fft+2,f,c
  2897  00781E  3214               	rrcf	??_fix_fft+1,f,c
  2898  007820  2E13               	decfsz	??_fix_fft,f,c
  2899  007822  D7F6               	goto	u655
  2900  007824                     u657:
  2901  007824  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2902  007828  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2903  00782C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2904  007830  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2905                           
  2906                           ;fft.c: 245: b = c & 0x01;
  2907  007834  0E01               	movlw	1
  2908  007836  1449               	andwf	fix_fft@c,w,c
  2909  007838  6E37               	movwf	fix_fft@b,c
  2910  00783A  6A38               	clrf	fix_fft@b+1,c
  2911                           
  2912                           ;fft.c: 246: ti = ti + ((c >> 1) + b);
  2913  00783C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2914  007840  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2915  007844  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2916  007848  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2917  00784C  3416               	rlcf	??_fix_fft+3,w,c
  2918  00784E  3216               	rrcf	??_fix_fft+3,f,c
  2919  007850  3215               	rrcf	??_fix_fft+2,f,c
  2920  007852  3214               	rrcf	??_fix_fft+1,f,c
  2921  007854  3213               	rrcf	??_fix_fft,f,c
  2922  007856  5037               	movf	fix_fft@b,w,c
  2923  007858  2613               	addwf	??_fix_fft,f,c
  2924  00785A  5038               	movf	fix_fft@b+1,w,c
  2925  00785C  2214               	addwfc	??_fix_fft+1,f,c
  2926  00785E  5035               	movf	fix_fft@ti,w,c
  2927  007860  2413               	addwf	??_fix_fft,w,c
  2928  007862  6E35               	movwf	fix_fft@ti,c
  2929  007864  5036               	movf	fix_fft@ti+1,w,c
  2930  007866  2014               	addwfc	??_fix_fft+1,w,c
  2931  007868  6E36               	movwf	fix_fft@ti+1,c
  2932                           
  2933                           ;fft.c: 248: qr = fr[i];
  2934  00786A  90D8               	bcf	status,0,c
  2935  00786C  3439               	rlcf	fix_fft@i,w,c
  2936  00786E  6ED9               	movwf	fsr2l,c
  2937  007870  343A               	rlcf	fix_fft@i+1,w,c
  2938  007872  6EDA               	movwf	fsr2h,c
  2939  007874  500D               	movf	fix_fft@fr,w,c
  2940  007876  26D9               	addwf	fsr2l,f,c
  2941  007878  500E               	movf	fix_fft@fr+1,w,c
  2942  00787A  22DA               	addwfc	fsr2h,f,c
  2943  00787C  CFDE F027          	movff	postinc2,fix_fft@qr
  2944  007880  CFDD F028          	movff	postdec2,fix_fft@qr+1
  2945                           
  2946                           ;fft.c: 249: qi = fi[i];
  2947  007884  90D8               	bcf	status,0,c
  2948  007886  3439               	rlcf	fix_fft@i,w,c
  2949  007888  6ED9               	movwf	fsr2l,c
  2950  00788A  343A               	rlcf	fix_fft@i+1,w,c
  2951  00788C  6EDA               	movwf	fsr2h,c
  2952  00788E  500F               	movf	fix_fft@fi,w,c
  2953  007890  26D9               	addwf	fsr2l,f,c
  2954  007892  5010               	movf	fix_fft@fi+1,w,c
  2955  007894  22DA               	addwfc	fsr2h,f,c
  2956  007896  CFDE F029          	movff	postinc2,fix_fft@qi
  2957  00789A  CFDD F02A          	movff	postdec2,fix_fft@qi+1
  2958                           
  2959                           ;fft.c: 250: qr >>= 1;
  2960  00789E  3428               	rlcf	fix_fft@qr+1,w,c
  2961  0078A0  3228               	rrcf	fix_fft@qr+1,f,c
  2962  0078A2  3227               	rrcf	fix_fft@qr,f,c
  2963                           
  2964                           ;fft.c: 251: qi >>= 1;
  2965  0078A4  342A               	rlcf	fix_fft@qi+1,w,c
  2966  0078A6  322A               	rrcf	fix_fft@qi+1,f,c
  2967  0078A8  3229               	rrcf	fix_fft@qi,f,c
  2968                           
  2969                           ;fft.c: 253: fr[j] = qr - tr;
  2970  0078AA  C033  F013         	movff	fix_fft@tr,??_fix_fft
  2971  0078AE  C034  F014         	movff	fix_fft@tr+1,??_fix_fft+1
  2972  0078B2  1E13               	comf	??_fix_fft,f,c
  2973  0078B4  1E14               	comf	??_fix_fft+1,f,c
  2974  0078B6  4A13               	infsnz	??_fix_fft,f,c
  2975  0078B8  2A14               	incf	??_fix_fft+1,f,c
  2976  0078BA  5027               	movf	fix_fft@qr,w,c
  2977  0078BC  2613               	addwf	??_fix_fft,f,c
  2978  0078BE  5028               	movf	fix_fft@qr+1,w,c
  2979  0078C0  2214               	addwfc	??_fix_fft+1,f,c
  2980  0078C2  90D8               	bcf	status,0,c
  2981  0078C4  3445               	rlcf	fix_fft@j,w,c
  2982  0078C6  6ED9               	movwf	fsr2l,c
  2983  0078C8  3446               	rlcf	fix_fft@j+1,w,c
  2984  0078CA  6EDA               	movwf	fsr2h,c
  2985  0078CC  500D               	movf	fix_fft@fr,w,c
  2986  0078CE  26D9               	addwf	fsr2l,f,c
  2987  0078D0  500E               	movf	fix_fft@fr+1,w,c
  2988  0078D2  22DA               	addwfc	fsr2h,f,c
  2989  0078D4  C013  FFDE         	movff	??_fix_fft,postinc2
  2990  0078D8  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2991                           
  2992                           ;fft.c: 254: fi[j] = qi - ti;
  2993  0078DC  C035  F013         	movff	fix_fft@ti,??_fix_fft
  2994  0078E0  C036  F014         	movff	fix_fft@ti+1,??_fix_fft+1
  2995  0078E4  1E13               	comf	??_fix_fft,f,c
  2996  0078E6  1E14               	comf	??_fix_fft+1,f,c
  2997  0078E8  4A13               	infsnz	??_fix_fft,f,c
  2998  0078EA  2A14               	incf	??_fix_fft+1,f,c
  2999  0078EC  5029               	movf	fix_fft@qi,w,c
  3000  0078EE  2613               	addwf	??_fix_fft,f,c
  3001  0078F0  502A               	movf	fix_fft@qi+1,w,c
  3002  0078F2  2214               	addwfc	??_fix_fft+1,f,c
  3003  0078F4  90D8               	bcf	status,0,c
  3004  0078F6  3445               	rlcf	fix_fft@j,w,c
  3005  0078F8  6ED9               	movwf	fsr2l,c
  3006  0078FA  3446               	rlcf	fix_fft@j+1,w,c
  3007  0078FC  6EDA               	movwf	fsr2h,c
  3008  0078FE  500F               	movf	fix_fft@fi,w,c
  3009  007900  26D9               	addwf	fsr2l,f,c
  3010  007902  5010               	movf	fix_fft@fi+1,w,c
  3011  007904  22DA               	addwfc	fsr2h,f,c
  3012  007906  C013  FFDE         	movff	??_fix_fft,postinc2
  3013  00790A  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3014                           
  3015                           ;fft.c: 255: fr[i] = qr + tr;
  3016  00790E  C027  F013         	movff	fix_fft@qr,??_fix_fft
  3017  007912  C028  F014         	movff	fix_fft@qr+1,??_fix_fft+1
  3018  007916  5033               	movf	fix_fft@tr,w,c
  3019  007918  2613               	addwf	??_fix_fft,f,c
  3020  00791A  5034               	movf	fix_fft@tr+1,w,c
  3021  00791C  2214               	addwfc	??_fix_fft+1,f,c
  3022  00791E  90D8               	bcf	status,0,c
  3023  007920  3439               	rlcf	fix_fft@i,w,c
  3024  007922  6ED9               	movwf	fsr2l,c
  3025  007924  343A               	rlcf	fix_fft@i+1,w,c
  3026  007926  6EDA               	movwf	fsr2h,c
  3027  007928  500D               	movf	fix_fft@fr,w,c
  3028  00792A  26D9               	addwf	fsr2l,f,c
  3029  00792C  500E               	movf	fix_fft@fr+1,w,c
  3030  00792E  22DA               	addwfc	fsr2h,f,c
  3031  007930  C013  FFDE         	movff	??_fix_fft,postinc2
  3032  007934  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3033                           
  3034                           ;fft.c: 256: fi[i] = qi + ti;
  3035  007938  C029  F013         	movff	fix_fft@qi,??_fix_fft
  3036  00793C  C02A  F014         	movff	fix_fft@qi+1,??_fix_fft+1
  3037  007940  5035               	movf	fix_fft@ti,w,c
  3038  007942  2613               	addwf	??_fix_fft,f,c
  3039  007944  5036               	movf	fix_fft@ti+1,w,c
  3040  007946  2214               	addwfc	??_fix_fft+1,f,c
  3041  007948  90D8               	bcf	status,0,c
  3042  00794A  3439               	rlcf	fix_fft@i,w,c
  3043  00794C  6ED9               	movwf	fsr2l,c
  3044  00794E  343A               	rlcf	fix_fft@i+1,w,c
  3045  007950  6EDA               	movwf	fsr2h,c
  3046  007952  500F               	movf	fix_fft@fi,w,c
  3047  007954  26D9               	addwf	fsr2l,f,c
  3048  007956  5010               	movf	fix_fft@fi+1,w,c
  3049  007958  22DA               	addwfc	fsr2h,f,c
  3050  00795A  C013  FFDE         	movff	??_fix_fft,postinc2
  3051  00795E  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3052  007962  5023               	movf	fix_fft@istep,w,c
  3053  007964  2639               	addwf	fix_fft@i,f,c
  3054  007966  5024               	movf	fix_fft@istep+1,w,c
  3055  007968  223A               	addwfc	fix_fft@i+1,f,c
  3056  00796A  5025               	movf	fix_fft@istep+2,w,c
  3057  00796C  223B               	addwfc	fix_fft@i+2,f,c
  3058  00796E  5026               	movf	fix_fft@istep+3,w,c
  3059  007970  223C               	addwfc	fix_fft@i+3,f,c
  3060  007972                     l1247:
  3061  007972  503C               	movf	fix_fft@i+3,w,c
  3062  007974  0A80               	xorlw	128
  3063  007976  6E13               	movwf	??_fix_fft& (0+255),c
  3064  007978  502F               	movf	fix_fft@n,w,c
  3065  00797A  5C39               	subwf	fix_fft@i,w,c
  3066  00797C  5030               	movf	fix_fft@n+1,w,c
  3067  00797E  583A               	subwfb	fix_fft@i+1,w,c
  3068  007980  5031               	movf	fix_fft@n+2,w,c
  3069  007982  583B               	subwfb	fix_fft@i+2,w,c
  3070  007984  5032               	movf	fix_fft@n+3,w,c
  3071  007986  0A80               	xorlw	128
  3072  007988  5813               	subwfb	??_fix_fft& (0+255),w,c
  3073  00798A  A0D8               	btfss	status,0,c
  3074  00798C  D5F6               	goto	l1203
  3075  00798E  4A11               	infsnz	fix_fft@m,f,c
  3076  007990  2A12               	incf	fix_fft@m+1,f,c
  3077  007992                     l1251:
  3078  007992  C011  F013         	movff	fix_fft@m,??_fix_fft
  3079  007996  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  3080  00799A  0E00               	movlw	0
  3081  00799C  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  3082  00799E  0EFF               	movlw	255
  3083  0079A0  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  3084  0079A2  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  3085  0079A4  5016               	movf	??_fix_fft+3,w,c
  3086  0079A6  0A80               	xorlw	128
  3087  0079A8  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  3088  0079AA  5041               	movf	fix_fft@l,w,c
  3089  0079AC  5C13               	subwf	??_fix_fft,w,c
  3090  0079AE  5042               	movf	fix_fft@l+1,w,c
  3091  0079B0  5814               	subwfb	??_fix_fft+1,w,c
  3092  0079B2  5043               	movf	fix_fft@l+2,w,c
  3093  0079B4  5815               	subwfb	??_fix_fft+2,w,c
  3094  0079B6  5044               	movf	fix_fft@l+3,w,c
  3095  0079B8  0A80               	xorlw	128
  3096  0079BA  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  3097  0079BC  A0D8               	btfss	status,0,c
  3098  0079BE  D581               	goto	l1195
  3099                           
  3100                           ;fft.c: 257: }
  3101                           ;fft.c: 258: }
  3102                           ;fft.c: 260: --k;
  3103  0079C0  0EFF               	movlw	255
  3104  0079C2  261B               	addwf	fix_fft@k,f,c
  3105  0079C4  0EFF               	movlw	255
  3106  0079C6  221C               	addwfc	fix_fft@k+1,f,c
  3107  0079C8  0EFF               	movlw	255
  3108  0079CA  221D               	addwfc	fix_fft@k+2,f,c
  3109  0079CC  0EFF               	movlw	255
  3110  0079CE  221E               	addwfc	fix_fft@k+3,f,c
  3111                           
  3112                           ;fft.c: 261: l = istep;
  3113  0079D0  C023  F041         	movff	fix_fft@istep,fix_fft@l
  3114  0079D4  C024  F042         	movff	fix_fft@istep+1,fix_fft@l+1
  3115  0079D8  C025  F043         	movff	fix_fft@istep+2,fix_fft@l+2
  3116  0079DC  C026  F044         	movff	fix_fft@istep+3,fix_fft@l+3
  3117  0079E0                     l119:
  3118  0079E0  5044               	movf	fix_fft@l+3,w,c
  3119  0079E2  0A80               	xorlw	128
  3120  0079E4  6E13               	movwf	??_fix_fft& (0+255),c
  3121  0079E6  502F               	movf	fix_fft@n,w,c
  3122  0079E8  5C41               	subwf	fix_fft@l,w,c
  3123  0079EA  5030               	movf	fix_fft@n+1,w,c
  3124  0079EC  5842               	subwfb	fix_fft@l+1,w,c
  3125  0079EE  5031               	movf	fix_fft@n+2,w,c
  3126  0079F0  5843               	subwfb	fix_fft@l+2,w,c
  3127  0079F2  5032               	movf	fix_fft@n+3,w,c
  3128  0079F4  0A80               	xorlw	128
  3129  0079F6  5813               	subwfb	??_fix_fft& (0+255),w,c
  3130  0079F8  B0D8               	btfsc	status,0,c
  3131  0079FA  0012               	return	
  3132  0079FC  D554               	goto	l1191
  3133  0079FE                     __end_of_fix_fft:
  3134                           	opt stack 0
  3135                           tblptru	equ	0xFF8
  3136                           tblptrh	equ	0xFF7
  3137                           tblptrl	equ	0xFF6
  3138                           tablat	equ	0xFF5
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           postinc1	equ	0xFE6
  3142                           postdec1	equ	0xFE5
  3143                           fsr1h	equ	0xFE2
  3144                           fsr1l	equ	0xFE1
  3145                           indf2	equ	0xFDF
  3146                           postinc2	equ	0xFDE
  3147                           postdec2	equ	0xFDD
  3148                           fsr2h	equ	0xFDA
  3149                           fsr2l	equ	0xFD9
  3150                           status	equ	0xFD8
  3151                           
  3152 ;; *************** function ___lmul *****************
  3153 ;; Defined at:
  3154 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul32.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  multiplier      4    0[COMRAM] unsigned long 
  3157 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  product         4    8[COMRAM] unsigned long 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  4    0[COMRAM] unsigned long 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3169 ;;      Params:         8       0       0       0       0       0       0
  3170 ;;      Locals:         4       0       0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0
  3172 ;;      Totals:        12       0       0       0       0       0       0
  3173 ;;Total ram usage:       12 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_fix_fft
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text5
  3183  006CC0                     __ptext5:
  3184                           	opt stack 0
  3185  006CC0                     ___lmul:
  3186                           	opt stack 29
  3187                           
  3188                           ;incstack = 0
  3189  006CC0  0E00               	movlw	0
  3190  006CC2  6E09               	movwf	___lmul@product,c
  3191  006CC4  0E00               	movlw	0
  3192  006CC6  6E0A               	movwf	___lmul@product+1,c
  3193  006CC8  0E00               	movlw	0
  3194  006CCA  6E0B               	movwf	___lmul@product+2,c
  3195  006CCC  0E00               	movlw	0
  3196  006CCE  6E0C               	movwf	___lmul@product+3,c
  3197  006CD0                     l1097:
  3198  006CD0  A001               	btfss	___lmul@multiplier,0,c
  3199  006CD2  D008               	goto	l1101
  3200  006CD4  5005               	movf	___lmul@multiplicand,w,c
  3201  006CD6  2609               	addwf	___lmul@product,f,c
  3202  006CD8  5006               	movf	___lmul@multiplicand+1,w,c
  3203  006CDA  220A               	addwfc	___lmul@product+1,f,c
  3204  006CDC  5007               	movf	___lmul@multiplicand+2,w,c
  3205  006CDE  220B               	addwfc	___lmul@product+2,f,c
  3206  006CE0  5008               	movf	___lmul@multiplicand+3,w,c
  3207  006CE2  220C               	addwfc	___lmul@product+3,f,c
  3208  006CE4                     l1101:
  3209  006CE4  90D8               	bcf	status,0,c
  3210  006CE6  3605               	rlcf	___lmul@multiplicand,f,c
  3211  006CE8  3606               	rlcf	___lmul@multiplicand+1,f,c
  3212  006CEA  3607               	rlcf	___lmul@multiplicand+2,f,c
  3213  006CEC  3608               	rlcf	___lmul@multiplicand+3,f,c
  3214  006CEE  90D8               	bcf	status,0,c
  3215  006CF0  3204               	rrcf	___lmul@multiplier+3,f,c
  3216  006CF2  3203               	rrcf	___lmul@multiplier+2,f,c
  3217  006CF4  3202               	rrcf	___lmul@multiplier+1,f,c
  3218  006CF6  3201               	rrcf	___lmul@multiplier,f,c
  3219  006CF8  5004               	movf	___lmul@multiplier+3,w,c
  3220  006CFA  1001               	iorwf	___lmul@multiplier,w,c
  3221  006CFC  1002               	iorwf	___lmul@multiplier+1,w,c
  3222  006CFE  1003               	iorwf	___lmul@multiplier+2,w,c
  3223  006D00  A4D8               	btfss	status,2,c
  3224  006D02  D7E6               	goto	l1097
  3225  006D04  C009  F001         	movff	___lmul@product,?___lmul
  3226  006D08  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3227  006D0C  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3228  006D10  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3229  006D14  0012               	return	
  3230  006D16                     __end_of___lmul:
  3231                           	opt stack 0
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           postinc0	equ	0xFEE
  3237                           wreg	equ	0xFE8
  3238                           postinc1	equ	0xFE6
  3239                           postdec1	equ	0xFE5
  3240                           fsr1h	equ	0xFE2
  3241                           fsr1l	equ	0xFE1
  3242                           indf2	equ	0xFDF
  3243                           postinc2	equ	0xFDE
  3244                           postdec2	equ	0xFDD
  3245                           fsr2h	equ	0xFDA
  3246                           fsr2l	equ	0xFD9
  3247                           status	equ	0xFD8
  3248                           
  3249 ;; *************** function ___wmul *****************
  3250 ;; Defined at:
  3251 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul16.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  multiplier      2    0[COMRAM] unsigned int 
  3254 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  product         2    4[COMRAM] unsigned int 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  2    0[COMRAM] unsigned int 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, prodl, prodh
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3266 ;;      Params:         4       0       0       0       0       0       0
  3267 ;;      Locals:         2       0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0
  3269 ;;      Totals:         6       0       0       0       0       0       0
  3270 ;;Total ram usage:        6 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_main
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text6
  3280  006BEE                     __ptext6:
  3281                           	opt stack 0
  3282  006BEE                     ___wmul:
  3283                           	opt stack 30
  3284                           
  3285                           ;incstack = 0
  3286  006BEE  5001               	movf	___wmul@multiplier,w,c
  3287  006BF0  0203               	mulwf	___wmul@multiplicand,c
  3288  006BF2  CFF3 F005          	movff	prodl,___wmul@product
  3289  006BF6  CFF4 F006          	movff	prodh,___wmul@product+1
  3290  006BFA  5001               	movf	___wmul@multiplier,w,c
  3291  006BFC  0204               	mulwf	___wmul@multiplicand+1,c
  3292  006BFE  50F3               	movf	prodl,w,c
  3293  006C00  2606               	addwf	___wmul@product+1,f,c
  3294  006C02  5002               	movf	___wmul@multiplier+1,w,c
  3295  006C04  0203               	mulwf	___wmul@multiplicand,c
  3296  006C06  50F3               	movf	prodl,w,c
  3297  006C08  2606               	addwf	___wmul@product+1,f,c
  3298  006C0A  C005  F001         	movff	___wmul@product,?___wmul
  3299  006C0E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3300  006C12  0012               	return	
  3301  006C14                     __end_of___wmul:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           postinc0	equ	0xFEE
  3310                           wreg	equ	0xFE8
  3311                           postinc1	equ	0xFE6
  3312                           postdec1	equ	0xFE5
  3313                           fsr1h	equ	0xFE2
  3314                           fsr1l	equ	0xFE1
  3315                           indf2	equ	0xFDF
  3316                           postinc2	equ	0xFDE
  3317                           postdec2	equ	0xFDD
  3318                           fsr2h	equ	0xFDA
  3319                           fsr2l	equ	0xFD9
  3320                           status	equ	0xFD8
  3321                           
  3322 ;; *************** function _OpenADC *****************
  3323 ;; Defined at:
  3324 ;;		line 305 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcopen.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  config          1    wreg     unsigned char 
  3327 ;;  config2         1    0[COMRAM] unsigned char 
  3328 ;;  config3         1    1[COMRAM] unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  config          1    4[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3340 ;;      Params:         2       0       0       0       0       0       0
  3341 ;;      Locals:         1       0       0       0       0       0       0
  3342 ;;      Temps:          2       0       0       0       0       0       0
  3343 ;;      Totals:         5       0       0       0       0       0       0
  3344 ;;Total ram usage:        5 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_main
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text7
  3354  006C72                     __ptext7:
  3355                           	opt stack 0
  3356  006C72                     _OpenADC:
  3357                           	opt stack 30
  3358                           
  3359                           ;incstack = 0
  3360                           ;OpenADC@config stored from wreg
  3361  006C72  6E05               	movwf	OpenADC@config,c
  3362  006C74  0E00               	movlw	0
  3363  006C76  6EC2               	movwf	4034,c	;volatile
  3364  006C78  0E00               	movlw	0
  3365  006C7A  6EC1               	movwf	4033,c	;volatile
  3366  006C7C  0E00               	movlw	0
  3367  006C7E  6EC0               	movwf	4032,c	;volatile
  3368  006C80  5001               	movf	OpenADC@config2,w,c
  3369  006C82  0B7C               	andlw	124
  3370  006C84  6EC2               	movwf	4034,c	;volatile
  3371  006C86  C002  FFC1         	movff	OpenADC@config3,4033	;volatile
  3372  006C8A  C005  F003         	movff	OpenADC@config,??_OpenADC
  3373  006C8E  90D8               	bcf	status,0,c
  3374  006C90  3603               	rlcf	??_OpenADC,f,c
  3375  006C92  90D8               	bcf	status,0,c
  3376  006C94  3603               	rlcf	??_OpenADC,f,c
  3377  006C96  0E38               	movlw	56
  3378  006C98  1603               	andwf	??_OpenADC,f,c
  3379  006C9A  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  3380  006C9E  3A04               	swapf	??_OpenADC+1,f,c
  3381  006CA0  0E0F               	movlw	15
  3382  006CA2  1604               	andwf	??_OpenADC+1,f,c
  3383  006CA4  0E07               	movlw	7
  3384  006CA6  1604               	andwf	??_OpenADC+1,f,c
  3385  006CA8  5005               	movf	OpenADC@config,w,c
  3386  006CAA  0B80               	andlw	128
  3387  006CAC  1004               	iorwf	??_OpenADC+1,w,c
  3388  006CAE  1003               	iorwf	??_OpenADC,w,c
  3389  006CB0  6EC0               	movwf	4032,c	;volatile
  3390  006CB2  AE01               	btfss	OpenADC@config2,7,c
  3391  006CB4  D003               	goto	l155
  3392  006CB6  9C9E               	bcf	3998,6,c	;volatile
  3393  006CB8  8C9D               	bsf	3997,6,c	;volatile
  3394  006CBA  8CF2               	bsf	intcon,6,c	;volatile
  3395  006CBC                     l155:
  3396  006CBC  80C2               	bsf	4034,0,c	;volatile
  3397  006CBE  0012               	return	
  3398  006CC0                     __end_of_OpenADC:
  3399                           	opt stack 0
  3400                           tblptru	equ	0xFF8
  3401                           tblptrh	equ	0xFF7
  3402                           tblptrl	equ	0xFF6
  3403                           tablat	equ	0xFF5
  3404                           prodh	equ	0xFF4
  3405                           prodl	equ	0xFF3
  3406                           intcon	equ	0xFF2
  3407                           postinc0	equ	0xFEE
  3408                           wreg	equ	0xFE8
  3409                           postinc1	equ	0xFE6
  3410                           postdec1	equ	0xFE5
  3411                           fsr1h	equ	0xFE2
  3412                           fsr1l	equ	0xFE1
  3413                           indf2	equ	0xFDF
  3414                           postinc2	equ	0xFDE
  3415                           postdec2	equ	0xFDD
  3416                           fsr2h	equ	0xFDA
  3417                           fsr2l	equ	0xFD9
  3418                           status	equ	0xFD8
  3419                           
  3420 ;; *************** function _Open1USART *****************
  3421 ;; Defined at:
  3422 ;;		line 124 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/USART/u1open.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  config          1    wreg     unsigned char 
  3425 ;;  spbrg           2    0[COMRAM] unsigned int 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  config          1    5[COMRAM] unsigned char 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;		None               void
  3430 ;; Registers used:
  3431 ;;		wreg, status,2
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3437 ;;      Params:         2       0       0       0       0       0       0
  3438 ;;      Locals:         1       0       0       0       0       0       0
  3439 ;;      Temps:          3       0       0       0       0       0       0
  3440 ;;      Totals:         6       0       0       0       0       0       0
  3441 ;;Total ram usage:        6 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_main
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text8
  3451  006D16                     __ptext8:
  3452                           	opt stack 0
  3453  006D16                     _Open1USART:
  3454                           	opt stack 30
  3455                           
  3456                           ;incstack = 0
  3457                           ;Open1USART@config stored from wreg
  3458  006D16  6E06               	movwf	Open1USART@config,c
  3459  006D18  0E00               	movlw	0
  3460  006D1A  6EAC               	movwf	4012,c	;volatile
  3461  006D1C  0E00               	movlw	0
  3462  006D1E  6EAB               	movwf	4011,c	;volatile
  3463  006D20  B006               	btfsc	Open1USART@config,0,c
  3464  006D22  88AC               	bsf	4012,4,c	;volatile
  3465  006D24  A206               	btfss	Open1USART@config,1,c
  3466  006D26  D002               	goto	l1127
  3467  006D28  8CAC               	bsf	4012,6,c	;volatile
  3468  006D2A  8CAB               	bsf	4011,6,c	;volatile
  3469  006D2C                     l1127:
  3470  006D2C  B406               	btfsc	Open1USART@config,2,c
  3471  006D2E  8EAC               	bsf	4012,7,c	;volatile
  3472  006D30  A606               	btfss	Open1USART@config,3,c
  3473  006D32  D002               	goto	l176
  3474  006D34  88AB               	bsf	4011,4,c	;volatile
  3475  006D36  D001               	goto	l1135
  3476  006D38                     l176:
  3477  006D38  8AAB               	bsf	4011,5,c	;volatile
  3478  006D3A                     l1135:
  3479  006D3A  B806               	btfsc	Open1USART@config,4,c
  3480  006D3C  84AC               	bsf	4012,2,c	;volatile
  3481  006D3E  BA06               	btfsc	Open1USART@config,5,c
  3482  006D40  86AB               	bsf	4011,3,c	;volatile
  3483  006D42  AC06               	btfss	Open1USART@config,6,c
  3484  006D44  D002               	goto	l180
  3485  006D46  8A9D               	bsf	3997,5,c	;volatile
  3486  006D48  D001               	goto	l1147
  3487  006D4A                     l180:
  3488  006D4A  9A9D               	bcf	3997,5,c	;volatile
  3489  006D4C                     l1147:
  3490  006D4C  AE06               	btfss	Open1USART@config,7,c
  3491  006D4E  D002               	goto	l182
  3492  006D50  889D               	bsf	3997,4,c	;volatile
  3493  006D52  D001               	goto	l183
  3494  006D54                     l182:
  3495  006D54  989D               	bcf	3997,4,c	;volatile
  3496  006D56                     l183:
  3497  006D56  C001  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3498  006D5A  C002  F003         	movff	Open1USART@spbrg+1,??_Open1USART
  3499  006D5E  C003  F004         	movff	??_Open1USART,??_Open1USART+1
  3500  006D62  6A05               	clrf	(??_Open1USART+2)& (0+255),c
  3501  006D64  5004               	movf	??_Open1USART+1,w,c
  3502  006D66  6EB0               	movwf	4016,c	;volatile
  3503  006D68  8AAC               	bsf	4012,5,c	;volatile
  3504  006D6A  8EAB               	bsf	4011,7,c	;volatile
  3505  006D6C  0012               	return	
  3506  006D6E                     __end_of_Open1USART:
  3507                           	opt stack 0
  3508                           tblptru	equ	0xFF8
  3509                           tblptrh	equ	0xFF7
  3510                           tblptrl	equ	0xFF6
  3511                           tablat	equ	0xFF5
  3512                           prodh	equ	0xFF4
  3513                           prodl	equ	0xFF3
  3514                           intcon	equ	0xFF2
  3515                           postinc0	equ	0xFEE
  3516                           wreg	equ	0xFE8
  3517                           postinc1	equ	0xFE6
  3518                           postdec1	equ	0xFE5
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           indf2	equ	0xFDF
  3522                           postinc2	equ	0xFDE
  3523                           postdec2	equ	0xFDD
  3524                           fsr2h	equ	0xFDA
  3525                           fsr2l	equ	0xFD9
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _ConvertADC *****************
  3529 ;; Defined at:
  3530 ;;		line 22 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcconv.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;		None               void
  3537 ;; Registers used:
  3538 ;;		None
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3544 ;;      Params:         0       0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text9
  3558  006BBE                     __ptext9:
  3559                           	opt stack 0
  3560  006BBE                     _ConvertADC:
  3561                           	opt stack 30
  3562                           
  3563                           ;incstack = 0
  3564  006BBE  82C2               	bsf	4034,1,c	;volatile
  3565  006BC0  0012               	return	
  3566  006BC2                     __end_of_ConvertADC:
  3567                           	opt stack 0
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           intcon	equ	0xFF2
  3575                           postinc0	equ	0xFEE
  3576                           wreg	equ	0xFE8
  3577                           postinc1	equ	0xFE6
  3578                           postdec1	equ	0xFE5
  3579                           fsr1h	equ	0xFE2
  3580                           fsr1l	equ	0xFE1
  3581                           indf2	equ	0xFDF
  3582                           postinc2	equ	0xFDE
  3583                           postdec2	equ	0xFDD
  3584                           fsr2h	equ	0xFDA
  3585                           fsr2l	equ	0xFD9
  3586                           status	equ	0xFD8
  3587                           
  3588 ;; *************** function _BusyADC *****************
  3589 ;; Defined at:
  3590 ;;		line 26 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcbusy.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      unsigned char 
  3597 ;; Registers used:
  3598 ;;		wreg
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3604 ;;      Params:         0       0       0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0       0
  3607 ;;      Totals:         0       0       0       0       0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text10
  3618  006BC2                     __ptext10:
  3619                           	opt stack 0
  3620  006BC2                     _BusyADC:
  3621                           	opt stack 30
  3622                           
  3623                           ;incstack = 0
  3624  006BC2  A2C2               	btfss	4034,1,c	;volatile
  3625  006BC4  D002               	goto	u560
  3626  006BC6  0E01               	movlw	1
  3627  006BC8  0012               	return	
  3628  006BCA                     u560:
  3629  006BCA  0E00               	movlw	0
  3630  006BCC  0012               	return	
  3631  006BCE                     __end_of_BusyADC:
  3632                           	opt stack 0
  3633                           tblptru	equ	0xFF8
  3634                           tblptrh	equ	0xFF7
  3635                           tblptrl	equ	0xFF6
  3636                           tablat	equ	0xFF5
  3637                           prodh	equ	0xFF4
  3638                           prodl	equ	0xFF3
  3639                           intcon	equ	0xFF2
  3640                           postinc0	equ	0xFEE
  3641                           wreg	equ	0xFE8
  3642                           postinc1	equ	0xFE6
  3643                           postdec1	equ	0xFE5
  3644                           fsr1h	equ	0xFE2
  3645                           fsr1l	equ	0xFE1
  3646                           indf2	equ	0xFDF
  3647                           postinc2	equ	0xFDE
  3648                           postdec2	equ	0xFDD
  3649                           fsr2h	equ	0xFDA
  3650                           fsr2l	equ	0xFD9
  3651                           status	equ	0xFD8
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           prodh	equ	0xFF4
  3657                           prodl	equ	0xFF3
  3658                           intcon	equ	0xFF2
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           postinc1	equ	0xFE6
  3662                           postdec1	equ	0xFE5
  3663                           fsr1h	equ	0xFE2
  3664                           fsr1l	equ	0xFE1
  3665                           indf2	equ	0xFDF
  3666                           postinc2	equ	0xFDE
  3667                           postdec2	equ	0xFDD
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672                           	psect	rparam
  3673  0000                     tblptru	equ	0xFF8
  3674                           tblptrh	equ	0xFF7
  3675                           tblptrl	equ	0xFF6
  3676                           tablat	equ	0xFF5
  3677                           prodh	equ	0xFF4
  3678                           prodl	equ	0xFF3
  3679                           intcon	equ	0xFF2
  3680                           postinc0	equ	0xFEE
  3681                           wreg	equ	0xFE8
  3682                           postinc1	equ	0xFE6
  3683                           postdec1	equ	0xFE5
  3684                           fsr1h	equ	0xFE2
  3685                           fsr1l	equ	0xFE1
  3686                           indf2	equ	0xFDF
  3687                           postinc2	equ	0xFDE
  3688                           postdec2	equ	0xFDD
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1536
    Data        0
    BSS         265
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      93
    BANK0           160     14     151
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fix_fft@fi	PTR short  size(2) Largest target is 128
		 -> imaginaryNumbers(BANK1[128]), 

    fix_fft@fr	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 

    sendIntArray@array	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_fix_fft
    _sendIntArray->_sendChar
    _sendChar->_Write1USART
    _fix_fft->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    4487
                                             76 COMRAM    13    13      0
                                              0 BANK0     14    14      0
                            _BusyADC
                         _ConvertADC
                         _Open1USART
                            _OpenADC
                             ___wmul
                            _fix_fft
                       _sendIntArray
 ---------------------------------------------------------------------------------
 (1) _sendIntArray                                         4     0      4     194
                                              2 COMRAM     4     0      4
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      44
                                              1 COMRAM     1     1      0
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fix_fft                                             64    58      6    2782
                                             12 COMRAM    64    58      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     444
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     371
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     238
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Open1USART
   _OpenADC
   ___wmul
   _fix_fft
     ___lmul
   _sendIntArray
     _sendChar
       _Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      E      97       4       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5D       1       97.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     174       9        0.0%
DATA                 0      0     174      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Dec  4 17:31:30 2014

                      _i 005A                       l98 6BD0      ___wmul@multiplicand 0003  
                    l113 72CE                      l119 79E0                      l155 6CBC  
                    l180 6D4A                      l182 6D54                      l183 6D56  
                    l176 6D38                      u614 74D8                      u615 74D2  
                    u560 6BCA                      u625 75F0                      u626 75F6  
                    u635 76A0                      u627 7604                      u636 76A6  
                    u645 7760                      u637 76B4                      u646 7766  
                    u574 7296                      u655 7810                      u647 7774  
                    u575 7290                      u656 7816                      u657 7824  
                    u755 7052                      u827 6E90                      u756 7058  
                    u757 7066                      u785 720E                      u786 7214  
                    u787 7222                      wreg 000FE8               _TXSTA1bits 000FAC  
           __CFG_LVP$OFF 000000                     l1101 6CE4                     l1203 757A  
                   l1135 6D3A                     l1127 6D2C                     l1305 6E10  
                   l1147 6D4C                     l1251 7992                     l1341 7076  
                   l1317 6E9E                     l1247 7972                     l1191 74A6  
                   l1263 6C64                     l1343 70D4                     l1097 6CD0  
                   l1185 7452                     l1169 72DE                     l1089 6BE8  
                   l1353 7232                     l1195 74C2                     l1187 7456  
                   l1259 6C48                     l1339 7036                     l1355 7240  
                   l1349 71C0                     l1297 6DE2                     _LATC 000F8B  
                   _PIE1 000F9D                     _data 0060                     _main 6D6E  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000          __end_of_BusyADC 6BCE  
        __end_of_OpenADC 6CC0                    ?_main 0001                    _TRISC 000F94  
    ___lmul@multiplicand 0005          __end_of_fix_fft 79FE                    _input 005D  
                  main@i 00EB                    main@k 00F1               _ConvertADC 6BBE  
                  tablat 000FF5                    status 000FD8            main@adc_value 00E5  
         __CFG_PBADEN$ON 000000          __initialization 6C14             __end_of_main 7272  
             _Open1USART 6D16                   ??_main 004D            __activetblptr 000002  
           fix_fft@istep 0023         __end_of_Sinewave 7FFF                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _ANSELC 000F3A           __CFG_WDTEN$OFF 000000  
                 _RCSTA1 000FAB                   _SPBRG1 000FAF                ??_BusyADC 0001  
                 _TXREG1 000FAD                   _TXSTA1 000FAC                ??_OpenADC 0003  
                 ___lmul 6CC0                   ___wmul 6BEE                   clear_0 6C1A  
                 clear_1 6C26         __end_of_sendChar 6BDC                ??_fix_fft 0013  
           __mediumconst 79FE                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8              ?_ConvertADC 0001               __accesstop 0060  
__end_of__initialization 6C34           __pcstackCOMRAM 0001              ?_Open1USART 0001  
          ?_sendIntArray 0003               __pbssBANK0 0060               __pbssBANK1 0100  
        __CFG_PLLCFG$OFF 000000            ??_Write1USART 0001                  ?___lmul 0001  
                ?___wmul 0001           ___lmul@product 0009      __size_of_ConvertADC 0004  
       Open1USART@config 0006           ??_sendIntArray 0007        __CFG_PRICLKEN$OFF 000000  
                _SPBRGH1 000FB0      __size_of_Open1USART 0058                  _BusyADC 6BC2  
              ?_sendChar 0001                  _OpenADC 6C72                  __Hparam 0000  
                __Lparam 0000      __end_of_Write1USART 6BEE          __size_of___lmul 0056  
        __size_of___wmul 0026                  __pcinit 6C14                  __ramtop 0600  
                __ptext0 6D6E                  __ptext1 6C3E                  __ptext2 6BCE  
                __ptext3 6BDC                  __ptext4 7272                  __ptext5 6CC0  
                __ptext6 6BEE                  __ptext7 6C72                  __ptext8 6D16  
                __ptext9 6BBE                  _fix_fft 7272           OpenADC@config2 0001  
         OpenADC@config3 0002     end_of_initialization 6C34            __Lmediumconst 79FE  
             ??_sendChar 0002                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
      sendIntArray@array 0003         __CFG_FOSC$INTIO7 000000                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94             ??_ConvertADC 0001  
            _Write1USART 6BDC     __end_of_sendIntArray 6C72           __end_of___lmul 6D16  
         __end_of___wmul 6C14             ??_Open1USART 0003       __end_of_ConvertADC 6BC2  
    start_initialization 6C14       __end_of_Open1USART 6D6E         _imaginaryNumbers 0100  
               ??___lmul 0009                 ??___wmul 0005              __pbssCOMRAM 005A  
          __pcstackBANK0 00E5                _baud_rate 00F3                 ?_BusyADC 0001  
              __pnvBANK0 00F3                 ?_OpenADC 0001        __size_of_sendChar 000E  
          __pmediumconst 79FE          Open1USART@spbrg 0001                 ?_fix_fft 000D  
        Write1USART@data 0001    __size_of_sendIntArray 0034           ___wmul@product 0005  
          OpenADC@config 0005                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
       sendIntArray@size 0005               _ADCON0bits 000FC2        ___wmul@multiplier 0001  
              main@place 00ED             _sendIntArray 6C3E                fix_fft@fi 000F  
              fix_fft@fr 000D                fix_fft@nn 001F                fix_fft@qi 0029  
              fix_fft@mr 003D                fix_fft@ti 0035                fix_fft@qr 0027  
              fix_fft@wi 002D                fix_fft@tr 0033                fix_fft@wr 002B  
      ___lmul@multiplier 0001             ?_Write1USART 0001         __size_of_BusyADC 000C  
               __Hrparam 0000         __size_of_OpenADC 004E                 __Lrparam 0000  
               _Sinewave 79FF               _ANSELAbits 000F38               _ANSELBbits 000F39  
       __size_of_fix_fft 078C                 __ptext10 6BC2              _realNumbers 0065  
          __size_of_main 0504                 _sendChar 6BCE                 main@root 00E7  
               fix_fft@b 0037                 fix_fft@c 0049                 fix_fft@i 0039  
               fix_fft@j 0045                 fix_fft@k 001B                 fix_fft@l 0041  
               fix_fft@m 0011                 fix_fft@n 002F            _USART1_Status 005C  
            _OSCTUNEbits 000F9B               _INTCONbits 000FF2               _RCSTA1bits 000FAB  
             _OSCCONbits 000FD3        sendChar@character 0002     __size_of_Write1USART 0012  
