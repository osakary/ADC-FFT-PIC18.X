

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Dec 05 13:15:11 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	mediumconst
    29  0079FE                     __pmediumconst:
    30                           	opt stack 0
    31  0079FE  00                 	db	0
    32  0079FF                     _Sinewave:
    33                           	opt stack 0
    34  0079FF  0000               	dw	0
    35  007A01  00C9               	dw	201
    36  007A03  0192               	dw	402
    37  007A05  025B               	dw	603
    38  007A07  0324               	dw	804
    39  007A09  03ED               	dw	1005
    40  007A0B  04B6               	dw	1206
    41  007A0D  057E               	dw	1406
    42  007A0F  0647               	dw	1607
    43  007A11  0710               	dw	1808
    44  007A13  07D9               	dw	2009
    45  007A15  08A1               	dw	2209
    46  007A17  096A               	dw	2410
    47  007A19  0A32               	dw	2610
    48  007A1B  0AFB               	dw	2811
    49  007A1D  0BC3               	dw	3011
    50  007A1F  0C8B               	dw	3211
    51  007A21  0D53               	dw	3411
    52  007A23  0E1B               	dw	3611
    53  007A25  0EE3               	dw	3811
    54  007A27  0FAB               	dw	4011
    55  007A29  1072               	dw	4210
    56  007A2B  1139               	dw	4409
    57  007A2D  1200               	dw	4608
    58  007A2F  12C7               	dw	4807
    59  007A31  138E               	dw	5006
    60  007A33  1455               	dw	5205
    61  007A35  151B               	dw	5403
    62  007A37  15E1               	dw	5601
    63  007A39  16A7               	dw	5799
    64  007A3B  176D               	dw	5997
    65  007A3D  1833               	dw	6195
    66  007A3F  18F8               	dw	6392
    67  007A41  19BD               	dw	6589
    68  007A43  1A82               	dw	6786
    69  007A45  1B46               	dw	6982
    70  007A47  1C0B               	dw	7179
    71  007A49  1CCF               	dw	7375
    72  007A4B  1D93               	dw	7571
    73  007A4D  1E56               	dw	7766
    74  007A4F  1F19               	dw	7961
    75  007A51  1FDC               	dw	8156
    76  007A53  209F               	dw	8351
    77  007A55  2161               	dw	8545
    78  007A57  2223               	dw	8739
    79  007A59  22E4               	dw	8932
    80  007A5B  23A6               	dw	9126
    81  007A5D  2467               	dw	9319
    82  007A5F  2527               	dw	9511
    83  007A61  25E7               	dw	9703
    84  007A63  26A7               	dw	9895
    85  007A65  2767               	dw	10087
    86  007A67  2826               	dw	10278
    87  007A69  28E5               	dw	10469
    88  007A6B  29A3               	dw	10659
    89  007A6D  2A61               	dw	10849
    90  007A6F  2B1E               	dw	11038
    91  007A71  2BDB               	dw	11227
    92  007A73  2C98               	dw	11416
    93  007A75  2D54               	dw	11604
    94  007A77  2E10               	dw	11792
    95  007A79  2ECC               	dw	11980
    96  007A7B  2F86               	dw	12166
    97  007A7D  3041               	dw	12353
    98  007A7F  30FB               	dw	12539
    99  007A81  31B4               	dw	12724
   100  007A83  326D               	dw	12909
   101  007A85  3326               	dw	13094
   102  007A87  33DE               	dw	13278
   103  007A89  3496               	dw	13462
   104  007A8B  354D               	dw	13645
   105  007A8D  3603               	dw	13827
   106  007A8F  36B9               	dw	14009
   107  007A91  376F               	dw	14191
   108  007A93  3824               	dw	14372
   109  007A95  38D8               	dw	14552
   110  007A97  398C               	dw	14732
   111  007A99  3A3F               	dw	14911
   112  007A9B  3AF2               	dw	15090
   113  007A9D  3BA4               	dw	15268
   114  007A9F  3C56               	dw	15446
   115  007AA1  3D07               	dw	15623
   116  007AA3  3DB7               	dw	15799
   117  007AA5  3E67               	dw	15975
   118  007AA7  3F16               	dw	16150
   119  007AA9  3FC5               	dw	16325
   120  007AAB  4073               	dw	16499
   121  007AAD  4120               	dw	16672
   122  007AAF  41CD               	dw	16845
   123  007AB1  4279               	dw	17017
   124  007AB3  4325               	dw	17189
   125  007AB5  43D0               	dw	17360
   126  007AB7  447A               	dw	17530
   127  007AB9  4523               	dw	17699
   128  007ABB  45CC               	dw	17868
   129  007ABD  4674               	dw	18036
   130  007ABF  471C               	dw	18204
   131  007AC1  47C3               	dw	18371
   132  007AC3  4869               	dw	18537
   133  007AC5  490E               	dw	18702
   134  007AC7  49B3               	dw	18867
   135  007AC9  4A57               	dw	19031
   136  007ACB  4AFA               	dw	19194
   137  007ACD  4B9D               	dw	19357
   138  007ACF  4C3F               	dw	19519
   139  007AD1  4CE0               	dw	19680
   140  007AD3  4D80               	dw	19840
   141  007AD5  4E20               	dw	20000
   142  007AD7  4EBF               	dw	20159
   143  007AD9  4F5D               	dw	20317
   144  007ADB  4FFA               	dw	20474
   145  007ADD  5097               	dw	20631
   146  007ADF  5133               	dw	20787
   147  007AE1  51CE               	dw	20942
   148  007AE3  5268               	dw	21096
   149  007AE5  5301               	dw	21249
   150  007AE7  539A               	dw	21402
   151  007AE9  5432               	dw	21554
   152  007AEB  54C9               	dw	21705
   153  007AED  555F               	dw	21855
   154  007AEF  55F4               	dw	22004
   155  007AF1  5689               	dw	22153
   156  007AF3  571D               	dw	22301
   157  007AF5  57B0               	dw	22448
   158  007AF7  5842               	dw	22594
   159  007AF9  58D3               	dw	22739
   160  007AFB  5963               	dw	22883
   161  007AFD  59F3               	dw	23027
   162  007AFF  5A81               	dw	23169
   163  007B01  5B0F               	dw	23311
   164  007B03  5B9C               	dw	23452
   165  007B05  5C28               	dw	23592
   166  007B07  5CB3               	dw	23731
   167  007B09  5D3D               	dw	23869
   168  007B0B  5DC6               	dw	24006
   169  007B0D  5E4F               	dw	24143
   170  007B0F  5ED6               	dw	24278
   171  007B11  5F5D               	dw	24413
   172  007B13  5FE2               	dw	24546
   173  007B15  6067               	dw	24679
   174  007B17  60EB               	dw	24811
   175  007B19  616E               	dw	24942
   176  007B1B  61F0               	dw	25072
   177  007B1D  6271               	dw	25201
   178  007B1F  62F1               	dw	25329
   179  007B21  6370               	dw	25456
   180  007B23  63EE               	dw	25582
   181  007B25  646B               	dw	25707
   182  007B27  64E7               	dw	25831
   183  007B29  6562               	dw	25954
   184  007B2B  65DD               	dw	26077
   185  007B2D  6656               	dw	26198
   186  007B2F  66CE               	dw	26318
   187  007B31  6745               	dw	26437
   188  007B33  67BC               	dw	26556
   189  007B35  6831               	dw	26673
   190  007B37  68A5               	dw	26789
   191  007B39  6919               	dw	26905
   192  007B3B  698B               	dw	27019
   193  007B3D  69FC               	dw	27132
   194  007B3F  6A6C               	dw	27244
   195  007B41  6ADB               	dw	27355
   196  007B43  6B4A               	dw	27466
   197  007B45  6BB7               	dw	27575
   198  007B47  6C23               	dw	27683
   199  007B49  6C8E               	dw	27790
   200  007B4B  6CF8               	dw	27896
   201  007B4D  6D61               	dw	28001
   202  007B4F  6DC9               	dw	28105
   203  007B51  6E30               	dw	28208
   204  007B53  6E95               	dw	28309
   205  007B55  6EFA               	dw	28410
   206  007B57  6F5E               	dw	28510
   207  007B59  6FC0               	dw	28608
   208  007B5B  7022               	dw	28706
   209  007B5D  7082               	dw	28802
   210  007B5F  70E1               	dw	28897
   211  007B61  7140               	dw	28992
   212  007B63  719D               	dw	29085
   213  007B65  71F9               	dw	29177
   214  007B67  7254               	dw	29268
   215  007B69  72AE               	dw	29358
   216  007B6B  7306               	dw	29446
   217  007B6D  735E               	dw	29534
   218  007B6F  73B5               	dw	29621
   219  007B71  740A               	dw	29706
   220  007B73  745E               	dw	29790
   221  007B75  74B1               	dw	29873
   222  007B77  7503               	dw	29955
   223  007B79  7554               	dw	30036
   224  007B7B  75A4               	dw	30116
   225  007B7D  75F3               	dw	30195
   226  007B7F  7640               	dw	30272
   227  007B81  768D               	dw	30349
   228  007B83  76D8               	dw	30424
   229  007B85  7722               	dw	30498
   230  007B87  776B               	dw	30571
   231  007B89  77B3               	dw	30643
   232  007B8B  77F9               	dw	30713
   233  007B8D  783F               	dw	30783
   234  007B8F  7883               	dw	30851
   235  007B91  78C6               	dw	30918
   236  007B93  7908               	dw	30984
   237  007B95  7949               	dw	31049
   238  007B97  7989               	dw	31113
   239  007B99  79C7               	dw	31175
   240  007B9B  7A04               	dw	31236
   241  007B9D  7A41               	dw	31297
   242  007B9F  7A7C               	dw	31356
   243  007BA1  7AB5               	dw	31413
   244  007BA3  7AEE               	dw	31470
   245  007BA5  7B25               	dw	31525
   246  007BA7  7B5C               	dw	31580
   247  007BA9  7B91               	dw	31633
   248  007BAB  7BC4               	dw	31684
   249  007BAD  7BF7               	dw	31735
   250  007BAF  7C29               	dw	31785
   251  007BB1  7C59               	dw	31833
   252  007BB3  7C88               	dw	31880
   253  007BB5  7CB6               	dw	31926
   254  007BB7  7CE2               	dw	31970
   255  007BB9  7D0E               	dw	32014
   256  007BBB  7D38               	dw	32056
   257  007BBD  7D61               	dw	32097
   258  007BBF  7D89               	dw	32137
   259  007BC1  7DB0               	dw	32176
   260  007BC3  7DD5               	dw	32213
   261  007BC5  7DF9               	dw	32249
   262  007BC7  7E1C               	dw	32284
   263  007BC9  7E3E               	dw	32318
   264  007BCB  7E5E               	dw	32350
   265  007BCD  7E7E               	dw	32382
   266  007BCF  7E9C               	dw	32412
   267  007BD1  7EB9               	dw	32441
   268  007BD3  7ED4               	dw	32468
   269  007BD5  7EEF               	dw	32495
   270  007BD7  7F08               	dw	32520
   271  007BD9  7F20               	dw	32544
   272  007BDB  7F37               	dw	32567
   273  007BDD  7F4C               	dw	32588
   274  007BDF  7F61               	dw	32609
   275  007BE1  7F74               	dw	32628
   276  007BE3  7F86               	dw	32646
   277  007BE5  7F96               	dw	32662
   278  007BE7  7FA6               	dw	32678
   279  007BE9  7FB4               	dw	32692
   280  007BEB  7FC1               	dw	32705
   281  007BED  7FCD               	dw	32717
   282  007BEF  7FD7               	dw	32727
   283  007BF1  7FE0               	dw	32736
   284  007BF3  7FE8               	dw	32744
   285  007BF5  7FEF               	dw	32751
   286  007BF7  7FF5               	dw	32757
   287  007BF9  7FF9               	dw	32761
   288  007BFB  7FFC               	dw	32764
   289  007BFD  7FFE               	dw	32766
   290  007BFF  7FFF               	dw	32767
   291  007C01  7FFE               	dw	32766
   292  007C03  7FFC               	dw	32764
   293  007C05  7FF9               	dw	32761
   294  007C07  7FF5               	dw	32757
   295  007C09  7FEF               	dw	32751
   296  007C0B  7FE8               	dw	32744
   297  007C0D  7FE0               	dw	32736
   298  007C0F  7FD7               	dw	32727
   299  007C11  7FCD               	dw	32717
   300  007C13  7FC1               	dw	32705
   301  007C15  7FB4               	dw	32692
   302  007C17  7FA6               	dw	32678
   303  007C19  7F96               	dw	32662
   304  007C1B  7F86               	dw	32646
   305  007C1D  7F74               	dw	32628
   306  007C1F  7F61               	dw	32609
   307  007C21  7F4C               	dw	32588
   308  007C23  7F37               	dw	32567
   309  007C25  7F20               	dw	32544
   310  007C27  7F08               	dw	32520
   311  007C29  7EEF               	dw	32495
   312  007C2B  7ED4               	dw	32468
   313  007C2D  7EB9               	dw	32441
   314  007C2F  7E9C               	dw	32412
   315  007C31  7E7E               	dw	32382
   316  007C33  7E5E               	dw	32350
   317  007C35  7E3E               	dw	32318
   318  007C37  7E1C               	dw	32284
   319  007C39  7DF9               	dw	32249
   320  007C3B  7DD5               	dw	32213
   321  007C3D  7DB0               	dw	32176
   322  007C3F  7D89               	dw	32137
   323  007C41  7D61               	dw	32097
   324  007C43  7D38               	dw	32056
   325  007C45  7D0E               	dw	32014
   326  007C47  7CE2               	dw	31970
   327  007C49  7CB6               	dw	31926
   328  007C4B  7C88               	dw	31880
   329  007C4D  7C59               	dw	31833
   330  007C4F  7C29               	dw	31785
   331  007C51  7BF7               	dw	31735
   332  007C53  7BC4               	dw	31684
   333  007C55  7B91               	dw	31633
   334  007C57  7B5C               	dw	31580
   335  007C59  7B25               	dw	31525
   336  007C5B  7AEE               	dw	31470
   337  007C5D  7AB5               	dw	31413
   338  007C5F  7A7C               	dw	31356
   339  007C61  7A41               	dw	31297
   340  007C63  7A04               	dw	31236
   341  007C65  79C7               	dw	31175
   342  007C67  7989               	dw	31113
   343  007C69  7949               	dw	31049
   344  007C6B  7908               	dw	30984
   345  007C6D  78C6               	dw	30918
   346  007C6F  7883               	dw	30851
   347  007C71  783F               	dw	30783
   348  007C73  77F9               	dw	30713
   349  007C75  77B3               	dw	30643
   350  007C77  776B               	dw	30571
   351  007C79  7722               	dw	30498
   352  007C7B  76D8               	dw	30424
   353  007C7D  768D               	dw	30349
   354  007C7F  7640               	dw	30272
   355  007C81  75F3               	dw	30195
   356  007C83  75A4               	dw	30116
   357  007C85  7554               	dw	30036
   358  007C87  7503               	dw	29955
   359  007C89  74B1               	dw	29873
   360  007C8B  745E               	dw	29790
   361  007C8D  740A               	dw	29706
   362  007C8F  73B5               	dw	29621
   363  007C91  735E               	dw	29534
   364  007C93  7306               	dw	29446
   365  007C95  72AE               	dw	29358
   366  007C97  7254               	dw	29268
   367  007C99  71F9               	dw	29177
   368  007C9B  719D               	dw	29085
   369  007C9D  7140               	dw	28992
   370  007C9F  70E1               	dw	28897
   371  007CA1  7082               	dw	28802
   372  007CA3  7022               	dw	28706
   373  007CA5  6FC0               	dw	28608
   374  007CA7  6F5E               	dw	28510
   375  007CA9  6EFA               	dw	28410
   376  007CAB  6E95               	dw	28309
   377  007CAD  6E30               	dw	28208
   378  007CAF  6DC9               	dw	28105
   379  007CB1  6D61               	dw	28001
   380  007CB3  6CF8               	dw	27896
   381  007CB5  6C8E               	dw	27790
   382  007CB7  6C23               	dw	27683
   383  007CB9  6BB7               	dw	27575
   384  007CBB  6B4A               	dw	27466
   385  007CBD  6ADB               	dw	27355
   386  007CBF  6A6C               	dw	27244
   387  007CC1  69FC               	dw	27132
   388  007CC3  698B               	dw	27019
   389  007CC5  6919               	dw	26905
   390  007CC7  68A5               	dw	26789
   391  007CC9  6831               	dw	26673
   392  007CCB  67BC               	dw	26556
   393  007CCD  6745               	dw	26437
   394  007CCF  66CE               	dw	26318
   395  007CD1  6656               	dw	26198
   396  007CD3  65DD               	dw	26077
   397  007CD5  6562               	dw	25954
   398  007CD7  64E7               	dw	25831
   399  007CD9  646B               	dw	25707
   400  007CDB  63EE               	dw	25582
   401  007CDD  6370               	dw	25456
   402  007CDF  62F1               	dw	25329
   403  007CE1  6271               	dw	25201
   404  007CE3  61F0               	dw	25072
   405  007CE5  616E               	dw	24942
   406  007CE7  60EB               	dw	24811
   407  007CE9  6067               	dw	24679
   408  007CEB  5FE2               	dw	24546
   409  007CED  5F5D               	dw	24413
   410  007CEF  5ED6               	dw	24278
   411  007CF1  5E4F               	dw	24143
   412  007CF3  5DC6               	dw	24006
   413  007CF5  5D3D               	dw	23869
   414  007CF7  5CB3               	dw	23731
   415  007CF9  5C28               	dw	23592
   416  007CFB  5B9C               	dw	23452
   417  007CFD  5B0F               	dw	23311
   418  007CFF  5A81               	dw	23169
   419  007D01  59F3               	dw	23027
   420  007D03  5963               	dw	22883
   421  007D05  58D3               	dw	22739
   422  007D07  5842               	dw	22594
   423  007D09  57B0               	dw	22448
   424  007D0B  571D               	dw	22301
   425  007D0D  5689               	dw	22153
   426  007D0F  55F4               	dw	22004
   427  007D11  555F               	dw	21855
   428  007D13  54C9               	dw	21705
   429  007D15  5432               	dw	21554
   430  007D17  539A               	dw	21402
   431  007D19  5301               	dw	21249
   432  007D1B  5268               	dw	21096
   433  007D1D  51CE               	dw	20942
   434  007D1F  5133               	dw	20787
   435  007D21  5097               	dw	20631
   436  007D23  4FFA               	dw	20474
   437  007D25  4F5D               	dw	20317
   438  007D27  4EBF               	dw	20159
   439  007D29  4E20               	dw	20000
   440  007D2B  4D80               	dw	19840
   441  007D2D  4CE0               	dw	19680
   442  007D2F  4C3F               	dw	19519
   443  007D31  4B9D               	dw	19357
   444  007D33  4AFA               	dw	19194
   445  007D35  4A57               	dw	19031
   446  007D37  49B3               	dw	18867
   447  007D39  490E               	dw	18702
   448  007D3B  4869               	dw	18537
   449  007D3D  47C3               	dw	18371
   450  007D3F  471C               	dw	18204
   451  007D41  4674               	dw	18036
   452  007D43  45CC               	dw	17868
   453  007D45  4523               	dw	17699
   454  007D47  447A               	dw	17530
   455  007D49  43D0               	dw	17360
   456  007D4B  4325               	dw	17189
   457  007D4D  4279               	dw	17017
   458  007D4F  41CD               	dw	16845
   459  007D51  4120               	dw	16672
   460  007D53  4073               	dw	16499
   461  007D55  3FC5               	dw	16325
   462  007D57  3F16               	dw	16150
   463  007D59  3E67               	dw	15975
   464  007D5B  3DB7               	dw	15799
   465  007D5D  3D07               	dw	15623
   466  007D5F  3C56               	dw	15446
   467  007D61  3BA4               	dw	15268
   468  007D63  3AF2               	dw	15090
   469  007D65  3A3F               	dw	14911
   470  007D67  398C               	dw	14732
   471  007D69  38D8               	dw	14552
   472  007D6B  3824               	dw	14372
   473  007D6D  376F               	dw	14191
   474  007D6F  36B9               	dw	14009
   475  007D71  3603               	dw	13827
   476  007D73  354D               	dw	13645
   477  007D75  3496               	dw	13462
   478  007D77  33DE               	dw	13278
   479  007D79  3326               	dw	13094
   480  007D7B  326D               	dw	12909
   481  007D7D  31B4               	dw	12724
   482  007D7F  30FB               	dw	12539
   483  007D81  3041               	dw	12353
   484  007D83  2F86               	dw	12166
   485  007D85  2ECC               	dw	11980
   486  007D87  2E10               	dw	11792
   487  007D89  2D54               	dw	11604
   488  007D8B  2C98               	dw	11416
   489  007D8D  2BDB               	dw	11227
   490  007D8F  2B1E               	dw	11038
   491  007D91  2A61               	dw	10849
   492  007D93  29A3               	dw	10659
   493  007D95  28E5               	dw	10469
   494  007D97  2826               	dw	10278
   495  007D99  2767               	dw	10087
   496  007D9B  26A7               	dw	9895
   497  007D9D  25E7               	dw	9703
   498  007D9F  2527               	dw	9511
   499  007DA1  2467               	dw	9319
   500  007DA3  23A6               	dw	9126
   501  007DA5  22E4               	dw	8932
   502  007DA7  2223               	dw	8739
   503  007DA9  2161               	dw	8545
   504  007DAB  209F               	dw	8351
   505  007DAD  1FDC               	dw	8156
   506  007DAF  1F19               	dw	7961
   507  007DB1  1E56               	dw	7766
   508  007DB3  1D93               	dw	7571
   509  007DB5  1CCF               	dw	7375
   510  007DB7  1C0B               	dw	7179
   511  007DB9  1B46               	dw	6982
   512  007DBB  1A82               	dw	6786
   513  007DBD  19BD               	dw	6589
   514  007DBF  18F8               	dw	6392
   515  007DC1  1833               	dw	6195
   516  007DC3  176D               	dw	5997
   517  007DC5  16A7               	dw	5799
   518  007DC7  15E1               	dw	5601
   519  007DC9  151B               	dw	5403
   520  007DCB  1455               	dw	5205
   521  007DCD  138E               	dw	5006
   522  007DCF  12C7               	dw	4807
   523  007DD1  1200               	dw	4608
   524  007DD3  1139               	dw	4409
   525  007DD5  1072               	dw	4210
   526  007DD7  0FAB               	dw	4011
   527  007DD9  0EE3               	dw	3811
   528  007DDB  0E1B               	dw	3611
   529  007DDD  0D53               	dw	3411
   530  007DDF  0C8B               	dw	3211
   531  007DE1  0BC3               	dw	3011
   532  007DE3  0AFB               	dw	2811
   533  007DE5  0A32               	dw	2610
   534  007DE7  096A               	dw	2410
   535  007DE9  08A1               	dw	2209
   536  007DEB  07D9               	dw	2009
   537  007DED  0710               	dw	1808
   538  007DEF  0647               	dw	1607
   539  007DF1  057E               	dw	1406
   540  007DF3  04B6               	dw	1206
   541  007DF5  03ED               	dw	1005
   542  007DF7  0324               	dw	804
   543  007DF9  025B               	dw	603
   544  007DFB  0192               	dw	402
   545  007DFD  00C9               	dw	201
   546  007DFF  0000               	dw	0
   547  007E01  FF37               	dw	65335
   548  007E03  FE6E               	dw	65134
   549  007E05  FDA5               	dw	64933
   550  007E07  FCDC               	dw	64732
   551  007E09  FC13               	dw	64531
   552  007E0B  FB4A               	dw	64330
   553  007E0D  FA82               	dw	64130
   554  007E0F  F9B9               	dw	63929
   555  007E11  F8F0               	dw	63728
   556  007E13  F827               	dw	63527
   557  007E15  F75F               	dw	63327
   558  007E17  F696               	dw	63126
   559  007E19  F5CE               	dw	62926
   560  007E1B  F505               	dw	62725
   561  007E1D  F43D               	dw	62525
   562  007E1F  F375               	dw	62325
   563  007E21  F2AD               	dw	62125
   564  007E23  F1E5               	dw	61925
   565  007E25  F11D               	dw	61725
   566  007E27  F055               	dw	61525
   567  007E29  EF8E               	dw	61326
   568  007E2B  EEC7               	dw	61127
   569  007E2D  EE00               	dw	60928
   570  007E2F  ED39               	dw	60729
   571  007E31  EC72               	dw	60530
   572  007E33  EBAB               	dw	60331
   573  007E35  EAE5               	dw	60133
   574  007E37  EA1F               	dw	59935
   575  007E39  E959               	dw	59737
   576  007E3B  E893               	dw	59539
   577  007E3D  E7CD               	dw	59341
   578  007E3F  E708               	dw	59144
   579  007E41  E643               	dw	58947
   580  007E43  E57E               	dw	58750
   581  007E45  E4BA               	dw	58554
   582  007E47  E3F5               	dw	58357
   583  007E49  E331               	dw	58161
   584  007E4B  E26D               	dw	57965
   585  007E4D  E1AA               	dw	57770
   586  007E4F  E0E7               	dw	57575
   587  007E51  E024               	dw	57380
   588  007E53  DF61               	dw	57185
   589  007E55  DE9F               	dw	56991
   590  007E57  DDDD               	dw	56797
   591  007E59  DD1C               	dw	56604
   592  007E5B  DC5A               	dw	56410
   593  007E5D  DB99               	dw	56217
   594  007E5F  DAD9               	dw	56025
   595  007E61  DA19               	dw	55833
   596  007E63  D959               	dw	55641
   597  007E65  D899               	dw	55449
   598  007E67  D7DA               	dw	55258
   599  007E69  D71B               	dw	55067
   600  007E6B  D65D               	dw	54877
   601  007E6D  D59F               	dw	54687
   602  007E6F  D4E2               	dw	54498
   603  007E71  D425               	dw	54309
   604  007E73  D368               	dw	54120
   605  007E75  D2AC               	dw	53932
   606  007E77  D1F0               	dw	53744
   607  007E79  D134               	dw	53556
   608  007E7B  D07A               	dw	53370
   609  007E7D  CFBF               	dw	53183
   610  007E7F  CF05               	dw	52997
   611  007E81  CE4C               	dw	52812
   612  007E83  CD93               	dw	52627
   613  007E85  CCDA               	dw	52442
   614  007E87  CC22               	dw	52258
   615  007E89  CB6A               	dw	52074
   616  007E8B  CAB3               	dw	51891
   617  007E8D  C9FD               	dw	51709
   618  007E8F  C947               	dw	51527
   619  007E91  C891               	dw	51345
   620  007E93  C7DC               	dw	51164
   621  007E95  C728               	dw	50984
   622  007E97  C674               	dw	50804
   623  007E99  C5C1               	dw	50625
   624  007E9B  C50E               	dw	50446
   625  007E9D  C45C               	dw	50268
   626  007E9F  C3AA               	dw	50090
   627  007EA1  C2F9               	dw	49913
   628  007EA3  C249               	dw	49737
   629  007EA5  C199               	dw	49561
   630  007EA7  C0EA               	dw	49386
   631  007EA9  C03B               	dw	49211
   632  007EAB  BF8D               	dw	49037
   633  007EAD  BEE0               	dw	48864
   634  007EAF  BE33               	dw	48691
   635  007EB1  BD87               	dw	48519
   636  007EB3  BCDB               	dw	48347
   637  007EB5  BC30               	dw	48176
   638  007EB7  BB86               	dw	48006
   639  007EB9  BADD               	dw	47837
   640  007EBB  BA34               	dw	47668
   641  007EBD  B98C               	dw	47500
   642  007EBF  B8E4               	dw	47332
   643  007EC1  B83D               	dw	47165
   644  007EC3  B797               	dw	46999
   645  007EC5  B6F2               	dw	46834
   646  007EC7  B64D               	dw	46669
   647  007EC9  B5A9               	dw	46505
   648  007ECB  B506               	dw	46342
   649  007ECD  B463               	dw	46179
   650  007ECF  B3C1               	dw	46017
   651  007ED1  B320               	dw	45856
   652  007ED3  B280               	dw	45696
   653  007ED5  B1E0               	dw	45536
   654  007ED7  B141               	dw	45377
   655  007ED9  B0A3               	dw	45219
   656  007EDB  B006               	dw	45062
   657  007EDD  AF69               	dw	44905
   658  007EDF  AECD               	dw	44749
   659  007EE1  AE32               	dw	44594
   660  007EE3  AD98               	dw	44440
   661  007EE5  ACFF               	dw	44287
   662  007EE7  AC66               	dw	44134
   663  007EE9  ABCE               	dw	43982
   664  007EEB  AB37               	dw	43831
   665  007EED  AAA1               	dw	43681
   666  007EEF  AA0C               	dw	43532
   667  007EF1  A977               	dw	43383
   668  007EF3  A8E3               	dw	43235
   669  007EF5  A850               	dw	43088
   670  007EF7  A7BE               	dw	42942
   671  007EF9  A72D               	dw	42797
   672  007EFB  A69D               	dw	42653
   673  007EFD  A60D               	dw	42509
   674  007EFF  A57F               	dw	42367
   675  007F01  A4F1               	dw	42225
   676  007F03  A464               	dw	42084
   677  007F05  A3D8               	dw	41944
   678  007F07  A34D               	dw	41805
   679  007F09  A2C3               	dw	41667
   680  007F0B  A23A               	dw	41530
   681  007F0D  A1B1               	dw	41393
   682  007F0F  A12A               	dw	41258
   683  007F11  A0A3               	dw	41123
   684  007F13  A01E               	dw	40990
   685  007F15  9F99               	dw	40857
   686  007F17  9F15               	dw	40725
   687  007F19  9E92               	dw	40594
   688  007F1B  9E10               	dw	40464
   689  007F1D  9D8F               	dw	40335
   690  007F1F  9D0F               	dw	40207
   691  007F21  9C90               	dw	40080
   692  007F23  9C12               	dw	39954
   693  007F25  9B95               	dw	39829
   694  007F27  9B19               	dw	39705
   695  007F29  9A9E               	dw	39582
   696  007F2B  9A23               	dw	39459
   697  007F2D  99AA               	dw	39338
   698  007F2F  9932               	dw	39218
   699  007F31  98BB               	dw	39099
   700  007F33  9844               	dw	38980
   701  007F35  97CF               	dw	38863
   702  007F37  975B               	dw	38747
   703  007F39  96E7               	dw	38631
   704  007F3B  9675               	dw	38517
   705  007F3D  9604               	dw	38404
   706  007F3F  9594               	dw	38292
   707  007F41  9525               	dw	38181
   708  007F43  94B6               	dw	38070
   709  007F45  9449               	dw	37961
   710  007F47  93DD               	dw	37853
   711  007F49  9372               	dw	37746
   712  007F4B  9308               	dw	37640
   713  007F4D  929F               	dw	37535
   714  007F4F  9237               	dw	37431
   715  007F51  91D0               	dw	37328
   716  007F53  916B               	dw	37227
   717  007F55  9106               	dw	37126
   718  007F57  90A2               	dw	37026
   719  007F59  9040               	dw	36928
   720  007F5B  8FDE               	dw	36830
   721  007F5D  8F7E               	dw	36734
   722  007F5F  8F1F               	dw	36639
   723  007F61  8EC0               	dw	36544
   724  007F63  8E63               	dw	36451
   725  007F65  8E07               	dw	36359
   726  007F67  8DAC               	dw	36268
   727  007F69  8D52               	dw	36178
   728  007F6B  8CFA               	dw	36090
   729  007F6D  8CA2               	dw	36002
   730  007F6F  8C4B               	dw	35915
   731  007F71  8BF6               	dw	35830
   732  007F73  8BA2               	dw	35746
   733  007F75  8B4F               	dw	35663
   734  007F77  8AFD               	dw	35581
   735  007F79  8AAC               	dw	35500
   736  007F7B  8A5C               	dw	35420
   737  007F7D  8A0D               	dw	35341
   738  007F7F  89C0               	dw	35264
   739  007F81  8973               	dw	35187
   740  007F83  8928               	dw	35112
   741  007F85  88DE               	dw	35038
   742  007F87  8895               	dw	34965
   743  007F89  884D               	dw	34893
   744  007F8B  8807               	dw	34823
   745  007F8D  87C1               	dw	34753
   746  007F8F  877D               	dw	34685
   747  007F91  873A               	dw	34618
   748  007F93  86F8               	dw	34552
   749  007F95  86B7               	dw	34487
   750  007F97  8677               	dw	34423
   751  007F99  8639               	dw	34361
   752  007F9B  85FC               	dw	34300
   753  007F9D  85BF               	dw	34239
   754  007F9F  8584               	dw	34180
   755  007FA1  854B               	dw	34123
   756  007FA3  8512               	dw	34066
   757  007FA5  84DB               	dw	34011
   758  007FA7  84A4               	dw	33956
   759  007FA9  846F               	dw	33903
   760  007FAB  843C               	dw	33852
   761  007FAD  8409               	dw	33801
   762  007FAF  83D7               	dw	33751
   763  007FB1  83A7               	dw	33703
   764  007FB3  8378               	dw	33656
   765  007FB5  834A               	dw	33610
   766  007FB7  831E               	dw	33566
   767  007FB9  82F2               	dw	33522
   768  007FBB  82C8               	dw	33480
   769  007FBD  829F               	dw	33439
   770  007FBF  8277               	dw	33399
   771  007FC1  8250               	dw	33360
   772  007FC3  822B               	dw	33323
   773  007FC5  8207               	dw	33287
   774  007FC7  81E4               	dw	33252
   775  007FC9  81C2               	dw	33218
   776  007FCB  81A2               	dw	33186
   777  007FCD  8182               	dw	33154
   778  007FCF  8164               	dw	33124
   779  007FD1  8147               	dw	33095
   780  007FD3  812C               	dw	33068
   781  007FD5  8111               	dw	33041
   782  007FD7  80F8               	dw	33016
   783  007FD9  80E0               	dw	32992
   784  007FDB  80C9               	dw	32969
   785  007FDD  80B4               	dw	32948
   786  007FDF  809F               	dw	32927
   787  007FE1  808C               	dw	32908
   788  007FE3  807A               	dw	32890
   789  007FE5  806A               	dw	32874
   790  007FE7  805A               	dw	32858
   791  007FE9  804C               	dw	32844
   792  007FEB  803F               	dw	32831
   793  007FED  8033               	dw	32819
   794  007FEF  8029               	dw	32809
   795  007FF1  8020               	dw	32800
   796  007FF3  8018               	dw	32792
   797  007FF5  8011               	dw	32785
   798  007FF7  800B               	dw	32779
   799  007FF9  8007               	dw	32775
   800  007FFB  8004               	dw	32772
   801  007FFD  8002               	dw	32770
   802  007FFF                     __end_of_Sinewave:
   803                           	opt stack 0
   804  0000                     _ADCON0	set	4034
   805  0000                     _ADCON0bits	set	4034
   806  0000                     _ADCON1	set	4033
   807  0000                     _ADCON2	set	4032
   808  0000                     _ADRESH	set	4036
   809  0000                     _ADRESL	set	4035
   810  0000                     _ANSELAbits	set	3896
   811  0000                     _ANSELC	set	3898
   812  0000                     _INTCONbits	set	4082
   813  0000                     _LATC	set	3979
   814  0000                     _OSCCONbits	set	4051
   815  0000                     _OSCTUNEbits	set	3995
   816  0000                     _PIE1	set	3997
   817  0000                     _PIE1bits	set	3997
   818  0000                     _PIR1bits	set	3998
   819  0000                     _RCSTA1	set	4011
   820  0000                     _RCSTA1bits	set	4011
   821  0000                     _SPBRG1	set	4015
   822  0000                     _SPBRGH1	set	4016
   823  0000                     _TRISAbits	set	3986
   824  0000                     _TRISC	set	3988
   825  0000                     _TRISCbits	set	3988
   826  0000                     _TXREG1	set	4013
   827  0000                     _TXSTA1	set	4012
   828  0000                     _TXSTA1bits	set	4012
   829  007FFF  00                 	db	0	; dummy byte at the end
   830  0000                     
   831                           	psect	nvBANK0
   832  0000F3                     __pnvBANK0:
   833                           	opt stack 0
   834  0000F3                     _baud_rate:
   835                           	opt stack 0
   836  0000F3                     	ds	4
   837                           
   838                           ; #config settings
   839  0000                     
   840                           	psect	cinit
   841  006A10                     __pcinit:
   842                           	opt stack 0
   843  006A10                     start_initialization:
   844                           	opt stack 0
   845  006A10                     __initialization:
   846                           	opt stack 0
   847                           
   848                           ; Clear objects allocated to BANK1 (256 bytes)
   849  006A10  EE01  F000         	lfsr	0,__pbssBANK1
   850  006A14  EE11 F000          	lfsr	1,256
   851  006A18                     clear_0:
   852  006A18  6AEE               	clrf	postinc0,c
   853  006A1A  50E5               	movf	postdec1,w,c
   854  006A1C  50E1               	movf	fsr1l,w,c
   855  006A1E  E1FC               	bnz	clear_0
   856  006A20  50E2               	movf	fsr1h,w,c
   857  006A22  E1FA               	bnz	clear_0
   858                           
   859                           ; Clear objects allocated to BANK0 (133 bytes)
   860  006A24  EE00  F060         	lfsr	0,__pbssBANK0
   861  006A28  0E85               	movlw	133
   862  006A2A                     clear_1:
   863  006A2A  6AEE               	clrf	postinc0,c
   864  006A2C  06E8               	decf	wreg,f,c
   865  006A2E  E1FD               	bnz	clear_1
   866                           
   867                           ; Clear objects allocated to COMRAM (4 bytes)
   868  006A30  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   869  006A32  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   870  006A34  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   871  006A36  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   872  006A38                     end_of_initialization:
   873                           	opt stack 0
   874  006A38                     __end_of__initialization:
   875                           	opt stack 0
   876  006A38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   877  006A3A  6EF8               	movwf	tblptru,c
   878  006A3C  0100               	movlb	0
   879  006A3E  EF0B  F036         	goto	_main	;jump to C main() function
   880                           tblptru	equ	0xFF8
   881                           postinc0	equ	0xFEE
   882                           wreg	equ	0xFE8
   883                           postdec1	equ	0xFE5
   884                           fsr1h	equ	0xFE2
   885                           fsr1l	equ	0xFE1
   886                           
   887                           	psect	bssCOMRAM
   888  00005A                     __pbssCOMRAM:
   889                           	opt stack 0
   890  00005A                     _i:
   891                           	opt stack 0
   892  00005A                     	ds	2
   893  00005C                     _USART1_Status:
   894                           	opt stack 0
   895  00005C                     	ds	1
   896  00005D                     _input:
   897                           	opt stack 0
   898  00005D                     	ds	1
   899                           tblptru	equ	0xFF8
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           postdec1	equ	0xFE5
   903                           fsr1h	equ	0xFE2
   904                           fsr1l	equ	0xFE1
   905                           
   906                           	psect	bssBANK0
   907  000060                     __pbssBANK0:
   908                           	opt stack 0
   909  000060                     _data:
   910                           	opt stack 0
   911  000060                     	ds	5
   912  000065                     _realNumbers:
   913                           	opt stack 0
   914  000065                     	ds	128
   915                           tblptru	equ	0xFF8
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           postdec1	equ	0xFE5
   919                           fsr1h	equ	0xFE2
   920                           fsr1l	equ	0xFE1
   921                           
   922                           	psect	bssBANK1
   923  000100                     __pbssBANK1:
   924                           	opt stack 0
   925  000100                     _oldRealNumbers:
   926                           	opt stack 0
   927  000100                     	ds	128
   928  000180                     _imaginaryNumbers:
   929                           	opt stack 0
   930  000180                     	ds	128
   931                           tblptru	equ	0xFF8
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           postdec1	equ	0xFE5
   935                           fsr1h	equ	0xFE2
   936                           fsr1l	equ	0xFE1
   937                           
   938                           	psect	cstackBANK0
   939  0000E5                     __pcstackBANK0:
   940                           	opt stack 0
   941  0000E5                     main@adc_value:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x0
   945  0000E5                     	ds	2
   946  0000E7                     main@root:
   947                           	opt stack 0
   948                           
   949                           ; 4 bytes @ 0x2
   950  0000E7                     	ds	4
   951  0000EB                     main@place:
   952                           	opt stack 0
   953                           
   954                           ; 4 bytes @ 0x6
   955  0000EB                     	ds	4
   956  0000EF                     main@k:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0xA
   960  0000EF                     	ds	2
   961  0000F1                     main@i:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0xC
   965  0000F1                     	ds	2
   966                           tblptru	equ	0xFF8
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           postdec1	equ	0xFE5
   970                           fsr1h	equ	0xFE2
   971                           fsr1l	equ	0xFE1
   972                           
   973                           	psect	cstackCOMRAM
   974  000001                     __pcstackCOMRAM:
   975                           	opt stack 0
   976  000001                     ?___wmul:
   977                           	opt stack 0
   978  000001                     ?___lmul:
   979                           	opt stack 0
   980  000001                     OpenADC@config2:
   981                           	opt stack 0
   982  000001                     Write1USART@data:
   983                           	opt stack 0
   984  000001                     Open1USART@spbrg:
   985                           	opt stack 0
   986  000001                     ___wmul@multiplier:
   987                           	opt stack 0
   988  000001                     ___lmul@multiplier:
   989                           	opt stack 0
   990                           
   991                           ; 4 bytes @ 0x0
   992  000001                     	ds	1
   993  000002                     sendChar@character:
   994                           	opt stack 0
   995  000002                     OpenADC@config3:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x1
   999  000002                     	ds	1
  1000  000003                     ??_OpenADC:
  1001  000003                     ??_Open1USART:
  1002  000003                     sendIntArray@array:
  1003                           	opt stack 0
  1004  000003                     ___wmul@multiplicand:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  000003                     	ds	2
  1009  000005                     OpenADC@config:
  1010                           	opt stack 0
  1011  000005                     sendIntArray@size:
  1012                           	opt stack 0
  1013  000005                     ___wmul@product:
  1014                           	opt stack 0
  1015  000005                     ___lmul@multiplicand:
  1016                           	opt stack 0
  1017                           
  1018                           ; 4 bytes @ 0x4
  1019  000005                     	ds	1
  1020  000006                     Open1USART@config:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0x5
  1024  000006                     	ds	1
  1025  000007                     ?___awdiv:
  1026                           	opt stack 0
  1027  000007                     ___awdiv@dividend:
  1028                           	opt stack 0
  1029                           
  1030                           ; 2 bytes @ 0x6
  1031  000007                     	ds	2
  1032  000009                     ___awdiv@divisor:
  1033                           	opt stack 0
  1034  000009                     ___lmul@product:
  1035                           	opt stack 0
  1036                           
  1037                           ; 4 bytes @ 0x8
  1038  000009                     	ds	2
  1039  00000B                     ___awdiv@counter:
  1040                           	opt stack 0
  1041                           
  1042                           ; 1 bytes @ 0xA
  1043  00000B                     	ds	1
  1044  00000C                     ___awdiv@sign:
  1045                           	opt stack 0
  1046                           
  1047                           ; 1 bytes @ 0xB
  1048  00000C                     	ds	1
  1049  00000D                     fix_fft@fr:
  1050                           	opt stack 0
  1051  00000D                     ___awdiv@quotient:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0xC
  1055  00000D                     	ds	2
  1056  00000F                     fix_fft@fi:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0xE
  1060  00000F                     	ds	2
  1061  000011                     fix_fft@m:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x10
  1065  000011                     	ds	2
  1066  000013                     ??_fix_fft:
  1067                           
  1068                           ; 0 bytes @ 0x12
  1069  000013                     	ds	8
  1070  00001B                     fix_fft@k:
  1071                           	opt stack 0
  1072                           
  1073                           ; 4 bytes @ 0x1A
  1074  00001B                     	ds	4
  1075  00001F                     fix_fft@nn:
  1076                           	opt stack 0
  1077                           
  1078                           ; 4 bytes @ 0x1E
  1079  00001F                     	ds	4
  1080  000023                     fix_fft@istep:
  1081                           	opt stack 0
  1082                           
  1083                           ; 4 bytes @ 0x22
  1084  000023                     	ds	4
  1085  000027                     fix_fft@qr:
  1086                           	opt stack 0
  1087                           
  1088                           ; 2 bytes @ 0x26
  1089  000027                     	ds	2
  1090  000029                     fix_fft@qi:
  1091                           	opt stack 0
  1092                           
  1093                           ; 2 bytes @ 0x28
  1094  000029                     	ds	2
  1095  00002B                     fix_fft@wr:
  1096                           	opt stack 0
  1097                           
  1098                           ; 2 bytes @ 0x2A
  1099  00002B                     	ds	2
  1100  00002D                     fix_fft@wi:
  1101                           	opt stack 0
  1102                           
  1103                           ; 2 bytes @ 0x2C
  1104  00002D                     	ds	2
  1105  00002F                     fix_fft@n:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x2E
  1109  00002F                     	ds	4
  1110  000033                     fix_fft@tr:
  1111                           	opt stack 0
  1112                           
  1113                           ; 2 bytes @ 0x32
  1114  000033                     	ds	2
  1115  000035                     fix_fft@ti:
  1116                           	opt stack 0
  1117                           
  1118                           ; 2 bytes @ 0x34
  1119  000035                     	ds	2
  1120  000037                     fix_fft@b:
  1121                           	opt stack 0
  1122                           
  1123                           ; 2 bytes @ 0x36
  1124  000037                     	ds	2
  1125  000039                     fix_fft@i:
  1126                           	opt stack 0
  1127                           
  1128                           ; 4 bytes @ 0x38
  1129  000039                     	ds	4
  1130  00003D                     fix_fft@mr:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x3C
  1134  00003D                     	ds	4
  1135  000041                     fix_fft@l:
  1136                           	opt stack 0
  1137                           
  1138                           ; 4 bytes @ 0x40
  1139  000041                     	ds	4
  1140  000045                     fix_fft@j:
  1141                           	opt stack 0
  1142                           
  1143                           ; 4 bytes @ 0x44
  1144  000045                     	ds	4
  1145  000049                     fix_fft@c:
  1146                           	opt stack 0
  1147                           
  1148                           ; 4 bytes @ 0x48
  1149  000049                     	ds	4
  1150  00004D                     ??_main:
  1151                           
  1152                           ; 0 bytes @ 0x4C
  1153  00004D                     	ds	13
  1154                           tblptru	equ	0xFF8
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           postdec1	equ	0xFE5
  1158                           fsr1h	equ	0xFE2
  1159                           fsr1l	equ	0xFE1
  1160                           
  1161 ;;
  1162 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
  1163 ;;
  1164 ;; *************** function _main *****************
  1165 ;; Defined at:
  1166 ;;		line 38 in file "main pic18.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  place           4    6[BANK0 ] long 
  1171 ;;  root            4    2[BANK0 ] long 
  1172 ;;  i               2   12[BANK0 ] short 
  1173 ;;  k               2   10[BANK0 ] int 
  1174 ;;  adc_value       2    0[BANK0 ] unsigned int 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;		None               void
  1177 ;; Registers used:
  1178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1184 ;;      Params:         0       0       0       0       0       0       0
  1185 ;;      Locals:         0      14       0       0       0       0       0
  1186 ;;      Temps:         13       0       0       0       0       0       0
  1187 ;;      Totals:        13      14       0       0       0       0       0
  1188 ;;Total ram usage:       27 bytes
  1189 ;; Hardware stack levels required when called:    3
  1190 ;; This function calls:
  1191 ;;		_BusyADC
  1192 ;;		_ConvertADC
  1193 ;;		_Open1USART
  1194 ;;		_OpenADC
  1195 ;;		___awdiv
  1196 ;;		___wmul
  1197 ;;		_fix_fft
  1198 ;;		_sendIntArray
  1199 ;; This function is called by:
  1200 ;;		Startup code after reset
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text0
  1205  006C16                     __ptext0:
  1206                           	opt stack 0
  1207  006C16                     _main:
  1208                           	opt stack 28
  1209                           
  1210                           ;main pic18.c: 39: unsigned int adc_value;
  1211                           ;main pic18.c: 40: TRISAbits.RA3 = 1;
  1212                           
  1213                           ;incstack = 0
  1214  006C16  8692               	bsf	3986,3,c	;volatile
  1215                           
  1216                           ;main pic18.c: 41: ANSELAbits.ANSA3 = 1;
  1217  006C18  010F               	movlb	15	; () banked
  1218  006C1A  8738               	bsf	56,3,b	;volatile
  1219                           
  1220                           ;main pic18.c: 42: TRISAbits.RA7 = 1;
  1221  006C1C  8E92               	bsf	3986,7,c	;volatile
  1222                           
  1223                           ; BSR set to: 15
  1224                           ;main pic18.c: 43: TRISC = 0x00;
  1225  006C1E  0E00               	movlw	0
  1226  006C20  6E94               	movwf	3988,c	;volatile
  1227                           
  1228                           ;main pic18.c: 44: LATC = 0x00;
  1229  006C22  0E00               	movlw	0
  1230  006C24  6E8B               	movwf	3979,c	;volatile
  1231                           
  1232                           ;main pic18.c: 45: ANSELC = 0x00;
  1233  006C26  0E00               	movlw	0
  1234  006C28  010F               	movlb	15	; () banked
  1235  006C2A  6F3A               	movwf	58,b	;volatile
  1236                           
  1237                           ; BSR set to: 15
  1238                           ;main pic18.c: 46: TRISCbits.TRISC6 = 1;
  1239  006C2C  8C94               	bsf	3988,6,c	;volatile
  1240                           
  1241                           ; BSR set to: 15
  1242                           ;main pic18.c: 47: TRISCbits.TRISC7 = 1;
  1243  006C2E  8E94               	bsf	3988,7,c	;volatile
  1244                           
  1245                           ; BSR set to: 15
  1246                           ;main pic18.c: 49: OSCCONbits.IRCF = 0b111;
  1247  006C30  88D3               	bsf	4051,4,c	;volatile
  1248  006C32  8AD3               	bsf	4051,5,c	;volatile
  1249  006C34  8CD3               	bsf	4051,6,c	;volatile
  1250                           
  1251                           ;main pic18.c: 50: OSCCONbits.SCS = 0b11;
  1252  006C36  0E03               	movlw	3
  1253  006C38  12D3               	iorwf	4051,f,c	;volatile
  1254                           
  1255                           ; BSR set to: 15
  1256                           ;main pic18.c: 51: OSCTUNEbits.TUN = 0b01111;
  1257  006C3A  809B               	bsf	3995,0,c	;volatile
  1258  006C3C  829B               	bsf	3995,1,c	;volatile
  1259  006C3E  849B               	bsf	3995,2,c	;volatile
  1260  006C40  869B               	bsf	3995,3,c	;volatile
  1261  006C42  989B               	bcf	3995,4,c	;volatile
  1262  006C44  9A9B               	bcf	3995,5,c	;volatile
  1263                           
  1264                           ;main pic18.c: 54: baud_rate = (4000000 / 9600 / 16 - 1);
  1265  006C46  0E19               	movlw	25
  1266  006C48  0100               	movlb	0	; () banked
  1267  006C4A  6FF3               	movwf	_baud_rate& (0+255),b
  1268  006C4C  0E00               	movlw	0
  1269  006C4E  0100               	movlb	0	; () banked
  1270  006C50  6FF4               	movwf	(_baud_rate+1)& (0+255),b
  1271  006C52  0E00               	movlw	0
  1272  006C54  0100               	movlb	0	; () banked
  1273  006C56  6FF5               	movwf	(_baud_rate+2)& (0+255),b
  1274  006C58  0E00               	movlw	0
  1275  006C5A  0100               	movlb	0	; () banked
  1276  006C5C  6FF6               	movwf	(_baud_rate+3)& (0+255),b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;main pic18.c: 55: OpenADC(0b11111111 &
  1280                           ;main pic18.c: 56: 0b11111111 &
  1281                           ;main pic18.c: 57: 0b11110001,
  1282                           ;main pic18.c: 58: 0b10000011 &
  1283                           ;main pic18.c: 59: 0b01111111 &
  1284                           ;main pic18.c: 60: 0b11110111 &
  1285                           ;main pic18.c: 61: 0b11111100,
  1286                           ;main pic18.c: 62: 0b1110);
  1287  006C5E  0E00               	movlw	0
  1288  006C60  6E01               	movwf	OpenADC@config2,c
  1289  006C62  0E0E               	movlw	14
  1290  006C64  6E02               	movwf	OpenADC@config3,c
  1291  006C66  0EF1               	movlw	241
  1292  006C68  EC3B  F035         	call	_OpenADC
  1293                           
  1294                           ;main pic18.c: 64: RCSTA1&=0b01001111,TXSTA1bits.TXEN=0,PIE1&=0b11001111;
  1295  006C6C  0E4F               	movlw	79
  1296  006C6E  16AB               	andwf	4011,f,c	;volatile
  1297  006C70  9AAC               	bcf	4012,5,c	;volatile
  1298  006C72  0ECF               	movlw	207
  1299  006C74  169D               	andwf	3997,f,c	;volatile
  1300                           
  1301                           ;main pic18.c: 65: Open1USART( 0b01111111 &
  1302                           ;main pic18.c: 66: 0b10111111 &
  1303                           ;main pic18.c: 67: 0b11111110 &
  1304                           ;main pic18.c: 68: 0b11111101 &
  1305                           ;main pic18.c: 69: 0b11111111 &
  1306                           ;main pic18.c: 70: 0b11101111,
  1307                           ;main pic18.c: 71: baud_rate );
  1308  006C76  C0F3  F001         	movff	_baud_rate,Open1USART@spbrg
  1309  006C7A  C0F4  F002         	movff	_baud_rate+1,Open1USART@spbrg+1
  1310  006C7E  0E2C               	movlw	44
  1311  006C80  EC8D  F035         	call	_Open1USART
  1312  006C84                     l1405:
  1313                           
  1314                           ;main pic18.c: 74: short i = 0;
  1315  006C84  0E00               	movlw	0
  1316  006C86  0100               	movlb	0	; () banked
  1317  006C88  6FF2               	movwf	(main@i+1)& (0+255),b
  1318  006C8A  0E00               	movlw	0
  1319  006C8C  0100               	movlb	0	; () banked
  1320  006C8E  6FF1               	movwf	main@i& (0+255),b
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;main pic18.c: 75: for (i = 0; i < 64; i++) {
  1324  006C90  0E00               	movlw	0
  1325  006C92  0100               	movlb	0	; () banked
  1326  006C94  6FF2               	movwf	(main@i+1)& (0+255),b
  1327  006C96  0E00               	movlw	0
  1328  006C98  0100               	movlb	0	; () banked
  1329  006C9A  6FF1               	movwf	main@i& (0+255),b
  1330  006C9C  0100               	movlb	0	; () banked
  1331  006C9E  51F2               	movf	(main@i+1)& (0+255),w,b
  1332  006CA0  0A80               	xorlw	128
  1333  006CA2  0F80               	addlw	-128
  1334  006CA4  0E40               	movlw	64
  1335  006CA6  B4D8               	btfsc	status,2,c
  1336  006CA8  5DF1               	subwf	main@i& (0+255),w,b
  1337  006CAA  B0D8               	btfsc	status,0,c
  1338  006CAC  D04A               	goto	l1425
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;main pic18.c: 76: ConvertADC();
  1342                           
  1343                           ; BSR set to: 0
  1344                           
  1345                           ; BSR set to: 0
  1346  006CAE  ECDD  F034         	call	_ConvertADC	;wreg free
  1347  006CB2                     l1413:
  1348  006CB2  ECDF  F034         	call	_BusyADC	;wreg free
  1349  006CB6  0900               	iorlw	0
  1350  006CB8  A4D8               	btfss	status,2,c
  1351  006CBA  D7FB               	goto	l1413
  1352                           
  1353                           ;main pic18.c: 82: adc_value = ((short)(ADRESH << 8) + (short)ADRESL) - 512;
  1354  006CBC  50C3               	movf	4035,w,c	;volatile
  1355  006CBE  CFC4 F04D          	movff	4036,??_main	;volatile
  1356  006CC2  6A4E               	clrf	(??_main+1)& (0+255),c
  1357  006CC4  C04D  F04E         	movff	??_main,??_main+1
  1358  006CC8  6A4D               	clrf	??_main,c
  1359  006CCA  264D               	addwf	??_main,f,c
  1360  006CCC  0E00               	movlw	0
  1361  006CCE  224E               	addwfc	??_main+1,f,c
  1362  006CD0  0E00               	movlw	0
  1363  006CD2  244D               	addwf	??_main,w,c
  1364  006CD4  0100               	movlb	0	; () banked
  1365  006CD6  6FE5               	movwf	main@adc_value& (0+255),b
  1366  006CD8  0EFE               	movlw	254
  1367  006CDA  204E               	addwfc	??_main+1,w,c
  1368  006CDC  0100               	movlb	0	; () banked
  1369  006CDE  6FE6               	movwf	(main@adc_value+1)& (0+255),b
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;main pic18.c: 83: realNumbers[i] = adc_value;
  1373  006CE0  0E65               	movlw	low _realNumbers
  1374  006CE2  6E4D               	movwf	??_main& (0+255),c
  1375  006CE4  0E00               	movlw	high _realNumbers
  1376  006CE6  6E4E               	movwf	(??_main+1)& (0+255),c
  1377  006CE8  90D8               	bcf	status,0,c
  1378  006CEA  0100               	movlb	0	; () banked
  1379  006CEC  35F1               	rlcf	main@i& (0+255),w,b
  1380  006CEE  6ED9               	movwf	fsr2l,c
  1381  006CF0  0100               	movlb	0	; () banked
  1382  006CF2  35F2               	rlcf	(main@i+1)& (0+255),w,b
  1383  006CF4  6EDA               	movwf	fsr2h,c
  1384  006CF6  504D               	movf	??_main,w,c
  1385  006CF8  26D9               	addwf	fsr2l,f,c
  1386  006CFA  504E               	movf	??_main+1,w,c
  1387  006CFC  22DA               	addwfc	fsr2h,f,c
  1388  006CFE  0100               	movlb	0	; () banked
  1389  006D00  C0E5  FFDE         	movff	main@adc_value,postinc2
  1390  006D04  0100               	movlb	0	; () banked
  1391  006D06  C0E6  FFDD         	movff	main@adc_value+1,postdec2
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;main pic18.c: 87: imaginaryNumbers[i] = 0;
  1395  006D0A  0E80               	movlw	low _imaginaryNumbers
  1396  006D0C  6E4D               	movwf	??_main& (0+255),c
  1397  006D0E  0E01               	movlw	high _imaginaryNumbers
  1398  006D10  6E4E               	movwf	(??_main+1)& (0+255),c
  1399  006D12  90D8               	bcf	status,0,c
  1400  006D14  0100               	movlb	0	; () banked
  1401  006D16  35F1               	rlcf	main@i& (0+255),w,b
  1402  006D18  6ED9               	movwf	fsr2l,c
  1403  006D1A  0100               	movlb	0	; () banked
  1404  006D1C  35F2               	rlcf	(main@i+1)& (0+255),w,b
  1405  006D1E  6EDA               	movwf	fsr2h,c
  1406  006D20  504D               	movf	??_main,w,c
  1407  006D22  26D9               	addwf	fsr2l,f,c
  1408  006D24  504E               	movf	??_main+1,w,c
  1409  006D26  22DA               	addwfc	fsr2h,f,c
  1410  006D28  0E00               	movlw	0
  1411  006D2A  6EDE               	movwf	postinc2,c
  1412  006D2C  0E00               	movlw	0
  1413  006D2E  6EDD               	movwf	postdec2,c
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;main pic18.c: 88: _delay(1500);
  1417  006D30  0EFA               	movlw	250
  1418  006D32                     u1027:
  1419  006D32  D000               	nop2	
  1420  006D34  F000               	nop	
  1421  006D36  2EE8               	decfsz	wreg,f,c
  1422  006D38  D7FC               	goto	u1027
  1423  006D3A  0100               	movlb	0	; () banked
  1424  006D3C  4BF1               	infsnz	main@i& (0+255),f,b
  1425  006D3E  2BF2               	incf	(main@i+1)& (0+255),f,b
  1426  006D40  D7AD               	goto	L1
  1427  006D42                     l1425:
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;main pic18.c: 89: }
  1431                           ;main pic18.c: 94: fix_fft(realNumbers, imaginaryNumbers, 6);
  1432  006D42  0100               	movlb	0	; () banked
  1433  006D44  0E00               	movlw	high _realNumbers
  1434  006D46  6E0E               	movwf	fix_fft@fr+1,c
  1435  006D48  0100               	movlb	0	; () banked
  1436  006D4A  0E65               	movlw	low _realNumbers
  1437  006D4C  6E0D               	movwf	fix_fft@fr,c
  1438  006D4E  0101               	movlb	1	; () banked
  1439  006D50  0E01               	movlw	high _imaginaryNumbers
  1440  006D52  6E10               	movwf	fix_fft@fi+1,c
  1441  006D54  0101               	movlb	1	; () banked
  1442  006D56  0E80               	movlw	low _imaginaryNumbers
  1443  006D58  6E0F               	movwf	fix_fft@fi,c
  1444  006D5A  0E00               	movlw	0
  1445  006D5C  6E12               	movwf	fix_fft@m+1,c
  1446  006D5E  0E06               	movlw	6
  1447  006D60  6E11               	movwf	fix_fft@m,c
  1448  006D62  EC39  F039         	call	_fix_fft	;wreg free
  1449                           
  1450                           ;main pic18.c: 96: long place, root;
  1451                           ;main pic18.c: 97: int k = 0;
  1452  006D66  0E00               	movlw	0
  1453  006D68  0100               	movlb	0	; () banked
  1454  006D6A  6FF0               	movwf	(main@k+1)& (0+255),b
  1455  006D6C  0E00               	movlw	0
  1456  006D6E  0100               	movlb	0	; () banked
  1457  006D70  6FEF               	movwf	main@k& (0+255),b
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;main pic18.c: 98: for (k=0; k < 32; k++) {
  1461  006D72  0E00               	movlw	0
  1462  006D74  0100               	movlb	0	; () banked
  1463  006D76  6FF0               	movwf	(main@k+1)& (0+255),b
  1464  006D78  0E00               	movlw	0
  1465  006D7A  0100               	movlb	0	; () banked
  1466  006D7C  6FEF               	movwf	main@k& (0+255),b
  1467  006D7E                     
  1468                           ; BSR set to: 0
  1469  006D7E  0100               	movlb	0	; () banked
  1470  006D80  51F0               	movf	(main@k+1)& (0+255),w,b
  1471  006D82  0A80               	xorlw	128
  1472  006D84  0F80               	addlw	-128
  1473  006D86  0E20               	movlw	32
  1474  006D88  B4D8               	btfsc	status,2,c
  1475  006D8A  5DEF               	subwf	main@k& (0+255),w,b
  1476  006D8C  B0D8               	btfsc	status,0,c
  1477  006D8E  D1B7               	goto	l1467
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;main pic18.c: 99: realNumbers[k] = (realNumbers[k] * realNumbers[k] +
  1481                           ;main pic18.c: 100: imaginaryNumbers[k] * imaginaryNumbers[k]);
  1482                           
  1483                           ; BSR set to: 0
  1484                           
  1485                           ; BSR set to: 0
  1486  006D90  0E65               	movlw	low _realNumbers
  1487  006D92  6E4D               	movwf	??_main& (0+255),c
  1488  006D94  0E00               	movlw	high _realNumbers
  1489  006D96  6E4E               	movwf	(??_main+1)& (0+255),c
  1490  006D98  90D8               	bcf	status,0,c
  1491  006D9A  0100               	movlb	0	; () banked
  1492  006D9C  35EF               	rlcf	main@k& (0+255),w,b
  1493  006D9E  6ED9               	movwf	fsr2l,c
  1494  006DA0  0100               	movlb	0	; () banked
  1495  006DA2  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1496  006DA4  6EDA               	movwf	fsr2h,c
  1497  006DA6  504D               	movf	??_main,w,c
  1498  006DA8  26D9               	addwf	fsr2l,f,c
  1499  006DAA  504E               	movf	??_main+1,w,c
  1500  006DAC  22DA               	addwfc	fsr2h,f,c
  1501  006DAE  CFDE F001          	movff	postinc2,___wmul@multiplier
  1502  006DB2  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1503  006DB6  0E65               	movlw	low _realNumbers
  1504  006DB8  6E4F               	movwf	(??_main+2)& (0+255),c
  1505  006DBA  0E00               	movlw	high _realNumbers
  1506  006DBC  6E50               	movwf	(??_main+3)& (0+255),c
  1507  006DBE  90D8               	bcf	status,0,c
  1508  006DC0  0100               	movlb	0	; () banked
  1509  006DC2  35EF               	rlcf	main@k& (0+255),w,b
  1510  006DC4  6ED9               	movwf	fsr2l,c
  1511  006DC6  0100               	movlb	0	; () banked
  1512  006DC8  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1513  006DCA  6EDA               	movwf	fsr2h,c
  1514  006DCC  504F               	movf	??_main+2,w,c
  1515  006DCE  26D9               	addwf	fsr2l,f,c
  1516  006DD0  5050               	movf	??_main+3,w,c
  1517  006DD2  22DA               	addwfc	fsr2h,f,c
  1518  006DD4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1519  006DD8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1520  006DDC  ECF5  F034         	call	___wmul	;wreg free
  1521  006DE0  C001  F051         	movff	?___wmul,??_main+4
  1522  006DE4  C002  F052         	movff	?___wmul+1,??_main+5
  1523  006DE8  0E80               	movlw	low _imaginaryNumbers
  1524  006DEA  6E53               	movwf	(??_main+6)& (0+255),c
  1525  006DEC  0E01               	movlw	high _imaginaryNumbers
  1526  006DEE  6E54               	movwf	(??_main+7)& (0+255),c
  1527  006DF0  90D8               	bcf	status,0,c
  1528  006DF2  0100               	movlb	0	; () banked
  1529  006DF4  35EF               	rlcf	main@k& (0+255),w,b
  1530  006DF6  6ED9               	movwf	fsr2l,c
  1531  006DF8  0100               	movlb	0	; () banked
  1532  006DFA  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1533  006DFC  6EDA               	movwf	fsr2h,c
  1534  006DFE  5053               	movf	??_main+6,w,c
  1535  006E00  26D9               	addwf	fsr2l,f,c
  1536  006E02  5054               	movf	??_main+7,w,c
  1537  006E04  22DA               	addwfc	fsr2h,f,c
  1538  006E06  CFDE F001          	movff	postinc2,___wmul@multiplier
  1539  006E0A  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1540  006E0E  0E80               	movlw	low _imaginaryNumbers
  1541  006E10  6E55               	movwf	(??_main+8)& (0+255),c
  1542  006E12  0E01               	movlw	high _imaginaryNumbers
  1543  006E14  6E56               	movwf	(??_main+9)& (0+255),c
  1544  006E16  90D8               	bcf	status,0,c
  1545  006E18  0100               	movlb	0	; () banked
  1546  006E1A  35EF               	rlcf	main@k& (0+255),w,b
  1547  006E1C  6ED9               	movwf	fsr2l,c
  1548  006E1E  0100               	movlb	0	; () banked
  1549  006E20  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1550  006E22  6EDA               	movwf	fsr2h,c
  1551  006E24  5055               	movf	??_main+8,w,c
  1552  006E26  26D9               	addwf	fsr2l,f,c
  1553  006E28  5056               	movf	??_main+9,w,c
  1554  006E2A  22DA               	addwfc	fsr2h,f,c
  1555  006E2C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1556  006E30  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1557  006E34  ECF5  F034         	call	___wmul	;wreg free
  1558  006E38  5001               	movf	?___wmul,w,c
  1559  006E3A  2651               	addwf	??_main+4,f,c
  1560  006E3C  5002               	movf	?___wmul+1,w,c
  1561  006E3E  2252               	addwfc	??_main+5,f,c
  1562  006E40  0E65               	movlw	low _realNumbers
  1563  006E42  6E57               	movwf	(??_main+10)& (0+255),c
  1564  006E44  0E00               	movlw	high _realNumbers
  1565  006E46  6E58               	movwf	(??_main+11)& (0+255),c
  1566  006E48  90D8               	bcf	status,0,c
  1567  006E4A  0100               	movlb	0	; () banked
  1568  006E4C  35EF               	rlcf	main@k& (0+255),w,b
  1569  006E4E  6ED9               	movwf	fsr2l,c
  1570  006E50  0100               	movlb	0	; () banked
  1571  006E52  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1572  006E54  6EDA               	movwf	fsr2h,c
  1573  006E56  5057               	movf	??_main+10,w,c
  1574  006E58  26D9               	addwf	fsr2l,f,c
  1575  006E5A  5058               	movf	??_main+11,w,c
  1576  006E5C  22DA               	addwfc	fsr2h,f,c
  1577  006E5E  C051  FFDE         	movff	??_main+4,postinc2
  1578  006E62  C052  FFDD         	movff	??_main+5,postdec2
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;main pic18.c: 102: place = 0x40000000;
  1582  006E66  0E00               	movlw	0
  1583  006E68  0100               	movlb	0	; () banked
  1584  006E6A  6FEB               	movwf	main@place& (0+255),b
  1585  006E6C  0E00               	movlw	0
  1586  006E6E  0100               	movlb	0	; () banked
  1587  006E70  6FEC               	movwf	(main@place+1)& (0+255),b
  1588  006E72  0E00               	movlw	0
  1589  006E74  0100               	movlb	0	; () banked
  1590  006E76  6FED               	movwf	(main@place+2)& (0+255),b
  1591  006E78  0E40               	movlw	64
  1592  006E7A  0100               	movlb	0	; () banked
  1593  006E7C  6FEE               	movwf	(main@place+3)& (0+255),b
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main pic18.c: 103: root = 0;
  1597  006E7E  0E00               	movlw	0
  1598  006E80  0100               	movlb	0	; () banked
  1599  006E82  6FE7               	movwf	main@root& (0+255),b
  1600  006E84  0E00               	movlw	0
  1601  006E86  0100               	movlb	0	; () banked
  1602  006E88  6FE8               	movwf	(main@root+1)& (0+255),b
  1603  006E8A  0E00               	movlw	0
  1604  006E8C  0100               	movlb	0	; () banked
  1605  006E8E  6FE9               	movwf	(main@root+2)& (0+255),b
  1606  006E90  0E00               	movlw	0
  1607  006E92  0100               	movlb	0	; () banked
  1608  006E94  6FEA               	movwf	(main@root+3)& (0+255),b
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;main pic18.c: 105: if (realNumbers[k] >= 0) {
  1612  006E96  0E65               	movlw	low _realNumbers
  1613  006E98  6E4D               	movwf	??_main& (0+255),c
  1614  006E9A  0E00               	movlw	high _realNumbers
  1615  006E9C  6E4E               	movwf	(??_main+1)& (0+255),c
  1616  006E9E  90D8               	bcf	status,0,c
  1617  006EA0  0100               	movlb	0	; () banked
  1618  006EA2  35EF               	rlcf	main@k& (0+255),w,b
  1619  006EA4  6ED9               	movwf	fsr2l,c
  1620  006EA6  0100               	movlb	0	; () banked
  1621  006EA8  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1622  006EAA  6EDA               	movwf	fsr2h,c
  1623  006EAC  504D               	movf	??_main,w,c
  1624  006EAE  26D9               	addwf	fsr2l,f,c
  1625  006EB0  504E               	movf	??_main+1,w,c
  1626  006EB2  22DA               	addwfc	fsr2h,f,c
  1627  006EB4  CFDE F04F          	movff	postinc2,??_main+2
  1628  006EB8  CFDD F050          	movff	postdec2,??_main+3
  1629  006EBC  AE50               	btfss	??_main+3,7,c
  1630  006EBE  D021               	goto	l1447
  1631  006EC0  D105               	goto	l1461
  1632  006EC2                     l1445:
  1633                           
  1634                           ; BSR set to: 0
  1635  006EC2  0E02               	movlw	2
  1636  006EC4  6E4D               	movwf	??_main& (0+255),c
  1637  006EC6  0100               	movlb	0	; () banked
  1638  006EC8  C0EB  F04E         	movff	main@place,??_main+1
  1639  006ECC  0100               	movlb	0	; () banked
  1640  006ECE  C0EC  F04F         	movff	main@place+1,??_main+2
  1641  006ED2  0100               	movlb	0	; () banked
  1642  006ED4  C0ED  F050         	movff	main@place+2,??_main+3
  1643  006ED8  0100               	movlb	0	; () banked
  1644  006EDA  C0EE  F051         	movff	main@place+3,??_main+4
  1645  006EDE                     u915:
  1646  006EDE  664D               	tstfsz	??_main,c
  1647  006EE0  D001               	goto	u916
  1648  006EE2  D007               	goto	u917
  1649  006EE4                     u916:
  1650  006EE4  3451               	rlcf	??_main+4,w,c
  1651  006EE6  3251               	rrcf	??_main+4,f,c
  1652  006EE8  3250               	rrcf	??_main+3,f,c
  1653  006EEA  324F               	rrcf	??_main+2,f,c
  1654  006EEC  324E               	rrcf	??_main+1,f,c
  1655  006EEE  2E4D               	decfsz	??_main,f,c
  1656  006EF0  D7F6               	goto	u915
  1657  006EF2                     u917:
  1658  006EF2  C04E  F0EB         	movff	??_main+1,main@place
  1659  006EF6  C04F  F0EC         	movff	??_main+2,main@place+1
  1660  006EFA  C050  F0ED         	movff	??_main+3,main@place+2
  1661  006EFE  C051  F0EE         	movff	??_main+4,main@place+3
  1662  006F02                     l1447:
  1663                           
  1664                           ; BSR set to: 0
  1665  006F02  0E65               	movlw	low _realNumbers
  1666  006F04  6E4D               	movwf	??_main& (0+255),c
  1667  006F06  0E00               	movlw	high _realNumbers
  1668  006F08  6E4E               	movwf	(??_main+1)& (0+255),c
  1669  006F0A  90D8               	bcf	status,0,c
  1670  006F0C  0100               	movlb	0	; () banked
  1671  006F0E  35EF               	rlcf	main@k& (0+255),w,b
  1672  006F10  6ED9               	movwf	fsr2l,c
  1673  006F12  0100               	movlb	0	; () banked
  1674  006F14  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1675  006F16  6EDA               	movwf	fsr2h,c
  1676  006F18  504D               	movf	??_main,w,c
  1677  006F1A  26D9               	addwf	fsr2l,f,c
  1678  006F1C  504E               	movf	??_main+1,w,c
  1679  006F1E  22DA               	addwfc	fsr2h,f,c
  1680  006F20  CFDE F04F          	movff	postinc2,??_main+2
  1681  006F24  CFDD F050          	movff	postdec2,??_main+3
  1682  006F28  C04F  F051         	movff	??_main+2,??_main+4
  1683  006F2C  C050  F052         	movff	??_main+3,??_main+5
  1684  006F30  0E00               	movlw	0
  1685  006F32  BE52               	btfsc	(??_main+5)& (0+255),7,c
  1686  006F34  0EFF               	movlw	255
  1687  006F36  6E53               	movwf	(??_main+6)& (0+255),c
  1688  006F38  6E54               	movwf	(??_main+7)& (0+255),c
  1689  006F3A  5054               	movf	??_main+7,w,c
  1690  006F3C  0A80               	xorlw	128
  1691  006F3E  6E55               	movwf	(??_main+8)& (0+255),c
  1692  006F40  0100               	movlb	0	; () banked
  1693  006F42  51EB               	movf	main@place& (0+255),w,b
  1694  006F44  5C51               	subwf	??_main+4,w,c
  1695  006F46  0100               	movlb	0	; () banked
  1696  006F48  51EC               	movf	(main@place+1)& (0+255),w,b
  1697  006F4A  5852               	subwfb	??_main+5,w,c
  1698  006F4C  0100               	movlb	0	; () banked
  1699  006F4E  51ED               	movf	(main@place+2)& (0+255),w,b
  1700  006F50  5853               	subwfb	??_main+6,w,c
  1701  006F52  0100               	movlb	0	; () banked
  1702  006F54  51EE               	movf	(main@place+3)& (0+255),w,b
  1703  006F56  0A80               	xorlw	128
  1704  006F58  5855               	subwfb	(??_main+8)& (0+255),w,c
  1705  006F5A  B0D8               	btfsc	status,0,c
  1706  006F5C  D0B0               	goto	l1459
  1707  006F5E  D7B1               	goto	l1445
  1708  006F60                     l1449:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;main pic18.c: 110: if (realNumbers[k] >= root + place) {
  1712  006F60  0100               	movlb	0	; () banked
  1713  006F62  51EB               	movf	main@place& (0+255),w,b
  1714  006F64  0100               	movlb	0	; () banked
  1715  006F66  25E7               	addwf	main@root& (0+255),w,b
  1716  006F68  6E4D               	movwf	??_main& (0+255),c
  1717  006F6A  0100               	movlb	0	; () banked
  1718  006F6C  51EC               	movf	(main@place+1)& (0+255),w,b
  1719  006F6E  0100               	movlb	0	; () banked
  1720  006F70  21E8               	addwfc	(main@root+1)& (0+255),w,b
  1721  006F72  6E4E               	movwf	(??_main+1)& (0+255),c
  1722  006F74  0100               	movlb	0	; () banked
  1723  006F76  51ED               	movf	(main@place+2)& (0+255),w,b
  1724  006F78  0100               	movlb	0	; () banked
  1725  006F7A  21E9               	addwfc	(main@root+2)& (0+255),w,b
  1726  006F7C  6E4F               	movwf	(??_main+2)& (0+255),c
  1727  006F7E  0100               	movlb	0	; () banked
  1728  006F80  51EE               	movf	(main@place+3)& (0+255),w,b
  1729  006F82  0100               	movlb	0	; () banked
  1730  006F84  21EA               	addwfc	(main@root+3)& (0+255),w,b
  1731  006F86  6E50               	movwf	(??_main+3)& (0+255),c
  1732  006F88  0E65               	movlw	low _realNumbers
  1733  006F8A  6E51               	movwf	(??_main+4)& (0+255),c
  1734  006F8C  0E00               	movlw	high _realNumbers
  1735  006F8E  6E52               	movwf	(??_main+5)& (0+255),c
  1736  006F90  90D8               	bcf	status,0,c
  1737  006F92  0100               	movlb	0	; () banked
  1738  006F94  35EF               	rlcf	main@k& (0+255),w,b
  1739  006F96  6ED9               	movwf	fsr2l,c
  1740  006F98  0100               	movlb	0	; () banked
  1741  006F9A  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1742  006F9C  6EDA               	movwf	fsr2h,c
  1743  006F9E  5051               	movf	??_main+4,w,c
  1744  006FA0  26D9               	addwf	fsr2l,f,c
  1745  006FA2  5052               	movf	??_main+5,w,c
  1746  006FA4  22DA               	addwfc	fsr2h,f,c
  1747  006FA6  CFDE F053          	movff	postinc2,??_main+6
  1748  006FAA  CFDD F054          	movff	postdec2,??_main+7
  1749  006FAE  C053  F055         	movff	??_main+6,??_main+8
  1750  006FB2  C054  F056         	movff	??_main+7,??_main+9
  1751  006FB6  0E00               	movlw	0
  1752  006FB8  BE56               	btfsc	(??_main+9)& (0+255),7,c
  1753  006FBA  0EFF               	movlw	255
  1754  006FBC  6E57               	movwf	(??_main+10)& (0+255),c
  1755  006FBE  6E58               	movwf	(??_main+11)& (0+255),c
  1756  006FC0  5058               	movf	??_main+11,w,c
  1757  006FC2  0A80               	xorlw	128
  1758  006FC4  6E59               	movwf	(??_main+12)& (0+255),c
  1759  006FC6  504D               	movf	??_main,w,c
  1760  006FC8  5C55               	subwf	??_main+8,w,c
  1761  006FCA  504E               	movf	??_main+1,w,c
  1762  006FCC  5856               	subwfb	??_main+9,w,c
  1763  006FCE  504F               	movf	??_main+2,w,c
  1764  006FD0  5857               	subwfb	??_main+10,w,c
  1765  006FD2  5050               	movf	??_main+3,w,c
  1766  006FD4  0A80               	xorlw	128
  1767  006FD6  5859               	subwfb	(??_main+12)& (0+255),w,c
  1768  006FD8  A0D8               	btfss	status,0,c
  1769  006FDA  D038               	goto	l1455
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;main pic18.c: 111: realNumbers[k] -= root + place;
  1773  006FDC  0100               	movlb	0	; () banked
  1774  006FDE  C0E7  F04D         	movff	main@root,??_main
  1775  006FE2  0100               	movlb	0	; () banked
  1776  006FE4  C0E8  F04E         	movff	main@root+1,??_main+1
  1777  006FE8  0100               	movlb	0	; () banked
  1778  006FEA  51EB               	movf	main@place& (0+255),w,b
  1779  006FEC  264D               	addwf	??_main,f,c
  1780  006FEE  0100               	movlb	0	; () banked
  1781  006FF0  51EC               	movf	(main@place+1)& (0+255),w,b
  1782  006FF2  224E               	addwfc	??_main+1,f,c
  1783  006FF4  0E65               	movlw	low _realNumbers
  1784  006FF6  6E4F               	movwf	(??_main+2)& (0+255),c
  1785  006FF8  0E00               	movlw	high _realNumbers
  1786  006FFA  6E50               	movwf	(??_main+3)& (0+255),c
  1787  006FFC  90D8               	bcf	status,0,c
  1788  006FFE  0100               	movlb	0	; () banked
  1789  007000  35EF               	rlcf	main@k& (0+255),w,b
  1790  007002  6ED9               	movwf	fsr2l,c
  1791  007004  0100               	movlb	0	; () banked
  1792  007006  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1793  007008  6EDA               	movwf	fsr2h,c
  1794  00700A  504F               	movf	??_main+2,w,c
  1795  00700C  26D9               	addwf	fsr2l,f,c
  1796  00700E  5050               	movf	??_main+3,w,c
  1797  007010  22DA               	addwfc	fsr2h,f,c
  1798  007012  504D               	movf	??_main,w,c
  1799  007014  5EDE               	subwf	postinc2,f,c
  1800  007016  504E               	movf	??_main+1,w,c
  1801  007018  5ADD               	subwfb	postdec2,f,c
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;main pic18.c: 112: root += place * 2;
  1805  00701A  90D8               	bcf	status,0,c
  1806  00701C  0100               	movlb	0	; () banked
  1807  00701E  35EB               	rlcf	main@place& (0+255),w,b
  1808  007020  6E4D               	movwf	??_main& (0+255),c
  1809  007022  0100               	movlb	0	; () banked
  1810  007024  35EC               	rlcf	(main@place+1)& (0+255),w,b
  1811  007026  6E4E               	movwf	(??_main+1)& (0+255),c
  1812  007028  0100               	movlb	0	; () banked
  1813  00702A  35ED               	rlcf	(main@place+2)& (0+255),w,b
  1814  00702C  6E4F               	movwf	(??_main+2)& (0+255),c
  1815  00702E  0100               	movlb	0	; () banked
  1816  007030  35EE               	rlcf	(main@place+3)& (0+255),w,b
  1817  007032  6E50               	movwf	(??_main+3)& (0+255),c
  1818  007034  504D               	movf	??_main,w,c
  1819  007036  0100               	movlb	0	; () banked
  1820  007038  27E7               	addwf	main@root& (0+255),f,b
  1821  00703A  504E               	movf	??_main+1,w,c
  1822  00703C  0100               	movlb	0	; () banked
  1823  00703E  23E8               	addwfc	(main@root+1)& (0+255),f,b
  1824  007040  504F               	movf	??_main+2,w,c
  1825  007042  0100               	movlb	0	; () banked
  1826  007044  23E9               	addwfc	(main@root+2)& (0+255),f,b
  1827  007046  5050               	movf	??_main+3,w,c
  1828  007048  0100               	movlb	0	; () banked
  1829  00704A  23EA               	addwfc	(main@root+3)& (0+255),f,b
  1830  00704C                     l1455:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;main pic18.c: 113: }
  1834                           ;main pic18.c: 115: root = root >> 1;
  1835  00704C  0100               	movlb	0	; () banked
  1836  00704E  C0E7  F04D         	movff	main@root,??_main
  1837  007052  0100               	movlb	0	; () banked
  1838  007054  C0E8  F04E         	movff	main@root+1,??_main+1
  1839  007058  0100               	movlb	0	; () banked
  1840  00705A  C0E9  F04F         	movff	main@root+2,??_main+2
  1841  00705E  0100               	movlb	0	; () banked
  1842  007060  C0EA  F050         	movff	main@root+3,??_main+3
  1843  007064  3450               	rlcf	??_main+3,w,c
  1844  007066  3250               	rrcf	??_main+3,f,c
  1845  007068  324F               	rrcf	??_main+2,f,c
  1846  00706A  324E               	rrcf	??_main+1,f,c
  1847  00706C  324D               	rrcf	??_main,f,c
  1848  00706E  C04D  F0E7         	movff	??_main,main@root
  1849  007072  C04E  F0E8         	movff	??_main+1,main@root+1
  1850  007076  C04F  F0E9         	movff	??_main+2,main@root+2
  1851  00707A  C050  F0EA         	movff	??_main+3,main@root+3
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;main pic18.c: 116: place = place >> 2;
  1855  00707E  0E02               	movlw	2
  1856  007080  6E4D               	movwf	??_main& (0+255),c
  1857  007082  0100               	movlb	0	; () banked
  1858  007084  C0EB  F04E         	movff	main@place,??_main+1
  1859  007088  0100               	movlb	0	; () banked
  1860  00708A  C0EC  F04F         	movff	main@place+1,??_main+2
  1861  00708E  0100               	movlb	0	; () banked
  1862  007090  C0ED  F050         	movff	main@place+2,??_main+3
  1863  007094  0100               	movlb	0	; () banked
  1864  007096  C0EE  F051         	movff	main@place+3,??_main+4
  1865  00709A                     u945:
  1866  00709A  664D               	tstfsz	??_main,c
  1867  00709C  D001               	goto	u946
  1868  00709E  D007               	goto	u947
  1869  0070A0                     u946:
  1870  0070A0  3451               	rlcf	??_main+4,w,c
  1871  0070A2  3251               	rrcf	??_main+4,f,c
  1872  0070A4  3250               	rrcf	??_main+3,f,c
  1873  0070A6  324F               	rrcf	??_main+2,f,c
  1874  0070A8  324E               	rrcf	??_main+1,f,c
  1875  0070AA  2E4D               	decfsz	??_main,f,c
  1876  0070AC  D7F6               	goto	u945
  1877  0070AE                     u947:
  1878  0070AE  C04E  F0EB         	movff	??_main+1,main@place
  1879  0070B2  C04F  F0EC         	movff	??_main+2,main@place+1
  1880  0070B6  C050  F0ED         	movff	??_main+3,main@place+2
  1881  0070BA  C051  F0EE         	movff	??_main+4,main@place+3
  1882  0070BE                     l1459:
  1883                           
  1884                           ; BSR set to: 0
  1885  0070BE  0100               	movlb	0	; () banked
  1886  0070C0  51EE               	movf	(main@place+3)& (0+255),w,b
  1887  0070C2  11EB               	iorwf	main@place& (0+255),w,b
  1888  0070C4  11EC               	iorwf	(main@place+1)& (0+255),w,b
  1889  0070C6  11ED               	iorwf	(main@place+2)& (0+255),w,b
  1890  0070C8  A4D8               	btfss	status,2,c
  1891  0070CA  D74A               	goto	l1449
  1892  0070CC                     l1461:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;main pic18.c: 117: }
  1896                           ;main pic18.c: 118: }
  1897                           ;main pic18.c: 120: realNumbers[k] = root;
  1898  0070CC  0E65               	movlw	low _realNumbers
  1899  0070CE  6E4D               	movwf	??_main& (0+255),c
  1900  0070D0  0E00               	movlw	high _realNumbers
  1901  0070D2  6E4E               	movwf	(??_main+1)& (0+255),c
  1902  0070D4  90D8               	bcf	status,0,c
  1903  0070D6  0100               	movlb	0	; () banked
  1904  0070D8  35EF               	rlcf	main@k& (0+255),w,b
  1905  0070DA  6ED9               	movwf	fsr2l,c
  1906  0070DC  0100               	movlb	0	; () banked
  1907  0070DE  35F0               	rlcf	(main@k+1)& (0+255),w,b
  1908  0070E0  6EDA               	movwf	fsr2h,c
  1909  0070E2  504D               	movf	??_main,w,c
  1910  0070E4  26D9               	addwf	fsr2l,f,c
  1911  0070E6  504E               	movf	??_main+1,w,c
  1912  0070E8  22DA               	addwfc	fsr2h,f,c
  1913  0070EA  0100               	movlb	0	; () banked
  1914  0070EC  C0E7  FFDE         	movff	main@root,postinc2
  1915  0070F0  0100               	movlb	0	; () banked
  1916  0070F2  C0E8  FFDD         	movff	main@root+1,postdec2
  1917                           
  1918                           ; BSR set to: 0
  1919  0070F6  0100               	movlb	0	; () banked
  1920  0070F8  4BEF               	infsnz	main@k& (0+255),f,b
  1921  0070FA  2BF0               	incf	(main@k+1)& (0+255),f,b
  1922  0070FC  D640               	goto	L2
  1923  0070FE                     l1467:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;main pic18.c: 121: }
  1927                           ;main pic18.c: 124: for(i = 0; i < 64; i++) {
  1928  0070FE  0E00               	movlw	0
  1929  007100  0100               	movlb	0	; () banked
  1930  007102  6FF2               	movwf	(main@i+1)& (0+255),b
  1931  007104  0E00               	movlw	0
  1932  007106  0100               	movlb	0	; () banked
  1933  007108  6FF1               	movwf	main@i& (0+255),b
  1934  00710A                     
  1935                           ; BSR set to: 0
  1936  00710A  0100               	movlb	0	; () banked
  1937  00710C  51F2               	movf	(main@i+1)& (0+255),w,b
  1938  00710E  0A80               	xorlw	128
  1939  007110  0F80               	addlw	-128
  1940  007112  0E40               	movlw	64
  1941  007114  B4D8               	btfsc	status,2,c
  1942  007116  5DF1               	subwf	main@i& (0+255),w,b
  1943  007118  B0D8               	btfsc	status,0,c
  1944  00711A  D065               	goto	l1479
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;main pic18.c: 125: realNumbers[i] = oldRealNumbers[i] * 10 / 16 + realNumbers[i] * 6 / 
      +                          16;
  1948                           
  1949                           ; BSR set to: 0
  1950                           
  1951                           ; BSR set to: 0
  1952  00711C  0E00               	movlw	low _oldRealNumbers
  1953  00711E  6E4D               	movwf	??_main& (0+255),c
  1954  007120  0E01               	movlw	high _oldRealNumbers
  1955  007122  6E4E               	movwf	(??_main+1)& (0+255),c
  1956  007124  90D8               	bcf	status,0,c
  1957  007126  0100               	movlb	0	; () banked
  1958  007128  35F1               	rlcf	main@i& (0+255),w,b
  1959  00712A  6ED9               	movwf	fsr2l,c
  1960  00712C  0100               	movlb	0	; () banked
  1961  00712E  35F2               	rlcf	(main@i+1)& (0+255),w,b
  1962  007130  6EDA               	movwf	fsr2h,c
  1963  007132  504D               	movf	??_main,w,c
  1964  007134  26D9               	addwf	fsr2l,f,c
  1965  007136  504E               	movf	??_main+1,w,c
  1966  007138  22DA               	addwfc	fsr2h,f,c
  1967  00713A  CFDE F001          	movff	postinc2,___wmul@multiplier
  1968  00713E  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1969  007142  0E00               	movlw	0
  1970  007144  6E04               	movwf	___wmul@multiplicand+1,c
  1971  007146  0E0A               	movlw	10
  1972  007148  6E03               	movwf	___wmul@multiplicand,c
  1973  00714A  ECF5  F034         	call	___wmul	;wreg free
  1974  00714E  C001  F007         	movff	?___wmul,___awdiv@dividend
  1975  007152  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  1976  007156  0E00               	movlw	0
  1977  007158  6E0A               	movwf	___awdiv@divisor+1,c
  1978  00715A  0E10               	movlw	16
  1979  00715C  6E09               	movwf	___awdiv@divisor,c
  1980  00715E  ECB9  F035         	call	___awdiv	;wreg free
  1981  007162  C007  F04F         	movff	?___awdiv,??_main+2
  1982  007166  C008  F050         	movff	?___awdiv+1,??_main+3
  1983  00716A  0E65               	movlw	low _realNumbers
  1984  00716C  6E51               	movwf	(??_main+4)& (0+255),c
  1985  00716E  0E00               	movlw	high _realNumbers
  1986  007170  6E52               	movwf	(??_main+5)& (0+255),c
  1987  007172  90D8               	bcf	status,0,c
  1988  007174  0100               	movlb	0	; () banked
  1989  007176  35F1               	rlcf	main@i& (0+255),w,b
  1990  007178  6ED9               	movwf	fsr2l,c
  1991  00717A  0100               	movlb	0	; () banked
  1992  00717C  35F2               	rlcf	(main@i+1)& (0+255),w,b
  1993  00717E  6EDA               	movwf	fsr2h,c
  1994  007180  5051               	movf	??_main+4,w,c
  1995  007182  26D9               	addwf	fsr2l,f,c
  1996  007184  5052               	movf	??_main+5,w,c
  1997  007186  22DA               	addwfc	fsr2h,f,c
  1998  007188  CFDE F001          	movff	postinc2,___wmul@multiplier
  1999  00718C  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  2000  007190  0E00               	movlw	0
  2001  007192  6E04               	movwf	___wmul@multiplicand+1,c
  2002  007194  0E06               	movlw	6
  2003  007196  6E03               	movwf	___wmul@multiplicand,c
  2004  007198  ECF5  F034         	call	___wmul	;wreg free
  2005  00719C  C001  F007         	movff	?___wmul,___awdiv@dividend
  2006  0071A0  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  2007  0071A4  0E00               	movlw	0
  2008  0071A6  6E0A               	movwf	___awdiv@divisor+1,c
  2009  0071A8  0E10               	movlw	16
  2010  0071AA  6E09               	movwf	___awdiv@divisor,c
  2011  0071AC  ECB9  F035         	call	___awdiv	;wreg free
  2012  0071B0  5007               	movf	?___awdiv,w,c
  2013  0071B2  264F               	addwf	??_main+2,f,c
  2014  0071B4  5008               	movf	?___awdiv+1,w,c
  2015  0071B6  2250               	addwfc	??_main+3,f,c
  2016  0071B8  0E65               	movlw	low _realNumbers
  2017  0071BA  6E53               	movwf	(??_main+6)& (0+255),c
  2018  0071BC  0E00               	movlw	high _realNumbers
  2019  0071BE  6E54               	movwf	(??_main+7)& (0+255),c
  2020  0071C0  90D8               	bcf	status,0,c
  2021  0071C2  0100               	movlb	0	; () banked
  2022  0071C4  35F1               	rlcf	main@i& (0+255),w,b
  2023  0071C6  6ED9               	movwf	fsr2l,c
  2024  0071C8  0100               	movlb	0	; () banked
  2025  0071CA  35F2               	rlcf	(main@i+1)& (0+255),w,b
  2026  0071CC  6EDA               	movwf	fsr2h,c
  2027  0071CE  5053               	movf	??_main+6,w,c
  2028  0071D0  26D9               	addwf	fsr2l,f,c
  2029  0071D2  5054               	movf	??_main+7,w,c
  2030  0071D4  22DA               	addwfc	fsr2h,f,c
  2031  0071D6  C04F  FFDE         	movff	??_main+2,postinc2
  2032  0071DA  C050  FFDD         	movff	??_main+3,postdec2
  2033                           
  2034                           ; BSR set to: 0
  2035  0071DE  0100               	movlb	0	; () banked
  2036  0071E0  4BF1               	infsnz	main@i& (0+255),f,b
  2037  0071E2  2BF2               	incf	(main@i+1)& (0+255),f,b
  2038  0071E4  D792               	goto	L3
  2039  0071E6                     l1479:
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;main pic18.c: 126: }
  2043                           ;main pic18.c: 127: realNumbers[0] = 255;
  2044  0071E6  0E00               	movlw	0
  2045  0071E8  0100               	movlb	0	; () banked
  2046  0071EA  6F66               	movwf	(_realNumbers+1)& (0+255),b
  2047  0071EC  0100               	movlb	0	; () banked
  2048  0071EE  6965               	setf	_realNumbers& (0+255),b
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;main pic18.c: 128: sendIntArray(realNumbers, 32);
  2052  0071F0  0100               	movlb	0	; () banked
  2053  0071F2  0E00               	movlw	high _realNumbers
  2054  0071F4  6E04               	movwf	sendIntArray@array+1,c
  2055  0071F6  0100               	movlb	0	; () banked
  2056  0071F8  0E65               	movlw	low _realNumbers
  2057  0071FA  6E03               	movwf	sendIntArray@array,c
  2058  0071FC  0E00               	movlw	0
  2059  0071FE  6E06               	movwf	sendIntArray@size+1,c
  2060  007200  0E20               	movlw	32
  2061  007202  6E05               	movwf	sendIntArray@size,c
  2062  007204  EC21  F035         	call	_sendIntArray	;wreg free
  2063                           
  2064                           ;main pic18.c: 129: for (i = 0; i < 64; i++) {
  2065  007208  0E00               	movlw	0
  2066  00720A  0100               	movlb	0	; () banked
  2067  00720C  6FF2               	movwf	(main@i+1)& (0+255),b
  2068  00720E  0E00               	movlw	0
  2069  007210  0100               	movlb	0	; () banked
  2070  007212  6FF1               	movwf	main@i& (0+255),b
  2071  007214                     
  2072                           ; BSR set to: 0
  2073  007214  0100               	movlb	0	; () banked
  2074  007216  51F2               	movf	(main@i+1)& (0+255),w,b
  2075  007218  0A80               	xorlw	128
  2076  00721A  0F80               	addlw	-128
  2077  00721C  0E40               	movlw	64
  2078  00721E  B4D8               	btfsc	status,2,c
  2079  007220  5DF1               	subwf	main@i& (0+255),w,b
  2080  007222  B0D8               	btfsc	status,0,c
  2081  007224  D52F               	goto	l1405
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;main pic18.c: 130: oldRealNumbers[i] = realNumbers[i];
  2085                           
  2086                           ; BSR set to: 0
  2087                           
  2088                           ; BSR set to: 0
  2089  007226  0E65               	movlw	low _realNumbers
  2090  007228  6E4D               	movwf	??_main& (0+255),c
  2091  00722A  0E00               	movlw	high _realNumbers
  2092  00722C  6E4E               	movwf	(??_main+1)& (0+255),c
  2093  00722E  90D8               	bcf	status,0,c
  2094  007230  0100               	movlb	0	; () banked
  2095  007232  35F1               	rlcf	main@i& (0+255),w,b
  2096  007234  6ED9               	movwf	fsr2l,c
  2097  007236  0100               	movlb	0	; () banked
  2098  007238  35F2               	rlcf	(main@i+1)& (0+255),w,b
  2099  00723A  6EDA               	movwf	fsr2h,c
  2100  00723C  504D               	movf	??_main,w,c
  2101  00723E  26D9               	addwf	fsr2l,f,c
  2102  007240  504E               	movf	??_main+1,w,c
  2103  007242  22DA               	addwfc	fsr2h,f,c
  2104  007244  0E00               	movlw	low _oldRealNumbers
  2105  007246  6E4F               	movwf	(??_main+2)& (0+255),c
  2106  007248  0E01               	movlw	high _oldRealNumbers
  2107  00724A  6E50               	movwf	(??_main+3)& (0+255),c
  2108  00724C  90D8               	bcf	status,0,c
  2109  00724E  0100               	movlb	0	; () banked
  2110  007250  35F1               	rlcf	main@i& (0+255),w,b
  2111  007252  6EE1               	movwf	fsr1l,c
  2112  007254  0100               	movlb	0	; () banked
  2113  007256  35F2               	rlcf	(main@i+1)& (0+255),w,b
  2114  007258  6EE2               	movwf	fsr1h,c
  2115  00725A  504F               	movf	??_main+2,w,c
  2116  00725C  26E1               	addwf	fsr1l,f,c
  2117  00725E  5050               	movf	??_main+3,w,c
  2118  007260  22E2               	addwfc	fsr1h,f,c
  2119  007262  CFDE FFE6          	movff	postinc2,postinc1
  2120  007266  CFDD FFE5          	movff	postdec2,postdec1
  2121                           
  2122                           ; BSR set to: 0
  2123  00726A  0100               	movlb	0	; () banked
  2124  00726C  4BF1               	infsnz	main@i& (0+255),f,b
  2125  00726E  2BF2               	incf	(main@i+1)& (0+255),f,b
  2126  007270  D7D1               	goto	L4
  2127  007272                     __end_of_main:
  2128                           	opt stack 0
  2129                           tblptru	equ	0xFF8
  2130                           postinc0	equ	0xFEE
  2131                           wreg	equ	0xFE8
  2132                           postinc1	equ	0xFE6
  2133                           postdec1	equ	0xFE5
  2134                           fsr1h	equ	0xFE2
  2135                           fsr1l	equ	0xFE1
  2136                           postinc2	equ	0xFDE
  2137                           postdec2	equ	0xFDD
  2138                           fsr2h	equ	0xFDA
  2139                           fsr2l	equ	0xFD9
  2140                           status	equ	0xFD8
  2141                           
  2142 ;; *************** function _sendIntArray *****************
  2143 ;; Defined at:
  2144 ;;		line 153 in file "main pic18.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  array           2    2[COMRAM] PTR short 
  2147 ;;		 -> realNumbers(128), 
  2148 ;;  size            2    4[COMRAM] unsigned int 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;		None               void
  2153 ;; Registers used:
  2154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2160 ;;      Params:         4       0       0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0
  2163 ;;      Totals:         4       0       0       0       0       0       0
  2164 ;;Total ram usage:        4 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    2
  2167 ;; This function calls:
  2168 ;;		_sendChar
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text1
  2175  006A42                     __ptext1:
  2176                           	opt stack 0
  2177  006A42                     _sendIntArray:
  2178                           	opt stack 28
  2179                           
  2180                           ;main pic18.c: 154: for(i = 0; i < size; i++) {
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;incstack = 0
  2184  006A42  0E00               	movlw	0
  2185  006A44  6E5B               	movwf	_i+1,c
  2186  006A46  0E00               	movlw	0
  2187  006A48  6E5A               	movwf	_i,c
  2188  006A4A  D00E               	goto	l1331
  2189  006A4C                     l1327:
  2190                           
  2191                           ;main pic18.c: 155: sendChar(array[i]);
  2192  006A4C  90D8               	bcf	status,0,c
  2193  006A4E  345A               	rlcf	_i,w,c
  2194  006A50  6ED9               	movwf	fsr2l,c
  2195  006A52  345B               	rlcf	_i+1,w,c
  2196  006A54  6EDA               	movwf	fsr2h,c
  2197  006A56  5003               	movf	sendIntArray@array,w,c
  2198  006A58  26D9               	addwf	fsr2l,f,c
  2199  006A5A  5004               	movf	sendIntArray@array+1,w,c
  2200  006A5C  22DA               	addwfc	fsr2h,f,c
  2201  006A5E  50DF               	movf	indf2,w,c
  2202  006A60  ECE5  F034         	call	_sendChar
  2203  006A64  4A5A               	infsnz	_i,f,c
  2204  006A66  2A5B               	incf	_i+1,f,c
  2205  006A68                     l1331:
  2206  006A68  5005               	movf	sendIntArray@size,w,c
  2207  006A6A  5C5A               	subwf	_i,w,c
  2208  006A6C  5006               	movf	sendIntArray@size+1,w,c
  2209  006A6E  585B               	subwfb	_i+1,w,c
  2210  006A70  B0D8               	btfsc	status,0,c
  2211  006A72  0012               	return	
  2212  006A74  D7EB               	goto	l1327
  2213  006A76                     __end_of_sendIntArray:
  2214                           	opt stack 0
  2215                           tblptru	equ	0xFF8
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           postinc1	equ	0xFE6
  2219                           postdec1	equ	0xFE5
  2220                           fsr1h	equ	0xFE2
  2221                           fsr1l	equ	0xFE1
  2222                           indf2	equ	0xFDF
  2223                           postinc2	equ	0xFDE
  2224                           postdec2	equ	0xFDD
  2225                           fsr2h	equ	0xFDA
  2226                           fsr2l	equ	0xFD9
  2227                           status	equ	0xFD8
  2228                           
  2229 ;; *************** function _sendChar *****************
  2230 ;; Defined at:
  2231 ;;		line 148 in file "main pic18.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  character       1    wreg     unsigned char 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;  character       1    1[COMRAM] unsigned char 
  2236 ;; Return value:  Size  Location     Type
  2237 ;;		None               void
  2238 ;; Registers used:
  2239 ;;		wreg, status,2, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2245 ;;      Params:         0       0       0       0       0       0       0
  2246 ;;      Locals:         1       0       0       0       0       0       0
  2247 ;;      Temps:          0       0       0       0       0       0       0
  2248 ;;      Totals:         1       0       0       0       0       0       0
  2249 ;;Total ram usage:        1 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    1
  2252 ;; This function calls:
  2253 ;;		_Write1USART
  2254 ;; This function is called by:
  2255 ;;		_sendIntArray
  2256 ;;		_sendCharArray
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text2
  2261  0069CA                     __ptext2:
  2262                           	opt stack 0
  2263  0069CA                     _sendChar:
  2264                           	opt stack 28
  2265                           
  2266                           ;incstack = 0
  2267                           ;sendChar@character stored from wreg
  2268  0069CA  6E02               	movwf	sendChar@character,c
  2269  0069CC                     l100:
  2270  0069CC  A2AC               	btfss	4012,1,c	;volatile
  2271  0069CE  D7FE               	goto	l100
  2272                           
  2273                           ;main pic18.c: 150: Write1USART(character);
  2274  0069D0  5002               	movf	sendChar@character,w,c
  2275  0069D2  ECEC  F034         	call	_Write1USART
  2276  0069D6  0012               	return	
  2277  0069D8                     __end_of_sendChar:
  2278                           	opt stack 0
  2279                           tblptru	equ	0xFF8
  2280                           postinc0	equ	0xFEE
  2281                           wreg	equ	0xFE8
  2282                           postinc1	equ	0xFE6
  2283                           postdec1	equ	0xFE5
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           indf2	equ	0xFDF
  2287                           postinc2	equ	0xFDE
  2288                           postdec2	equ	0xFDD
  2289                           fsr2h	equ	0xFDA
  2290                           fsr2l	equ	0xFD9
  2291                           status	equ	0xFD8
  2292                           
  2293 ;; *************** function _Write1USART *****************
  2294 ;; Defined at:
  2295 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1write.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  data            1    wreg     unsigned char 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  data            1    0[COMRAM] unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;		None               void
  2302 ;; Registers used:
  2303 ;;		wreg
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2309 ;;      Params:         0       0       0       0       0       0       0
  2310 ;;      Locals:         1       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0
  2312 ;;      Totals:         1       0       0       0       0       0       0
  2313 ;;Total ram usage:        1 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_sendChar
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text3
  2323  0069D8                     __ptext3:
  2324                           	opt stack 0
  2325  0069D8                     _Write1USART:
  2326                           	opt stack 28
  2327                           
  2328                           ;incstack = 0
  2329                           ;Write1USART@data stored from wreg
  2330  0069D8  6E01               	movwf	Write1USART@data,c
  2331  0069DA  ACAC               	btfss	4012,6,c	;volatile
  2332  0069DC  D003               	goto	l1157
  2333  0069DE  90AC               	bcf	4012,0,c	;volatile
  2334  0069E0  B25C               	btfsc	_USART1_Status,1,c
  2335  0069E2  80AC               	bsf	4012,0,c	;volatile
  2336  0069E4                     l1157:
  2337  0069E4  C001  FFAD         	movff	Write1USART@data,4013	;volatile
  2338  0069E8  0012               	return	
  2339  0069EA                     __end_of_Write1USART:
  2340                           	opt stack 0
  2341                           tblptru	equ	0xFF8
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           postinc1	equ	0xFE6
  2345                           postdec1	equ	0xFE5
  2346                           fsr1h	equ	0xFE2
  2347                           fsr1l	equ	0xFE1
  2348                           indf2	equ	0xFDF
  2349                           postinc2	equ	0xFDE
  2350                           postdec2	equ	0xFDD
  2351                           fsr2h	equ	0xFDA
  2352                           fsr2l	equ	0xFD9
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function _fix_fft *****************
  2356 ;; Defined at:
  2357 ;;		line 155 in file "fft.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  fr              2   12[COMRAM] PTR short 
  2360 ;;		 -> realNumbers(128), 
  2361 ;;  fi              2   14[COMRAM] PTR short 
  2362 ;;		 -> imaginaryNumbers(128), 
  2363 ;;  m               2   16[COMRAM] short 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  c               4   72[COMRAM] long 
  2366 ;;  b               2   54[COMRAM] short 
  2367 ;;  j               4   68[COMRAM] long 
  2368 ;;  l               4   64[COMRAM] long 
  2369 ;;  mr              4   60[COMRAM] long 
  2370 ;;  i               4   56[COMRAM] long 
  2371 ;;  n               4   46[COMRAM] long 
  2372 ;;  istep           4   34[COMRAM] long 
  2373 ;;  nn              4   30[COMRAM] long 
  2374 ;;  k               4   26[COMRAM] long 
  2375 ;;  ti              2   52[COMRAM] short 
  2376 ;;  tr              2   50[COMRAM] short 
  2377 ;;  wi              2   44[COMRAM] short 
  2378 ;;  wr              2   42[COMRAM] short 
  2379 ;;  qi              2   40[COMRAM] short 
  2380 ;;  qr              2   38[COMRAM] short 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;		None               void
  2383 ;; Registers used:
  2384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2390 ;;      Params:         6       0       0       0       0       0       0
  2391 ;;      Locals:        50       0       0       0       0       0       0
  2392 ;;      Temps:          8       0       0       0       0       0       0
  2393 ;;      Totals:        64       0       0       0       0       0       0
  2394 ;;Total ram usage:       64 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    1
  2397 ;; This function calls:
  2398 ;;		___lmul
  2399 ;; This function is called by:
  2400 ;;		_main
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text4
  2405  007272                     __ptext4:
  2406                           	opt stack 0
  2407  007272                     _fix_fft:
  2408                           	opt stack 29
  2409                           
  2410                           ;fft.c: 157: long int mr = 0, nn, i, j, l, k, istep, n;
  2411                           
  2412                           ;incstack = 0
  2413  007272  0E00               	movlw	0
  2414  007274  6E3D               	movwf	fix_fft@mr,c
  2415  007276  0E00               	movlw	0
  2416  007278  6E3E               	movwf	fix_fft@mr+1,c
  2417  00727A  0E00               	movlw	0
  2418  00727C  6E3F               	movwf	fix_fft@mr+2,c
  2419  00727E  0E00               	movlw	0
  2420  007280  6E40               	movwf	fix_fft@mr+3,c
  2421                           
  2422                           ;fft.c: 158: short qr, qi, tr, ti, wr, wi;
  2423                           ;fft.c: 160: n = 1 << m;
  2424  007282  C011  F013         	movff	fix_fft@m,??_fix_fft
  2425  007286  0E01               	movlw	1
  2426  007288  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2427  00728A  6A15               	clrf	(??_fix_fft+2)& (0+255),c
  2428  00728C  2A13               	incf	??_fix_fft,f,c
  2429  00728E  D003               	goto	u674
  2430  007290                     u675:
  2431  007290  90D8               	bcf	status,0,c
  2432  007292  3614               	rlcf	??_fix_fft+1,f,c
  2433  007294  3615               	rlcf	??_fix_fft+2,f,c
  2434  007296                     u674:
  2435  007296  2E13               	decfsz	??_fix_fft,f,c
  2436  007298  D7FB               	goto	u675
  2437  00729A  C014  F02F         	movff	??_fix_fft+1,fix_fft@n
  2438  00729E  C015  F030         	movff	??_fix_fft+2,fix_fft@n+1
  2439  0072A2  0E00               	movlw	0
  2440  0072A4  BE30               	btfsc	fix_fft@n+1,7,c
  2441  0072A6  0EFF               	movlw	-1
  2442  0072A8  6E31               	movwf	fix_fft@n+2,c
  2443  0072AA  6E32               	movwf	fix_fft@n+3,c
  2444                           
  2445                           ;fft.c: 161: nn = n - 1;
  2446  0072AC  0EFF               	movlw	255
  2447  0072AE  242F               	addwf	fix_fft@n,w,c
  2448  0072B0  6E1F               	movwf	fix_fft@nn,c
  2449  0072B2  0EFF               	movlw	255
  2450  0072B4  2030               	addwfc	fix_fft@n+1,w,c
  2451  0072B6  6E20               	movwf	fix_fft@nn+1,c
  2452  0072B8  0EFF               	movlw	255
  2453  0072BA  2031               	addwfc	fix_fft@n+2,w,c
  2454  0072BC  6E21               	movwf	fix_fft@nn+2,c
  2455  0072BE  0EFF               	movlw	255
  2456  0072C0  2032               	addwfc	fix_fft@n+3,w,c
  2457  0072C2  6E22               	movwf	fix_fft@nn+3,c
  2458                           
  2459                           ;fft.c: 167: for (m=1; m<=nn; ++m)
  2460  0072C4  0E00               	movlw	0
  2461  0072C6  6E12               	movwf	fix_fft@m+1,c
  2462  0072C8  0E01               	movlw	1
  2463  0072CA  6E11               	movwf	fix_fft@m,c
  2464  0072CC  D0C4               	goto	l1255
  2465  0072CE                     l115:
  2466                           
  2467                           ;fft.c: 168: {
  2468                           ;fft.c: 169: l = n;
  2469  0072CE  C02F  F041         	movff	fix_fft@n,fix_fft@l
  2470  0072D2  C030  F042         	movff	fix_fft@n+1,fix_fft@l+1
  2471  0072D6  C031  F043         	movff	fix_fft@n+2,fix_fft@l+2
  2472  0072DA  C032  F044         	movff	fix_fft@n+3,fix_fft@l+3
  2473  0072DE                     l1237:
  2474                           
  2475                           ;fft.c: 171: {
  2476                           ;fft.c: 172: l >>= 1;
  2477  0072DE  3444               	rlcf	fix_fft@l+3,w,c
  2478  0072E0  3244               	rrcf	fix_fft@l+3,f,c
  2479  0072E2  3243               	rrcf	fix_fft@l+2,f,c
  2480  0072E4  3242               	rrcf	fix_fft@l+1,f,c
  2481  0072E6  3241               	rrcf	fix_fft@l,f,c
  2482                           
  2483                           ;fft.c: 173: } while (mr+l > nn);
  2484  0072E8  5041               	movf	fix_fft@l,w,c
  2485  0072EA  243D               	addwf	fix_fft@mr,w,c
  2486  0072EC  6E13               	movwf	??_fix_fft& (0+255),c
  2487  0072EE  5042               	movf	fix_fft@l+1,w,c
  2488  0072F0  203E               	addwfc	fix_fft@mr+1,w,c
  2489  0072F2  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2490  0072F4  5043               	movf	fix_fft@l+2,w,c
  2491  0072F6  203F               	addwfc	fix_fft@mr+2,w,c
  2492  0072F8  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2493  0072FA  5044               	movf	fix_fft@l+3,w,c
  2494  0072FC  2040               	addwfc	fix_fft@mr+3,w,c
  2495  0072FE  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2496  007300  5022               	movf	fix_fft@nn+3,w,c
  2497  007302  0A80               	xorlw	128
  2498  007304  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2499  007306  5013               	movf	??_fix_fft,w,c
  2500  007308  5C1F               	subwf	fix_fft@nn,w,c
  2501  00730A  5014               	movf	??_fix_fft+1,w,c
  2502  00730C  5820               	subwfb	fix_fft@nn+1,w,c
  2503  00730E  5015               	movf	??_fix_fft+2,w,c
  2504  007310  5821               	subwfb	fix_fft@nn+2,w,c
  2505  007312  5016               	movf	??_fix_fft+3,w,c
  2506  007314  0A80               	xorlw	128
  2507  007316  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2508  007318  A0D8               	btfss	status,0,c
  2509  00731A  D7E1               	goto	l1237
  2510                           
  2511                           ;fft.c: 175: mr = (mr & (l-1)) + l;
  2512  00731C  0EFF               	movlw	255
  2513  00731E  2441               	addwf	fix_fft@l,w,c
  2514  007320  6E13               	movwf	??_fix_fft& (0+255),c
  2515  007322  0EFF               	movlw	255
  2516  007324  2042               	addwfc	fix_fft@l+1,w,c
  2517  007326  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2518  007328  0EFF               	movlw	255
  2519  00732A  2043               	addwfc	fix_fft@l+2,w,c
  2520  00732C  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2521  00732E  0EFF               	movlw	255
  2522  007330  2044               	addwfc	fix_fft@l+3,w,c
  2523  007332  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2524  007334  503D               	movf	fix_fft@mr,w,c
  2525  007336  1413               	andwf	??_fix_fft,w,c
  2526  007338  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2527  00733A  503E               	movf	fix_fft@mr+1,w,c
  2528  00733C  1414               	andwf	??_fix_fft+1,w,c
  2529  00733E  6E18               	movwf	(??_fix_fft+5)& (0+255),c
  2530  007340  503F               	movf	fix_fft@mr+2,w,c
  2531  007342  1415               	andwf	??_fix_fft+2,w,c
  2532  007344  6E19               	movwf	(??_fix_fft+6)& (0+255),c
  2533  007346  5040               	movf	fix_fft@mr+3,w,c
  2534  007348  1416               	andwf	??_fix_fft+3,w,c
  2535  00734A  6E1A               	movwf	(??_fix_fft+7)& (0+255),c
  2536  00734C  5041               	movf	fix_fft@l,w,c
  2537  00734E  2417               	addwf	??_fix_fft+4,w,c
  2538  007350  6E3D               	movwf	fix_fft@mr,c
  2539  007352  5042               	movf	fix_fft@l+1,w,c
  2540  007354  2018               	addwfc	??_fix_fft+5,w,c
  2541  007356  6E3E               	movwf	fix_fft@mr+1,c
  2542  007358  5043               	movf	fix_fft@l+2,w,c
  2543  00735A  2019               	addwfc	??_fix_fft+6,w,c
  2544  00735C  6E3F               	movwf	fix_fft@mr+2,c
  2545  00735E  5044               	movf	fix_fft@l+3,w,c
  2546  007360  201A               	addwfc	??_fix_fft+7,w,c
  2547  007362  6E40               	movwf	fix_fft@mr+3,c
  2548                           
  2549                           ;fft.c: 176: if (mr <= m) continue;
  2550  007364  C011  F013         	movff	fix_fft@m,??_fix_fft
  2551  007368  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2552  00736C  0E00               	movlw	0
  2553  00736E  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2554  007370  0EFF               	movlw	255
  2555  007372  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2556  007374  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2557  007376  5016               	movf	??_fix_fft+3,w,c
  2558  007378  0A80               	xorlw	128
  2559  00737A  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2560  00737C  503D               	movf	fix_fft@mr,w,c
  2561  00737E  5C13               	subwf	??_fix_fft,w,c
  2562  007380  503E               	movf	fix_fft@mr+1,w,c
  2563  007382  5814               	subwfb	??_fix_fft+1,w,c
  2564  007384  503F               	movf	fix_fft@mr+2,w,c
  2565  007386  5815               	subwfb	??_fix_fft+2,w,c
  2566  007388  5040               	movf	fix_fft@mr+3,w,c
  2567  00738A  0A80               	xorlw	128
  2568  00738C  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2569  00738E  B0D8               	btfsc	status,0,c
  2570  007390  D060               	goto	l1253
  2571                           
  2572                           ;fft.c: 178: tr = fr[m];
  2573  007392  90D8               	bcf	status,0,c
  2574  007394  3411               	rlcf	fix_fft@m,w,c
  2575  007396  6ED9               	movwf	fsr2l,c
  2576  007398  3412               	rlcf	fix_fft@m+1,w,c
  2577  00739A  6EDA               	movwf	fsr2h,c
  2578  00739C  500D               	movf	fix_fft@fr,w,c
  2579  00739E  26D9               	addwf	fsr2l,f,c
  2580  0073A0  500E               	movf	fix_fft@fr+1,w,c
  2581  0073A2  22DA               	addwfc	fsr2h,f,c
  2582  0073A4  CFDE F033          	movff	postinc2,fix_fft@tr
  2583  0073A8  CFDD F034          	movff	postdec2,fix_fft@tr+1
  2584                           
  2585                           ;fft.c: 179: fr[m] = fr[mr];
  2586  0073AC  90D8               	bcf	status,0,c
  2587  0073AE  343D               	rlcf	fix_fft@mr,w,c
  2588  0073B0  6ED9               	movwf	fsr2l,c
  2589  0073B2  343E               	rlcf	fix_fft@mr+1,w,c
  2590  0073B4  6EDA               	movwf	fsr2h,c
  2591  0073B6  500D               	movf	fix_fft@fr,w,c
  2592  0073B8  26D9               	addwf	fsr2l,f,c
  2593  0073BA  500E               	movf	fix_fft@fr+1,w,c
  2594  0073BC  22DA               	addwfc	fsr2h,f,c
  2595  0073BE  90D8               	bcf	status,0,c
  2596  0073C0  3411               	rlcf	fix_fft@m,w,c
  2597  0073C2  6EE1               	movwf	fsr1l,c
  2598  0073C4  3412               	rlcf	fix_fft@m+1,w,c
  2599  0073C6  6EE2               	movwf	fsr1h,c
  2600  0073C8  500D               	movf	fix_fft@fr,w,c
  2601  0073CA  26E1               	addwf	fsr1l,f,c
  2602  0073CC  500E               	movf	fix_fft@fr+1,w,c
  2603  0073CE  22E2               	addwfc	fsr1h,f,c
  2604  0073D0  CFDE FFE6          	movff	postinc2,postinc1
  2605  0073D4  CFDD FFE5          	movff	postdec2,postdec1
  2606                           
  2607                           ;fft.c: 180: fr[mr] = tr;
  2608  0073D8  90D8               	bcf	status,0,c
  2609  0073DA  343D               	rlcf	fix_fft@mr,w,c
  2610  0073DC  6ED9               	movwf	fsr2l,c
  2611  0073DE  343E               	rlcf	fix_fft@mr+1,w,c
  2612  0073E0  6EDA               	movwf	fsr2h,c
  2613  0073E2  500D               	movf	fix_fft@fr,w,c
  2614  0073E4  26D9               	addwf	fsr2l,f,c
  2615  0073E6  500E               	movf	fix_fft@fr+1,w,c
  2616  0073E8  22DA               	addwfc	fsr2h,f,c
  2617  0073EA  C033  FFDE         	movff	fix_fft@tr,postinc2
  2618  0073EE  C034  FFDD         	movff	fix_fft@tr+1,postdec2
  2619                           
  2620                           ;fft.c: 181: ti = fi[m];
  2621  0073F2  90D8               	bcf	status,0,c
  2622  0073F4  3411               	rlcf	fix_fft@m,w,c
  2623  0073F6  6ED9               	movwf	fsr2l,c
  2624  0073F8  3412               	rlcf	fix_fft@m+1,w,c
  2625  0073FA  6EDA               	movwf	fsr2h,c
  2626  0073FC  500F               	movf	fix_fft@fi,w,c
  2627  0073FE  26D9               	addwf	fsr2l,f,c
  2628  007400  5010               	movf	fix_fft@fi+1,w,c
  2629  007402  22DA               	addwfc	fsr2h,f,c
  2630  007404  CFDE F035          	movff	postinc2,fix_fft@ti
  2631  007408  CFDD F036          	movff	postdec2,fix_fft@ti+1
  2632                           
  2633                           ;fft.c: 182: fi[m] = fi[mr];
  2634  00740C  90D8               	bcf	status,0,c
  2635  00740E  343D               	rlcf	fix_fft@mr,w,c
  2636  007410  6ED9               	movwf	fsr2l,c
  2637  007412  343E               	rlcf	fix_fft@mr+1,w,c
  2638  007414  6EDA               	movwf	fsr2h,c
  2639  007416  500F               	movf	fix_fft@fi,w,c
  2640  007418  26D9               	addwf	fsr2l,f,c
  2641  00741A  5010               	movf	fix_fft@fi+1,w,c
  2642  00741C  22DA               	addwfc	fsr2h,f,c
  2643  00741E  90D8               	bcf	status,0,c
  2644  007420  3411               	rlcf	fix_fft@m,w,c
  2645  007422  6EE1               	movwf	fsr1l,c
  2646  007424  3412               	rlcf	fix_fft@m+1,w,c
  2647  007426  6EE2               	movwf	fsr1h,c
  2648  007428  500F               	movf	fix_fft@fi,w,c
  2649  00742A  26E1               	addwf	fsr1l,f,c
  2650  00742C  5010               	movf	fix_fft@fi+1,w,c
  2651  00742E  22E2               	addwfc	fsr1h,f,c
  2652  007430  CFDE FFE6          	movff	postinc2,postinc1
  2653  007434  CFDD FFE5          	movff	postdec2,postdec1
  2654                           
  2655                           ;fft.c: 183: fi[mr] = ti;
  2656  007438  90D8               	bcf	status,0,c
  2657  00743A  343D               	rlcf	fix_fft@mr,w,c
  2658  00743C  6ED9               	movwf	fsr2l,c
  2659  00743E  343E               	rlcf	fix_fft@mr+1,w,c
  2660  007440  6EDA               	movwf	fsr2h,c
  2661  007442  500F               	movf	fix_fft@fi,w,c
  2662  007444  26D9               	addwf	fsr2l,f,c
  2663  007446  5010               	movf	fix_fft@fi+1,w,c
  2664  007448  22DA               	addwfc	fsr2h,f,c
  2665  00744A  C035  FFDE         	movff	fix_fft@ti,postinc2
  2666  00744E  C036  FFDD         	movff	fix_fft@ti+1,postdec2
  2667  007452                     l1253:
  2668  007452  4A11               	infsnz	fix_fft@m,f,c
  2669  007454  2A12               	incf	fix_fft@m+1,f,c
  2670  007456                     l1255:
  2671  007456  C011  F013         	movff	fix_fft@m,??_fix_fft
  2672  00745A  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2673  00745E  0E00               	movlw	0
  2674  007460  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2675  007462  0EFF               	movlw	255
  2676  007464  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2677  007466  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2678  007468  5022               	movf	fix_fft@nn+3,w,c
  2679  00746A  0A80               	xorlw	128
  2680  00746C  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2681  00746E  5013               	movf	??_fix_fft,w,c
  2682  007470  5C1F               	subwf	fix_fft@nn,w,c
  2683  007472  5014               	movf	??_fix_fft+1,w,c
  2684  007474  5820               	subwfb	fix_fft@nn+1,w,c
  2685  007476  5015               	movf	??_fix_fft+2,w,c
  2686  007478  5821               	subwfb	fix_fft@nn+2,w,c
  2687  00747A  5016               	movf	??_fix_fft+3,w,c
  2688  00747C  0A80               	xorlw	128
  2689  00747E  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2690  007480  B0D8               	btfsc	status,0,c
  2691  007482  D725               	goto	l115
  2692                           
  2693                           ;fft.c: 184: }
  2694                           ;fft.c: 186: l = 1;
  2695  007484  0E01               	movlw	1
  2696  007486  6E41               	movwf	fix_fft@l,c
  2697  007488  0E00               	movlw	0
  2698  00748A  6E42               	movwf	fix_fft@l+1,c
  2699  00748C  0E00               	movlw	0
  2700  00748E  6E43               	movwf	fix_fft@l+2,c
  2701  007490  0E00               	movlw	0
  2702  007492  6E44               	movwf	fix_fft@l+3,c
  2703                           
  2704                           ;fft.c: 187: k = 10-1;
  2705  007494  0E09               	movlw	9
  2706  007496  6E1B               	movwf	fix_fft@k,c
  2707  007498  0E00               	movlw	0
  2708  00749A  6E1C               	movwf	fix_fft@k+1,c
  2709  00749C  0E00               	movlw	0
  2710  00749E  6E1D               	movwf	fix_fft@k+2,c
  2711  0074A0  0E00               	movlw	0
  2712  0074A2  6E1E               	movwf	fix_fft@k+3,c
  2713                           
  2714                           ;fft.c: 189: while (l < n)
  2715  0074A4  D29D               	goto	l121
  2716  0074A6                     l1259:
  2717                           
  2718                           ;fft.c: 190: {
  2719                           ;fft.c: 203: long int c;
  2720                           ;fft.c: 204: short b;
  2721                           ;fft.c: 206: istep = l << 1;
  2722  0074A6  90D8               	bcf	status,0,c
  2723  0074A8  3441               	rlcf	fix_fft@l,w,c
  2724  0074AA  6E23               	movwf	fix_fft@istep,c
  2725  0074AC  3442               	rlcf	fix_fft@l+1,w,c
  2726  0074AE  6E24               	movwf	fix_fft@istep+1,c
  2727  0074B0  3443               	rlcf	fix_fft@l+2,w,c
  2728  0074B2  6E25               	movwf	fix_fft@istep+2,c
  2729  0074B4  3444               	rlcf	fix_fft@l+3,w,c
  2730  0074B6  6E26               	movwf	fix_fft@istep+3,c
  2731                           
  2732                           ;fft.c: 207: for (m=0; m<l; ++m)
  2733  0074B8  0E00               	movlw	0
  2734  0074BA  6E12               	movwf	fix_fft@m+1,c
  2735  0074BC  0E00               	movlw	0
  2736  0074BE  6E11               	movwf	fix_fft@m,c
  2737  0074C0  D268               	goto	l1319
  2738  0074C2                     l1263:
  2739                           
  2740                           ;fft.c: 208: {
  2741                           ;fft.c: 209: j = m << k;
  2742  0074C2  C01B  F013         	movff	fix_fft@k,??_fix_fft
  2743  0074C6  C011  F014         	movff	fix_fft@m,??_fix_fft+1
  2744  0074CA  C012  F015         	movff	fix_fft@m+1,??_fix_fft+2
  2745  0074CE  2A13               	incf	??_fix_fft,f,c
  2746  0074D0  D003               	goto	u714
  2747  0074D2                     u715:
  2748  0074D2  90D8               	bcf	status,0,c
  2749  0074D4  3614               	rlcf	??_fix_fft+1,f,c
  2750  0074D6  3615               	rlcf	??_fix_fft+2,f,c
  2751  0074D8                     u714:
  2752  0074D8  2E13               	decfsz	??_fix_fft,f,c
  2753  0074DA  D7FB               	goto	u715
  2754  0074DC  C014  F045         	movff	??_fix_fft+1,fix_fft@j
  2755  0074E0  C015  F046         	movff	??_fix_fft+2,fix_fft@j+1
  2756  0074E4  0E00               	movlw	0
  2757  0074E6  BE46               	btfsc	fix_fft@j+1,7,c
  2758  0074E8  0EFF               	movlw	-1
  2759  0074EA  6E47               	movwf	fix_fft@j+2,c
  2760  0074EC  6E48               	movwf	fix_fft@j+3,c
  2761                           
  2762                           ;fft.c: 211: wr = Sinewave[j+1024/4];
  2763  0074EE  0E00               	movlw	0
  2764  0074F0  6E13               	movwf	??_fix_fft& (0+255),c
  2765  0074F2  0E02               	movlw	2
  2766  0074F4  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2767  0074F6  C045  F015         	movff	fix_fft@j,??_fix_fft+2
  2768  0074FA  C046  F016         	movff	fix_fft@j+1,??_fix_fft+3
  2769  0074FE  90D8               	bcf	status,0,c
  2770  007500  3615               	rlcf	??_fix_fft+2,f,c
  2771  007502  3616               	rlcf	??_fix_fft+3,f,c
  2772  007504  5013               	movf	??_fix_fft,w,c
  2773  007506  2615               	addwf	??_fix_fft+2,f,c
  2774  007508  5014               	movf	??_fix_fft+1,w,c
  2775  00750A  2216               	addwfc	??_fix_fft+3,f,c
  2776  00750C  0EFF               	movlw	low _Sinewave
  2777  00750E  2415               	addwf	??_fix_fft+2,w,c
  2778  007510  6EF6               	movwf	tblptrl,c
  2779  007512  0E79               	movlw	high _Sinewave
  2780  007514  2016               	addwfc	??_fix_fft+3,w,c
  2781  007516  6EF7               	movwf	tblptrh,c
  2782  007518                     	if	0	;There are less than 3 active tblptr bytes
  2783  007518                     	endif
  2784  007518  0009               	tblrd		*+
  2785  00751A  CFF5 F02B          	movff	tablat,fix_fft@wr
  2786  00751E  000A               	tblrd		*-
  2787  007520  CFF5 F02C          	movff	tablat,fix_fft@wr+1
  2788                           
  2789                           ;fft.c: 212: wi = -Sinewave[j];
  2790  007524  C045  F013         	movff	fix_fft@j,??_fix_fft
  2791  007528  C046  F014         	movff	fix_fft@j+1,??_fix_fft+1
  2792  00752C  90D8               	bcf	status,0,c
  2793  00752E  3613               	rlcf	??_fix_fft,f,c
  2794  007530  3614               	rlcf	??_fix_fft+1,f,c
  2795  007532  0EFF               	movlw	low _Sinewave
  2796  007534  2413               	addwf	??_fix_fft,w,c
  2797  007536  6EF6               	movwf	tblptrl,c
  2798  007538  0E79               	movlw	high _Sinewave
  2799  00753A  2014               	addwfc	??_fix_fft+1,w,c
  2800  00753C  6EF7               	movwf	tblptrh,c
  2801  00753E                     	if	0	;There are less than 3 active tblptr bytes
  2802  00753E                     	endif
  2803  00753E  0009               	tblrd		*+
  2804  007540  CFF5 F015          	movff	tablat,??_fix_fft+2
  2805  007544  0009               	tblrd		*+
  2806  007546  CFF5 F016          	movff	tablat,??_fix_fft+3
  2807  00754A  1E15               	comf	??_fix_fft+2,f,c
  2808  00754C  1E16               	comf	??_fix_fft+3,f,c
  2809  00754E  4A15               	infsnz	??_fix_fft+2,f,c
  2810  007550  2A16               	incf	??_fix_fft+3,f,c
  2811  007552  C015  F02D         	movff	??_fix_fft+2,fix_fft@wi
  2812  007556  C016  F02E         	movff	??_fix_fft+3,fix_fft@wi+1
  2813                           
  2814                           ;fft.c: 214: wr >>= 1;
  2815  00755A  342C               	rlcf	fix_fft@wr+1,w,c
  2816  00755C  322C               	rrcf	fix_fft@wr+1,f,c
  2817  00755E  322B               	rrcf	fix_fft@wr,f,c
  2818                           
  2819                           ;fft.c: 215: wi >>= 1;
  2820  007560  342E               	rlcf	fix_fft@wi+1,w,c
  2821  007562  322E               	rrcf	fix_fft@wi+1,f,c
  2822  007564  322D               	rrcf	fix_fft@wi,f,c
  2823                           
  2824                           ;fft.c: 217: for (i=m; i<n; i+=istep)
  2825  007566  C011  F039         	movff	fix_fft@m,fix_fft@i
  2826  00756A  C012  F03A         	movff	fix_fft@m+1,fix_fft@i+1
  2827  00756E  0E00               	movlw	0
  2828  007570  BE3A               	btfsc	fix_fft@i+1,7,c
  2829  007572  0EFF               	movlw	-1
  2830  007574  6E3B               	movwf	fix_fft@i+2,c
  2831  007576  6E3C               	movwf	fix_fft@i+3,c
  2832  007578  D1FC               	goto	l1315
  2833  00757A                     l1271:
  2834                           
  2835                           ;fft.c: 218: {
  2836                           ;fft.c: 219: j = i + l;
  2837  00757A  5041               	movf	fix_fft@l,w,c
  2838  00757C  2439               	addwf	fix_fft@i,w,c
  2839  00757E  6E45               	movwf	fix_fft@j,c
  2840  007580  5042               	movf	fix_fft@l+1,w,c
  2841  007582  203A               	addwfc	fix_fft@i+1,w,c
  2842  007584  6E46               	movwf	fix_fft@j+1,c
  2843  007586  5043               	movf	fix_fft@l+2,w,c
  2844  007588  203B               	addwfc	fix_fft@i+2,w,c
  2845  00758A  6E47               	movwf	fix_fft@j+2,c
  2846  00758C  5044               	movf	fix_fft@l+3,w,c
  2847  00758E  203C               	addwfc	fix_fft@i+3,w,c
  2848  007590  6E48               	movwf	fix_fft@j+3,c
  2849                           
  2850                           ;fft.c: 227: c = ((long int)wr * (long int)fr[j]);
  2851  007592  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2852  007596  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2853  00759A  0E00               	movlw	0
  2854  00759C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2855  00759E  0EFF               	movlw	-1
  2856  0075A0  6E03               	movwf	___lmul@multiplier+2,c
  2857  0075A2  6E04               	movwf	___lmul@multiplier+3,c
  2858  0075A4  90D8               	bcf	status,0,c
  2859  0075A6  3445               	rlcf	fix_fft@j,w,c
  2860  0075A8  6ED9               	movwf	fsr2l,c
  2861  0075AA  3446               	rlcf	fix_fft@j+1,w,c
  2862  0075AC  6EDA               	movwf	fsr2h,c
  2863  0075AE  500D               	movf	fix_fft@fr,w,c
  2864  0075B0  26D9               	addwf	fsr2l,f,c
  2865  0075B2  500E               	movf	fix_fft@fr+1,w,c
  2866  0075B4  22DA               	addwfc	fsr2h,f,c
  2867  0075B6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2868  0075BA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2869  0075BE  0E00               	movlw	0
  2870  0075C0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2871  0075C2  0EFF               	movlw	-1
  2872  0075C4  6E07               	movwf	___lmul@multiplicand+2,c
  2873  0075C6  6E08               	movwf	___lmul@multiplicand+3,c
  2874  0075C8  EC62  F035         	call	___lmul	;wreg free
  2875  0075CC  C001  F049         	movff	?___lmul,fix_fft@c
  2876  0075D0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2877  0075D4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2878  0075D8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2879                           
  2880                           ;fft.c: 228: c = c >> 14;
  2881  0075DC  0E0E               	movlw	14
  2882  0075DE  6E13               	movwf	??_fix_fft& (0+255),c
  2883  0075E0  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2884  0075E4  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2885  0075E8  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2886  0075EC  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2887  0075F0                     u725:
  2888  0075F0  6613               	tstfsz	??_fix_fft,c
  2889  0075F2  D001               	goto	u726
  2890  0075F4  D007               	goto	u727
  2891  0075F6                     u726:
  2892  0075F6  3417               	rlcf	??_fix_fft+4,w,c
  2893  0075F8  3217               	rrcf	??_fix_fft+4,f,c
  2894  0075FA  3216               	rrcf	??_fix_fft+3,f,c
  2895  0075FC  3215               	rrcf	??_fix_fft+2,f,c
  2896  0075FE  3214               	rrcf	??_fix_fft+1,f,c
  2897  007600  2E13               	decfsz	??_fix_fft,f,c
  2898  007602  D7F6               	goto	u725
  2899  007604                     u727:
  2900  007604  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2901  007608  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2902  00760C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2903  007610  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2904                           
  2905                           ;fft.c: 229: b = c & 0x01;
  2906  007614  0E01               	movlw	1
  2907  007616  1449               	andwf	fix_fft@c,w,c
  2908  007618  6E37               	movwf	fix_fft@b,c
  2909  00761A  6A38               	clrf	fix_fft@b+1,c
  2910                           
  2911                           ;fft.c: 230: tr = (c >> 1) + b;
  2912  00761C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2913  007620  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2914  007624  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2915  007628  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2916  00762C  3416               	rlcf	??_fix_fft+3,w,c
  2917  00762E  3216               	rrcf	??_fix_fft+3,f,c
  2918  007630  3215               	rrcf	??_fix_fft+2,f,c
  2919  007632  3214               	rrcf	??_fix_fft+1,f,c
  2920  007634  3213               	rrcf	??_fix_fft,f,c
  2921  007636  5037               	movf	fix_fft@b,w,c
  2922  007638  2413               	addwf	??_fix_fft,w,c
  2923  00763A  6E33               	movwf	fix_fft@tr,c
  2924  00763C  5038               	movf	fix_fft@b+1,w,c
  2925  00763E  2014               	addwfc	??_fix_fft+1,w,c
  2926  007640  6E34               	movwf	fix_fft@tr+1,c
  2927                           
  2928                           ;fft.c: 232: c = ((long int)wi * (long int)fi[j]);
  2929  007642  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2930  007646  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2931  00764A  0E00               	movlw	0
  2932  00764C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2933  00764E  0EFF               	movlw	-1
  2934  007650  6E03               	movwf	___lmul@multiplier+2,c
  2935  007652  6E04               	movwf	___lmul@multiplier+3,c
  2936  007654  90D8               	bcf	status,0,c
  2937  007656  3445               	rlcf	fix_fft@j,w,c
  2938  007658  6ED9               	movwf	fsr2l,c
  2939  00765A  3446               	rlcf	fix_fft@j+1,w,c
  2940  00765C  6EDA               	movwf	fsr2h,c
  2941  00765E  500F               	movf	fix_fft@fi,w,c
  2942  007660  26D9               	addwf	fsr2l,f,c
  2943  007662  5010               	movf	fix_fft@fi+1,w,c
  2944  007664  22DA               	addwfc	fsr2h,f,c
  2945  007666  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2946  00766A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2947  00766E  0E00               	movlw	0
  2948  007670  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2949  007672  0EFF               	movlw	-1
  2950  007674  6E07               	movwf	___lmul@multiplicand+2,c
  2951  007676  6E08               	movwf	___lmul@multiplicand+3,c
  2952  007678  EC62  F035         	call	___lmul	;wreg free
  2953  00767C  C001  F049         	movff	?___lmul,fix_fft@c
  2954  007680  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2955  007684  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2956  007688  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2957                           
  2958                           ;fft.c: 233: c = c >> 14;
  2959  00768C  0E0E               	movlw	14
  2960  00768E  6E13               	movwf	??_fix_fft& (0+255),c
  2961  007690  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2962  007694  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2963  007698  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2964  00769C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2965  0076A0                     u735:
  2966  0076A0  6613               	tstfsz	??_fix_fft,c
  2967  0076A2  D001               	goto	u736
  2968  0076A4  D007               	goto	u737
  2969  0076A6                     u736:
  2970  0076A6  3417               	rlcf	??_fix_fft+4,w,c
  2971  0076A8  3217               	rrcf	??_fix_fft+4,f,c
  2972  0076AA  3216               	rrcf	??_fix_fft+3,f,c
  2973  0076AC  3215               	rrcf	??_fix_fft+2,f,c
  2974  0076AE  3214               	rrcf	??_fix_fft+1,f,c
  2975  0076B0  2E13               	decfsz	??_fix_fft,f,c
  2976  0076B2  D7F6               	goto	u735
  2977  0076B4                     u737:
  2978  0076B4  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2979  0076B8  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2980  0076BC  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2981  0076C0  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2982                           
  2983                           ;fft.c: 234: b = c & 0x01;
  2984  0076C4  0E01               	movlw	1
  2985  0076C6  1449               	andwf	fix_fft@c,w,c
  2986  0076C8  6E37               	movwf	fix_fft@b,c
  2987  0076CA  6A38               	clrf	fix_fft@b+1,c
  2988                           
  2989                           ;fft.c: 235: tr = tr - ((c >> 1) + b);
  2990  0076CC  C049  F013         	movff	fix_fft@c,??_fix_fft
  2991  0076D0  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2992  0076D4  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2993  0076D8  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2994  0076DC  3416               	rlcf	??_fix_fft+3,w,c
  2995  0076DE  3216               	rrcf	??_fix_fft+3,f,c
  2996  0076E0  3215               	rrcf	??_fix_fft+2,f,c
  2997  0076E2  3214               	rrcf	??_fix_fft+1,f,c
  2998  0076E4  3213               	rrcf	??_fix_fft,f,c
  2999  0076E6  5037               	movf	fix_fft@b,w,c
  3000  0076E8  2613               	addwf	??_fix_fft,f,c
  3001  0076EA  5038               	movf	fix_fft@b+1,w,c
  3002  0076EC  2214               	addwfc	??_fix_fft+1,f,c
  3003  0076EE  1E13               	comf	??_fix_fft,f,c
  3004  0076F0  1E14               	comf	??_fix_fft+1,f,c
  3005  0076F2  4A13               	infsnz	??_fix_fft,f,c
  3006  0076F4  2A14               	incf	??_fix_fft+1,f,c
  3007  0076F6  5033               	movf	fix_fft@tr,w,c
  3008  0076F8  2413               	addwf	??_fix_fft,w,c
  3009  0076FA  6E33               	movwf	fix_fft@tr,c
  3010  0076FC  5034               	movf	fix_fft@tr+1,w,c
  3011  0076FE  2014               	addwfc	??_fix_fft+1,w,c
  3012  007700  6E34               	movwf	fix_fft@tr+1,c
  3013                           
  3014                           ;fft.c: 238: c = ((long int)wr * (long int)fi[j]);
  3015  007702  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  3016  007706  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  3017  00770A  0E00               	movlw	0
  3018  00770C  BE02               	btfsc	___lmul@multiplier+1,7,c
  3019  00770E  0EFF               	movlw	-1
  3020  007710  6E03               	movwf	___lmul@multiplier+2,c
  3021  007712  6E04               	movwf	___lmul@multiplier+3,c
  3022  007714  90D8               	bcf	status,0,c
  3023  007716  3445               	rlcf	fix_fft@j,w,c
  3024  007718  6ED9               	movwf	fsr2l,c
  3025  00771A  3446               	rlcf	fix_fft@j+1,w,c
  3026  00771C  6EDA               	movwf	fsr2h,c
  3027  00771E  500F               	movf	fix_fft@fi,w,c
  3028  007720  26D9               	addwf	fsr2l,f,c
  3029  007722  5010               	movf	fix_fft@fi+1,w,c
  3030  007724  22DA               	addwfc	fsr2h,f,c
  3031  007726  CFDE F005          	movff	postinc2,___lmul@multiplicand
  3032  00772A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  3033  00772E  0E00               	movlw	0
  3034  007730  BE06               	btfsc	___lmul@multiplicand+1,7,c
  3035  007732  0EFF               	movlw	-1
  3036  007734  6E07               	movwf	___lmul@multiplicand+2,c
  3037  007736  6E08               	movwf	___lmul@multiplicand+3,c
  3038  007738  EC62  F035         	call	___lmul	;wreg free
  3039  00773C  C001  F049         	movff	?___lmul,fix_fft@c
  3040  007740  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  3041  007744  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  3042  007748  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  3043                           
  3044                           ;fft.c: 239: c = c >> 14;
  3045  00774C  0E0E               	movlw	14
  3046  00774E  6E13               	movwf	??_fix_fft& (0+255),c
  3047  007750  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  3048  007754  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  3049  007758  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  3050  00775C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  3051  007760                     u745:
  3052  007760  6613               	tstfsz	??_fix_fft,c
  3053  007762  D001               	goto	u746
  3054  007764  D007               	goto	u747
  3055  007766                     u746:
  3056  007766  3417               	rlcf	??_fix_fft+4,w,c
  3057  007768  3217               	rrcf	??_fix_fft+4,f,c
  3058  00776A  3216               	rrcf	??_fix_fft+3,f,c
  3059  00776C  3215               	rrcf	??_fix_fft+2,f,c
  3060  00776E  3214               	rrcf	??_fix_fft+1,f,c
  3061  007770  2E13               	decfsz	??_fix_fft,f,c
  3062  007772  D7F6               	goto	u745
  3063  007774                     u747:
  3064  007774  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  3065  007778  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  3066  00777C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  3067  007780  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  3068                           
  3069                           ;fft.c: 240: b = c & 0x01;
  3070  007784  0E01               	movlw	1
  3071  007786  1449               	andwf	fix_fft@c,w,c
  3072  007788  6E37               	movwf	fix_fft@b,c
  3073  00778A  6A38               	clrf	fix_fft@b+1,c
  3074                           
  3075                           ;fft.c: 241: ti = (c >> 1) + b;
  3076  00778C  C049  F013         	movff	fix_fft@c,??_fix_fft
  3077  007790  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  3078  007794  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  3079  007798  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  3080  00779C  3416               	rlcf	??_fix_fft+3,w,c
  3081  00779E  3216               	rrcf	??_fix_fft+3,f,c
  3082  0077A0  3215               	rrcf	??_fix_fft+2,f,c
  3083  0077A2  3214               	rrcf	??_fix_fft+1,f,c
  3084  0077A4  3213               	rrcf	??_fix_fft,f,c
  3085  0077A6  5037               	movf	fix_fft@b,w,c
  3086  0077A8  2413               	addwf	??_fix_fft,w,c
  3087  0077AA  6E35               	movwf	fix_fft@ti,c
  3088  0077AC  5038               	movf	fix_fft@b+1,w,c
  3089  0077AE  2014               	addwfc	??_fix_fft+1,w,c
  3090  0077B0  6E36               	movwf	fix_fft@ti+1,c
  3091                           
  3092                           ;fft.c: 243: c = ((long int)wi * (long int)fr[j]);
  3093  0077B2  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  3094  0077B6  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  3095  0077BA  0E00               	movlw	0
  3096  0077BC  BE02               	btfsc	___lmul@multiplier+1,7,c
  3097  0077BE  0EFF               	movlw	-1
  3098  0077C0  6E03               	movwf	___lmul@multiplier+2,c
  3099  0077C2  6E04               	movwf	___lmul@multiplier+3,c
  3100  0077C4  90D8               	bcf	status,0,c
  3101  0077C6  3445               	rlcf	fix_fft@j,w,c
  3102  0077C8  6ED9               	movwf	fsr2l,c
  3103  0077CA  3446               	rlcf	fix_fft@j+1,w,c
  3104  0077CC  6EDA               	movwf	fsr2h,c
  3105  0077CE  500D               	movf	fix_fft@fr,w,c
  3106  0077D0  26D9               	addwf	fsr2l,f,c
  3107  0077D2  500E               	movf	fix_fft@fr+1,w,c
  3108  0077D4  22DA               	addwfc	fsr2h,f,c
  3109  0077D6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  3110  0077DA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  3111  0077DE  0E00               	movlw	0
  3112  0077E0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  3113  0077E2  0EFF               	movlw	-1
  3114  0077E4  6E07               	movwf	___lmul@multiplicand+2,c
  3115  0077E6  6E08               	movwf	___lmul@multiplicand+3,c
  3116  0077E8  EC62  F035         	call	___lmul	;wreg free
  3117  0077EC  C001  F049         	movff	?___lmul,fix_fft@c
  3118  0077F0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  3119  0077F4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  3120  0077F8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  3121                           
  3122                           ;fft.c: 244: c = c >> 14;
  3123  0077FC  0E0E               	movlw	14
  3124  0077FE  6E13               	movwf	??_fix_fft& (0+255),c
  3125  007800  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  3126  007804  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  3127  007808  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  3128  00780C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  3129  007810                     u755:
  3130  007810  6613               	tstfsz	??_fix_fft,c
  3131  007812  D001               	goto	u756
  3132  007814  D007               	goto	u757
  3133  007816                     u756:
  3134  007816  3417               	rlcf	??_fix_fft+4,w,c
  3135  007818  3217               	rrcf	??_fix_fft+4,f,c
  3136  00781A  3216               	rrcf	??_fix_fft+3,f,c
  3137  00781C  3215               	rrcf	??_fix_fft+2,f,c
  3138  00781E  3214               	rrcf	??_fix_fft+1,f,c
  3139  007820  2E13               	decfsz	??_fix_fft,f,c
  3140  007822  D7F6               	goto	u755
  3141  007824                     u757:
  3142  007824  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  3143  007828  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  3144  00782C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  3145  007830  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  3146                           
  3147                           ;fft.c: 245: b = c & 0x01;
  3148  007834  0E01               	movlw	1
  3149  007836  1449               	andwf	fix_fft@c,w,c
  3150  007838  6E37               	movwf	fix_fft@b,c
  3151  00783A  6A38               	clrf	fix_fft@b+1,c
  3152                           
  3153                           ;fft.c: 246: ti = ti + ((c >> 1) + b);
  3154  00783C  C049  F013         	movff	fix_fft@c,??_fix_fft
  3155  007840  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  3156  007844  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  3157  007848  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  3158  00784C  3416               	rlcf	??_fix_fft+3,w,c
  3159  00784E  3216               	rrcf	??_fix_fft+3,f,c
  3160  007850  3215               	rrcf	??_fix_fft+2,f,c
  3161  007852  3214               	rrcf	??_fix_fft+1,f,c
  3162  007854  3213               	rrcf	??_fix_fft,f,c
  3163  007856  5037               	movf	fix_fft@b,w,c
  3164  007858  2613               	addwf	??_fix_fft,f,c
  3165  00785A  5038               	movf	fix_fft@b+1,w,c
  3166  00785C  2214               	addwfc	??_fix_fft+1,f,c
  3167  00785E  5035               	movf	fix_fft@ti,w,c
  3168  007860  2413               	addwf	??_fix_fft,w,c
  3169  007862  6E35               	movwf	fix_fft@ti,c
  3170  007864  5036               	movf	fix_fft@ti+1,w,c
  3171  007866  2014               	addwfc	??_fix_fft+1,w,c
  3172  007868  6E36               	movwf	fix_fft@ti+1,c
  3173                           
  3174                           ;fft.c: 248: qr = fr[i];
  3175  00786A  90D8               	bcf	status,0,c
  3176  00786C  3439               	rlcf	fix_fft@i,w,c
  3177  00786E  6ED9               	movwf	fsr2l,c
  3178  007870  343A               	rlcf	fix_fft@i+1,w,c
  3179  007872  6EDA               	movwf	fsr2h,c
  3180  007874  500D               	movf	fix_fft@fr,w,c
  3181  007876  26D9               	addwf	fsr2l,f,c
  3182  007878  500E               	movf	fix_fft@fr+1,w,c
  3183  00787A  22DA               	addwfc	fsr2h,f,c
  3184  00787C  CFDE F027          	movff	postinc2,fix_fft@qr
  3185  007880  CFDD F028          	movff	postdec2,fix_fft@qr+1
  3186                           
  3187                           ;fft.c: 249: qi = fi[i];
  3188  007884  90D8               	bcf	status,0,c
  3189  007886  3439               	rlcf	fix_fft@i,w,c
  3190  007888  6ED9               	movwf	fsr2l,c
  3191  00788A  343A               	rlcf	fix_fft@i+1,w,c
  3192  00788C  6EDA               	movwf	fsr2h,c
  3193  00788E  500F               	movf	fix_fft@fi,w,c
  3194  007890  26D9               	addwf	fsr2l,f,c
  3195  007892  5010               	movf	fix_fft@fi+1,w,c
  3196  007894  22DA               	addwfc	fsr2h,f,c
  3197  007896  CFDE F029          	movff	postinc2,fix_fft@qi
  3198  00789A  CFDD F02A          	movff	postdec2,fix_fft@qi+1
  3199                           
  3200                           ;fft.c: 250: qr >>= 1;
  3201  00789E  3428               	rlcf	fix_fft@qr+1,w,c
  3202  0078A0  3228               	rrcf	fix_fft@qr+1,f,c
  3203  0078A2  3227               	rrcf	fix_fft@qr,f,c
  3204                           
  3205                           ;fft.c: 251: qi >>= 1;
  3206  0078A4  342A               	rlcf	fix_fft@qi+1,w,c
  3207  0078A6  322A               	rrcf	fix_fft@qi+1,f,c
  3208  0078A8  3229               	rrcf	fix_fft@qi,f,c
  3209                           
  3210                           ;fft.c: 253: fr[j] = qr - tr;
  3211  0078AA  C033  F013         	movff	fix_fft@tr,??_fix_fft
  3212  0078AE  C034  F014         	movff	fix_fft@tr+1,??_fix_fft+1
  3213  0078B2  1E13               	comf	??_fix_fft,f,c
  3214  0078B4  1E14               	comf	??_fix_fft+1,f,c
  3215  0078B6  4A13               	infsnz	??_fix_fft,f,c
  3216  0078B8  2A14               	incf	??_fix_fft+1,f,c
  3217  0078BA  5027               	movf	fix_fft@qr,w,c
  3218  0078BC  2613               	addwf	??_fix_fft,f,c
  3219  0078BE  5028               	movf	fix_fft@qr+1,w,c
  3220  0078C0  2214               	addwfc	??_fix_fft+1,f,c
  3221  0078C2  90D8               	bcf	status,0,c
  3222  0078C4  3445               	rlcf	fix_fft@j,w,c
  3223  0078C6  6ED9               	movwf	fsr2l,c
  3224  0078C8  3446               	rlcf	fix_fft@j+1,w,c
  3225  0078CA  6EDA               	movwf	fsr2h,c
  3226  0078CC  500D               	movf	fix_fft@fr,w,c
  3227  0078CE  26D9               	addwf	fsr2l,f,c
  3228  0078D0  500E               	movf	fix_fft@fr+1,w,c
  3229  0078D2  22DA               	addwfc	fsr2h,f,c
  3230  0078D4  C013  FFDE         	movff	??_fix_fft,postinc2
  3231  0078D8  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3232                           
  3233                           ;fft.c: 254: fi[j] = qi - ti;
  3234  0078DC  C035  F013         	movff	fix_fft@ti,??_fix_fft
  3235  0078E0  C036  F014         	movff	fix_fft@ti+1,??_fix_fft+1
  3236  0078E4  1E13               	comf	??_fix_fft,f,c
  3237  0078E6  1E14               	comf	??_fix_fft+1,f,c
  3238  0078E8  4A13               	infsnz	??_fix_fft,f,c
  3239  0078EA  2A14               	incf	??_fix_fft+1,f,c
  3240  0078EC  5029               	movf	fix_fft@qi,w,c
  3241  0078EE  2613               	addwf	??_fix_fft,f,c
  3242  0078F0  502A               	movf	fix_fft@qi+1,w,c
  3243  0078F2  2214               	addwfc	??_fix_fft+1,f,c
  3244  0078F4  90D8               	bcf	status,0,c
  3245  0078F6  3445               	rlcf	fix_fft@j,w,c
  3246  0078F8  6ED9               	movwf	fsr2l,c
  3247  0078FA  3446               	rlcf	fix_fft@j+1,w,c
  3248  0078FC  6EDA               	movwf	fsr2h,c
  3249  0078FE  500F               	movf	fix_fft@fi,w,c
  3250  007900  26D9               	addwf	fsr2l,f,c
  3251  007902  5010               	movf	fix_fft@fi+1,w,c
  3252  007904  22DA               	addwfc	fsr2h,f,c
  3253  007906  C013  FFDE         	movff	??_fix_fft,postinc2
  3254  00790A  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3255                           
  3256                           ;fft.c: 255: fr[i] = qr + tr;
  3257  00790E  C027  F013         	movff	fix_fft@qr,??_fix_fft
  3258  007912  C028  F014         	movff	fix_fft@qr+1,??_fix_fft+1
  3259  007916  5033               	movf	fix_fft@tr,w,c
  3260  007918  2613               	addwf	??_fix_fft,f,c
  3261  00791A  5034               	movf	fix_fft@tr+1,w,c
  3262  00791C  2214               	addwfc	??_fix_fft+1,f,c
  3263  00791E  90D8               	bcf	status,0,c
  3264  007920  3439               	rlcf	fix_fft@i,w,c
  3265  007922  6ED9               	movwf	fsr2l,c
  3266  007924  343A               	rlcf	fix_fft@i+1,w,c
  3267  007926  6EDA               	movwf	fsr2h,c
  3268  007928  500D               	movf	fix_fft@fr,w,c
  3269  00792A  26D9               	addwf	fsr2l,f,c
  3270  00792C  500E               	movf	fix_fft@fr+1,w,c
  3271  00792E  22DA               	addwfc	fsr2h,f,c
  3272  007930  C013  FFDE         	movff	??_fix_fft,postinc2
  3273  007934  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3274                           
  3275                           ;fft.c: 256: fi[i] = qi + ti;
  3276  007938  C029  F013         	movff	fix_fft@qi,??_fix_fft
  3277  00793C  C02A  F014         	movff	fix_fft@qi+1,??_fix_fft+1
  3278  007940  5035               	movf	fix_fft@ti,w,c
  3279  007942  2613               	addwf	??_fix_fft,f,c
  3280  007944  5036               	movf	fix_fft@ti+1,w,c
  3281  007946  2214               	addwfc	??_fix_fft+1,f,c
  3282  007948  90D8               	bcf	status,0,c
  3283  00794A  3439               	rlcf	fix_fft@i,w,c
  3284  00794C  6ED9               	movwf	fsr2l,c
  3285  00794E  343A               	rlcf	fix_fft@i+1,w,c
  3286  007950  6EDA               	movwf	fsr2h,c
  3287  007952  500F               	movf	fix_fft@fi,w,c
  3288  007954  26D9               	addwf	fsr2l,f,c
  3289  007956  5010               	movf	fix_fft@fi+1,w,c
  3290  007958  22DA               	addwfc	fsr2h,f,c
  3291  00795A  C013  FFDE         	movff	??_fix_fft,postinc2
  3292  00795E  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3293  007962  5023               	movf	fix_fft@istep,w,c
  3294  007964  2639               	addwf	fix_fft@i,f,c
  3295  007966  5024               	movf	fix_fft@istep+1,w,c
  3296  007968  223A               	addwfc	fix_fft@i+1,f,c
  3297  00796A  5025               	movf	fix_fft@istep+2,w,c
  3298  00796C  223B               	addwfc	fix_fft@i+2,f,c
  3299  00796E  5026               	movf	fix_fft@istep+3,w,c
  3300  007970  223C               	addwfc	fix_fft@i+3,f,c
  3301  007972                     l1315:
  3302  007972  503C               	movf	fix_fft@i+3,w,c
  3303  007974  0A80               	xorlw	128
  3304  007976  6E13               	movwf	??_fix_fft& (0+255),c
  3305  007978  502F               	movf	fix_fft@n,w,c
  3306  00797A  5C39               	subwf	fix_fft@i,w,c
  3307  00797C  5030               	movf	fix_fft@n+1,w,c
  3308  00797E  583A               	subwfb	fix_fft@i+1,w,c
  3309  007980  5031               	movf	fix_fft@n+2,w,c
  3310  007982  583B               	subwfb	fix_fft@i+2,w,c
  3311  007984  5032               	movf	fix_fft@n+3,w,c
  3312  007986  0A80               	xorlw	128
  3313  007988  5813               	subwfb	??_fix_fft& (0+255),w,c
  3314  00798A  A0D8               	btfss	status,0,c
  3315  00798C  D5F6               	goto	l1271
  3316  00798E  4A11               	infsnz	fix_fft@m,f,c
  3317  007990  2A12               	incf	fix_fft@m+1,f,c
  3318  007992                     l1319:
  3319  007992  C011  F013         	movff	fix_fft@m,??_fix_fft
  3320  007996  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  3321  00799A  0E00               	movlw	0
  3322  00799C  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  3323  00799E  0EFF               	movlw	255
  3324  0079A0  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  3325  0079A2  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  3326  0079A4  5016               	movf	??_fix_fft+3,w,c
  3327  0079A6  0A80               	xorlw	128
  3328  0079A8  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  3329  0079AA  5041               	movf	fix_fft@l,w,c
  3330  0079AC  5C13               	subwf	??_fix_fft,w,c
  3331  0079AE  5042               	movf	fix_fft@l+1,w,c
  3332  0079B0  5814               	subwfb	??_fix_fft+1,w,c
  3333  0079B2  5043               	movf	fix_fft@l+2,w,c
  3334  0079B4  5815               	subwfb	??_fix_fft+2,w,c
  3335  0079B6  5044               	movf	fix_fft@l+3,w,c
  3336  0079B8  0A80               	xorlw	128
  3337  0079BA  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  3338  0079BC  A0D8               	btfss	status,0,c
  3339  0079BE  D581               	goto	l1263
  3340                           
  3341                           ;fft.c: 257: }
  3342                           ;fft.c: 258: }
  3343                           ;fft.c: 260: --k;
  3344  0079C0  0EFF               	movlw	255
  3345  0079C2  261B               	addwf	fix_fft@k,f,c
  3346  0079C4  0EFF               	movlw	255
  3347  0079C6  221C               	addwfc	fix_fft@k+1,f,c
  3348  0079C8  0EFF               	movlw	255
  3349  0079CA  221D               	addwfc	fix_fft@k+2,f,c
  3350  0079CC  0EFF               	movlw	255
  3351  0079CE  221E               	addwfc	fix_fft@k+3,f,c
  3352                           
  3353                           ;fft.c: 261: l = istep;
  3354  0079D0  C023  F041         	movff	fix_fft@istep,fix_fft@l
  3355  0079D4  C024  F042         	movff	fix_fft@istep+1,fix_fft@l+1
  3356  0079D8  C025  F043         	movff	fix_fft@istep+2,fix_fft@l+2
  3357  0079DC  C026  F044         	movff	fix_fft@istep+3,fix_fft@l+3
  3358  0079E0                     l121:
  3359  0079E0  5044               	movf	fix_fft@l+3,w,c
  3360  0079E2  0A80               	xorlw	128
  3361  0079E4  6E13               	movwf	??_fix_fft& (0+255),c
  3362  0079E6  502F               	movf	fix_fft@n,w,c
  3363  0079E8  5C41               	subwf	fix_fft@l,w,c
  3364  0079EA  5030               	movf	fix_fft@n+1,w,c
  3365  0079EC  5842               	subwfb	fix_fft@l+1,w,c
  3366  0079EE  5031               	movf	fix_fft@n+2,w,c
  3367  0079F0  5843               	subwfb	fix_fft@l+2,w,c
  3368  0079F2  5032               	movf	fix_fft@n+3,w,c
  3369  0079F4  0A80               	xorlw	128
  3370  0079F6  5813               	subwfb	??_fix_fft& (0+255),w,c
  3371  0079F8  B0D8               	btfsc	status,0,c
  3372  0079FA  0012               	return	
  3373  0079FC  D554               	goto	l1259
  3374  0079FE                     __end_of_fix_fft:
  3375                           	opt stack 0
  3376                           tblptru	equ	0xFF8
  3377                           tblptrh	equ	0xFF7
  3378                           tblptrl	equ	0xFF6
  3379                           tablat	equ	0xFF5
  3380                           postinc0	equ	0xFEE
  3381                           wreg	equ	0xFE8
  3382                           postinc1	equ	0xFE6
  3383                           postdec1	equ	0xFE5
  3384                           fsr1h	equ	0xFE2
  3385                           fsr1l	equ	0xFE1
  3386                           indf2	equ	0xFDF
  3387                           postinc2	equ	0xFDE
  3388                           postdec2	equ	0xFDD
  3389                           fsr2h	equ	0xFDA
  3390                           fsr2l	equ	0xFD9
  3391                           status	equ	0xFD8
  3392                           
  3393 ;; *************** function ___lmul *****************
  3394 ;; Defined at:
  3395 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  multiplier      4    0[COMRAM] unsigned long 
  3398 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  product         4    8[COMRAM] unsigned long 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  4    0[COMRAM] unsigned long 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3410 ;;      Params:         8       0       0       0       0       0       0
  3411 ;;      Locals:         4       0       0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0
  3413 ;;      Totals:        12       0       0       0       0       0       0
  3414 ;;Total ram usage:       12 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_fix_fft
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text5
  3424  006AC4                     __ptext5:
  3425                           	opt stack 0
  3426  006AC4                     ___lmul:
  3427                           	opt stack 29
  3428                           
  3429                           ;incstack = 0
  3430  006AC4  0E00               	movlw	0
  3431  006AC6  6E09               	movwf	___lmul@product,c
  3432  006AC8  0E00               	movlw	0
  3433  006ACA  6E0A               	movwf	___lmul@product+1,c
  3434  006ACC  0E00               	movlw	0
  3435  006ACE  6E0B               	movwf	___lmul@product+2,c
  3436  006AD0  0E00               	movlw	0
  3437  006AD2  6E0C               	movwf	___lmul@product+3,c
  3438  006AD4                     l1165:
  3439  006AD4  A001               	btfss	___lmul@multiplier,0,c
  3440  006AD6  D008               	goto	l1169
  3441  006AD8  5005               	movf	___lmul@multiplicand,w,c
  3442  006ADA  2609               	addwf	___lmul@product,f,c
  3443  006ADC  5006               	movf	___lmul@multiplicand+1,w,c
  3444  006ADE  220A               	addwfc	___lmul@product+1,f,c
  3445  006AE0  5007               	movf	___lmul@multiplicand+2,w,c
  3446  006AE2  220B               	addwfc	___lmul@product+2,f,c
  3447  006AE4  5008               	movf	___lmul@multiplicand+3,w,c
  3448  006AE6  220C               	addwfc	___lmul@product+3,f,c
  3449  006AE8                     l1169:
  3450  006AE8  90D8               	bcf	status,0,c
  3451  006AEA  3605               	rlcf	___lmul@multiplicand,f,c
  3452  006AEC  3606               	rlcf	___lmul@multiplicand+1,f,c
  3453  006AEE  3607               	rlcf	___lmul@multiplicand+2,f,c
  3454  006AF0  3608               	rlcf	___lmul@multiplicand+3,f,c
  3455  006AF2  90D8               	bcf	status,0,c
  3456  006AF4  3204               	rrcf	___lmul@multiplier+3,f,c
  3457  006AF6  3203               	rrcf	___lmul@multiplier+2,f,c
  3458  006AF8  3202               	rrcf	___lmul@multiplier+1,f,c
  3459  006AFA  3201               	rrcf	___lmul@multiplier,f,c
  3460  006AFC  5004               	movf	___lmul@multiplier+3,w,c
  3461  006AFE  1001               	iorwf	___lmul@multiplier,w,c
  3462  006B00  1002               	iorwf	___lmul@multiplier+1,w,c
  3463  006B02  1003               	iorwf	___lmul@multiplier+2,w,c
  3464  006B04  A4D8               	btfss	status,2,c
  3465  006B06  D7E6               	goto	l1165
  3466  006B08  C009  F001         	movff	___lmul@product,?___lmul
  3467  006B0C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3468  006B10  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3469  006B14  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3470  006B18  0012               	return	
  3471  006B1A                     __end_of___lmul:
  3472                           	opt stack 0
  3473                           tblptru	equ	0xFF8
  3474                           tblptrh	equ	0xFF7
  3475                           tblptrl	equ	0xFF6
  3476                           tablat	equ	0xFF5
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postinc1	equ	0xFE6
  3480                           postdec1	equ	0xFE5
  3481                           fsr1h	equ	0xFE2
  3482                           fsr1l	equ	0xFE1
  3483                           indf2	equ	0xFDF
  3484                           postinc2	equ	0xFDE
  3485                           postdec2	equ	0xFDD
  3486                           fsr2h	equ	0xFDA
  3487                           fsr2l	equ	0xFD9
  3488                           status	equ	0xFD8
  3489                           
  3490 ;; *************** function ___wmul *****************
  3491 ;; Defined at:
  3492 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  multiplier      2    0[COMRAM] unsigned int 
  3495 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  product         2    4[COMRAM] unsigned int 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  2    0[COMRAM] unsigned int 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, prodl, prodh
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3507 ;;      Params:         4       0       0       0       0       0       0
  3508 ;;      Locals:         2       0       0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0
  3510 ;;      Totals:         6       0       0       0       0       0       0
  3511 ;;Total ram usage:        6 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text6
  3521  0069EA                     __ptext6:
  3522                           	opt stack 0
  3523  0069EA                     ___wmul:
  3524                           	opt stack 30
  3525                           
  3526                           ;incstack = 0
  3527  0069EA  5001               	movf	___wmul@multiplier,w,c
  3528  0069EC  0203               	mulwf	___wmul@multiplicand,c
  3529  0069EE  CFF3 F005          	movff	prodl,___wmul@product
  3530  0069F2  CFF4 F006          	movff	prodh,___wmul@product+1
  3531  0069F6  5001               	movf	___wmul@multiplier,w,c
  3532  0069F8  0204               	mulwf	___wmul@multiplicand+1,c
  3533  0069FA  50F3               	movf	prodl,w,c
  3534  0069FC  2606               	addwf	___wmul@product+1,f,c
  3535  0069FE  5002               	movf	___wmul@multiplier+1,w,c
  3536  006A00  0203               	mulwf	___wmul@multiplicand,c
  3537  006A02  50F3               	movf	prodl,w,c
  3538  006A04  2606               	addwf	___wmul@product+1,f,c
  3539  006A06  C005  F001         	movff	___wmul@product,?___wmul
  3540  006A0A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3541  006A0E  0012               	return	
  3542  006A10                     __end_of___wmul:
  3543                           	opt stack 0
  3544                           tblptru	equ	0xFF8
  3545                           tblptrh	equ	0xFF7
  3546                           tblptrl	equ	0xFF6
  3547                           tablat	equ	0xFF5
  3548                           prodh	equ	0xFF4
  3549                           prodl	equ	0xFF3
  3550                           postinc0	equ	0xFEE
  3551                           wreg	equ	0xFE8
  3552                           postinc1	equ	0xFE6
  3553                           postdec1	equ	0xFE5
  3554                           fsr1h	equ	0xFE2
  3555                           fsr1l	equ	0xFE1
  3556                           indf2	equ	0xFDF
  3557                           postinc2	equ	0xFDE
  3558                           postdec2	equ	0xFDD
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function ___awdiv *****************
  3564 ;; Defined at:
  3565 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  dividend        2    6[COMRAM] int 
  3568 ;;  divisor         2    8[COMRAM] int 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  quotient        2   12[COMRAM] int 
  3571 ;;  sign            1   11[COMRAM] unsigned char 
  3572 ;;  counter         1   10[COMRAM] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  2    6[COMRAM] int 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0, prodl
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3582 ;;      Params:         4       0       0       0       0       0       0
  3583 ;;      Locals:         4       0       0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0
  3585 ;;      Totals:         8       0       0       0       0       0       0
  3586 ;;Total ram usage:        8 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text7
  3596  006B72                     __ptext7:
  3597                           	opt stack 0
  3598  006B72                     ___awdiv:
  3599                           	opt stack 30
  3600                           
  3601                           ;incstack = 0
  3602  006B72  0E00               	movlw	0
  3603  006B74  6E0C               	movwf	___awdiv@sign,c
  3604  006B76  500A               	movf	___awdiv@divisor+1,w,c
  3605  006B78  0A80               	xorlw	128
  3606  006B7A  6EF3               	movwf	prodl,c
  3607  006B7C  0E80               	movlw	128
  3608  006B7E  5CF3               	subwf	prodl,w,c
  3609  006B80  0E00               	movlw	0
  3610  006B82  B4D8               	btfsc	status,2,c
  3611  006B84  5C09               	subwf	___awdiv@divisor,w,c
  3612  006B86  B0D8               	btfsc	status,0,c
  3613  006B88  D006               	goto	l1347
  3614  006B8A  6C09               	negf	___awdiv@divisor,c
  3615  006B8C  1E0A               	comf	___awdiv@divisor+1,f,c
  3616  006B8E  B0D8               	btfsc	status,0,c
  3617  006B90  2A0A               	incf	___awdiv@divisor+1,f,c
  3618  006B92  0E01               	movlw	1
  3619  006B94  6E0C               	movwf	___awdiv@sign,c
  3620  006B96                     l1347:
  3621  006B96  5008               	movf	___awdiv@dividend+1,w,c
  3622  006B98  0A80               	xorlw	128
  3623  006B9A  6EF3               	movwf	prodl,c
  3624  006B9C  0E80               	movlw	128
  3625  006B9E  5CF3               	subwf	prodl,w,c
  3626  006BA0  0E00               	movlw	0
  3627  006BA2  B4D8               	btfsc	status,2,c
  3628  006BA4  5C07               	subwf	___awdiv@dividend,w,c
  3629  006BA6  B0D8               	btfsc	status,0,c
  3630  006BA8  D006               	goto	l1353
  3631  006BAA  6C07               	negf	___awdiv@dividend,c
  3632  006BAC  1E08               	comf	___awdiv@dividend+1,f,c
  3633  006BAE  B0D8               	btfsc	status,0,c
  3634  006BB0  2A08               	incf	___awdiv@dividend+1,f,c
  3635  006BB2  0E01               	movlw	1
  3636  006BB4  1A0C               	xorwf	___awdiv@sign,f,c
  3637  006BB6                     l1353:
  3638  006BB6  0E00               	movlw	0
  3639  006BB8  6E0E               	movwf	___awdiv@quotient+1,c
  3640  006BBA  0E00               	movlw	0
  3641  006BBC  6E0D               	movwf	___awdiv@quotient,c
  3642  006BBE  500A               	movf	___awdiv@divisor+1,w,c
  3643  006BC0  1009               	iorwf	___awdiv@divisor,w,c
  3644  006BC2  B4D8               	btfsc	status,2,c
  3645  006BC4  D01C               	goto	l1375
  3646  006BC6  0E01               	movlw	1
  3647  006BC8  6E0B               	movwf	___awdiv@counter,c
  3648  006BCA  D004               	goto	l1361
  3649  006BCC                     l1359:
  3650  006BCC  90D8               	bcf	status,0,c
  3651  006BCE  3609               	rlcf	___awdiv@divisor,f,c
  3652  006BD0  360A               	rlcf	___awdiv@divisor+1,f,c
  3653  006BD2  2A0B               	incf	___awdiv@counter,f,c
  3654  006BD4                     l1361:
  3655  006BD4  AE0A               	btfss	___awdiv@divisor+1,7,c
  3656  006BD6  D7FA               	goto	l1359
  3657  006BD8                     l1363:
  3658  006BD8  90D8               	bcf	status,0,c
  3659  006BDA  360D               	rlcf	___awdiv@quotient,f,c
  3660  006BDC  360E               	rlcf	___awdiv@quotient+1,f,c
  3661  006BDE  5009               	movf	___awdiv@divisor,w,c
  3662  006BE0  5C07               	subwf	___awdiv@dividend,w,c
  3663  006BE2  500A               	movf	___awdiv@divisor+1,w,c
  3664  006BE4  5808               	subwfb	___awdiv@dividend+1,w,c
  3665  006BE6  A0D8               	btfss	status,0,c
  3666  006BE8  D005               	goto	l1371
  3667  006BEA  5009               	movf	___awdiv@divisor,w,c
  3668  006BEC  5E07               	subwf	___awdiv@dividend,f,c
  3669  006BEE  500A               	movf	___awdiv@divisor+1,w,c
  3670  006BF0  5A08               	subwfb	___awdiv@dividend+1,f,c
  3671  006BF2  800D               	bsf	___awdiv@quotient,0,c
  3672  006BF4                     l1371:
  3673  006BF4  90D8               	bcf	status,0,c
  3674  006BF6  320A               	rrcf	___awdiv@divisor+1,f,c
  3675  006BF8  3209               	rrcf	___awdiv@divisor,f,c
  3676  006BFA  2E0B               	decfsz	___awdiv@counter,f,c
  3677  006BFC  D7ED               	goto	l1363
  3678  006BFE                     l1375:
  3679  006BFE  500C               	movf	___awdiv@sign,w,c
  3680  006C00  B4D8               	btfsc	status,2,c
  3681  006C02  D004               	goto	l1379
  3682  006C04  6C0D               	negf	___awdiv@quotient,c
  3683  006C06  1E0E               	comf	___awdiv@quotient+1,f,c
  3684  006C08  B0D8               	btfsc	status,0,c
  3685  006C0A  2A0E               	incf	___awdiv@quotient+1,f,c
  3686  006C0C                     l1379:
  3687  006C0C  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3688  006C10  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3689  006C14  0012               	return	
  3690  006C16                     __end_of___awdiv:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           postinc0	equ	0xFEE
  3699                           wreg	equ	0xFE8
  3700                           postinc1	equ	0xFE6
  3701                           postdec1	equ	0xFE5
  3702                           fsr1h	equ	0xFE2
  3703                           fsr1l	equ	0xFE1
  3704                           indf2	equ	0xFDF
  3705                           postinc2	equ	0xFDE
  3706                           postdec2	equ	0xFDD
  3707                           fsr2h	equ	0xFDA
  3708                           fsr2l	equ	0xFD9
  3709                           status	equ	0xFD8
  3710                           
  3711 ;; *************** function _OpenADC *****************
  3712 ;; Defined at:
  3713 ;;		line 305 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcopen.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  config          1    wreg     unsigned char 
  3716 ;;  config2         1    0[COMRAM] unsigned char 
  3717 ;;  config3         1    1[COMRAM] unsigned char 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  config          1    4[COMRAM] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;		None               void
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3729 ;;      Params:         2       0       0       0       0       0       0
  3730 ;;      Locals:         1       0       0       0       0       0       0
  3731 ;;      Temps:          2       0       0       0       0       0       0
  3732 ;;      Totals:         5       0       0       0       0       0       0
  3733 ;;Total ram usage:        5 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_main
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text8
  3743  006A76                     __ptext8:
  3744                           	opt stack 0
  3745  006A76                     _OpenADC:
  3746                           	opt stack 30
  3747                           
  3748                           ;incstack = 0
  3749                           ;OpenADC@config stored from wreg
  3750  006A76  6E05               	movwf	OpenADC@config,c
  3751  006A78  0E00               	movlw	0
  3752  006A7A  6EC2               	movwf	4034,c	;volatile
  3753  006A7C  0E00               	movlw	0
  3754  006A7E  6EC1               	movwf	4033,c	;volatile
  3755  006A80  0E00               	movlw	0
  3756  006A82  6EC0               	movwf	4032,c	;volatile
  3757  006A84  5001               	movf	OpenADC@config2,w,c
  3758  006A86  0B7C               	andlw	124
  3759  006A88  6EC2               	movwf	4034,c	;volatile
  3760  006A8A  C002  FFC1         	movff	OpenADC@config3,4033	;volatile
  3761  006A8E  C005  F003         	movff	OpenADC@config,??_OpenADC
  3762  006A92  90D8               	bcf	status,0,c
  3763  006A94  3603               	rlcf	??_OpenADC,f,c
  3764  006A96  90D8               	bcf	status,0,c
  3765  006A98  3603               	rlcf	??_OpenADC,f,c
  3766  006A9A  0E38               	movlw	56
  3767  006A9C  1603               	andwf	??_OpenADC,f,c
  3768  006A9E  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  3769  006AA2  3A04               	swapf	??_OpenADC+1,f,c
  3770  006AA4  0E0F               	movlw	15
  3771  006AA6  1604               	andwf	??_OpenADC+1,f,c
  3772  006AA8  0E07               	movlw	7
  3773  006AAA  1604               	andwf	??_OpenADC+1,f,c
  3774  006AAC  5005               	movf	OpenADC@config,w,c
  3775  006AAE  0B80               	andlw	128
  3776  006AB0  1004               	iorwf	??_OpenADC+1,w,c
  3777  006AB2  1003               	iorwf	??_OpenADC,w,c
  3778  006AB4  6EC0               	movwf	4032,c	;volatile
  3779  006AB6  AE01               	btfss	OpenADC@config2,7,c
  3780  006AB8  D003               	goto	l157
  3781  006ABA  9C9E               	bcf	3998,6,c	;volatile
  3782  006ABC  8C9D               	bsf	3997,6,c	;volatile
  3783  006ABE  8CF2               	bsf	intcon,6,c	;volatile
  3784  006AC0                     l157:
  3785  006AC0  80C2               	bsf	4034,0,c	;volatile
  3786  006AC2  0012               	return	
  3787  006AC4                     __end_of_OpenADC:
  3788                           	opt stack 0
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           postinc1	equ	0xFE6
  3799                           postdec1	equ	0xFE5
  3800                           fsr1h	equ	0xFE2
  3801                           fsr1l	equ	0xFE1
  3802                           indf2	equ	0xFDF
  3803                           postinc2	equ	0xFDE
  3804                           postdec2	equ	0xFDD
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function _Open1USART *****************
  3810 ;; Defined at:
  3811 ;;		line 124 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1open.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  config          1    wreg     unsigned char 
  3814 ;;  spbrg           2    0[COMRAM] unsigned int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  config          1    5[COMRAM] unsigned char 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg, status,2
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3826 ;;      Params:         2       0       0       0       0       0       0
  3827 ;;      Locals:         1       0       0       0       0       0       0
  3828 ;;      Temps:          3       0       0       0       0       0       0
  3829 ;;      Totals:         6       0       0       0       0       0       0
  3830 ;;Total ram usage:        6 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_main
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text9
  3840  006B1A                     __ptext9:
  3841                           	opt stack 0
  3842  006B1A                     _Open1USART:
  3843                           	opt stack 30
  3844                           
  3845                           ;incstack = 0
  3846                           ;Open1USART@config stored from wreg
  3847  006B1A  6E06               	movwf	Open1USART@config,c
  3848  006B1C  0E00               	movlw	0
  3849  006B1E  6EAC               	movwf	4012,c	;volatile
  3850  006B20  0E00               	movlw	0
  3851  006B22  6EAB               	movwf	4011,c	;volatile
  3852  006B24  B006               	btfsc	Open1USART@config,0,c
  3853  006B26  88AC               	bsf	4012,4,c	;volatile
  3854  006B28  A206               	btfss	Open1USART@config,1,c
  3855  006B2A  D002               	goto	l1195
  3856  006B2C  8CAC               	bsf	4012,6,c	;volatile
  3857  006B2E  8CAB               	bsf	4011,6,c	;volatile
  3858  006B30                     l1195:
  3859  006B30  B406               	btfsc	Open1USART@config,2,c
  3860  006B32  8EAC               	bsf	4012,7,c	;volatile
  3861  006B34  A606               	btfss	Open1USART@config,3,c
  3862  006B36  D002               	goto	l178
  3863  006B38  88AB               	bsf	4011,4,c	;volatile
  3864  006B3A  D001               	goto	l1203
  3865  006B3C                     l178:
  3866  006B3C  8AAB               	bsf	4011,5,c	;volatile
  3867  006B3E                     l1203:
  3868  006B3E  B806               	btfsc	Open1USART@config,4,c
  3869  006B40  84AC               	bsf	4012,2,c	;volatile
  3870  006B42  BA06               	btfsc	Open1USART@config,5,c
  3871  006B44  86AB               	bsf	4011,3,c	;volatile
  3872  006B46  AC06               	btfss	Open1USART@config,6,c
  3873  006B48  D002               	goto	l182
  3874  006B4A  8A9D               	bsf	3997,5,c	;volatile
  3875  006B4C  D001               	goto	l1215
  3876  006B4E                     l182:
  3877  006B4E  9A9D               	bcf	3997,5,c	;volatile
  3878  006B50                     l1215:
  3879  006B50  AE06               	btfss	Open1USART@config,7,c
  3880  006B52  D002               	goto	l184
  3881  006B54  889D               	bsf	3997,4,c	;volatile
  3882  006B56  D001               	goto	l185
  3883  006B58                     l184:
  3884  006B58  989D               	bcf	3997,4,c	;volatile
  3885  006B5A                     l185:
  3886  006B5A  C001  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3887  006B5E  C002  F003         	movff	Open1USART@spbrg+1,??_Open1USART
  3888  006B62  C003  F004         	movff	??_Open1USART,??_Open1USART+1
  3889  006B66  6A05               	clrf	(??_Open1USART+2)& (0+255),c
  3890  006B68  5004               	movf	??_Open1USART+1,w,c
  3891  006B6A  6EB0               	movwf	4016,c	;volatile
  3892  006B6C  8AAC               	bsf	4012,5,c	;volatile
  3893  006B6E  8EAB               	bsf	4011,7,c	;volatile
  3894  006B70  0012               	return	
  3895  006B72                     __end_of_Open1USART:
  3896                           	opt stack 0
  3897                           tblptru	equ	0xFF8
  3898                           tblptrh	equ	0xFF7
  3899                           tblptrl	equ	0xFF6
  3900                           tablat	equ	0xFF5
  3901                           prodh	equ	0xFF4
  3902                           prodl	equ	0xFF3
  3903                           intcon	equ	0xFF2
  3904                           postinc0	equ	0xFEE
  3905                           wreg	equ	0xFE8
  3906                           postinc1	equ	0xFE6
  3907                           postdec1	equ	0xFE5
  3908                           fsr1h	equ	0xFE2
  3909                           fsr1l	equ	0xFE1
  3910                           indf2	equ	0xFDF
  3911                           postinc2	equ	0xFDE
  3912                           postdec2	equ	0xFDD
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function _ConvertADC *****************
  3918 ;; Defined at:
  3919 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcconv.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;		None
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;		None               void
  3926 ;; Registers used:
  3927 ;;		None
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3933 ;;      Params:         0       0       0       0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0
  3936 ;;      Totals:         0       0       0       0       0       0       0
  3937 ;;Total ram usage:        0 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text10
  3947  0069BA                     __ptext10:
  3948                           	opt stack 0
  3949  0069BA                     _ConvertADC:
  3950                           	opt stack 30
  3951                           
  3952                           ;incstack = 0
  3953  0069BA  82C2               	bsf	4034,1,c	;volatile
  3954  0069BC  0012               	return	
  3955  0069BE                     __end_of_ConvertADC:
  3956                           	opt stack 0
  3957                           tblptru	equ	0xFF8
  3958                           tblptrh	equ	0xFF7
  3959                           tblptrl	equ	0xFF6
  3960                           tablat	equ	0xFF5
  3961                           prodh	equ	0xFF4
  3962                           prodl	equ	0xFF3
  3963                           intcon	equ	0xFF2
  3964                           postinc0	equ	0xFEE
  3965                           wreg	equ	0xFE8
  3966                           postinc1	equ	0xFE6
  3967                           postdec1	equ	0xFE5
  3968                           fsr1h	equ	0xFE2
  3969                           fsr1l	equ	0xFE1
  3970                           indf2	equ	0xFDF
  3971                           postinc2	equ	0xFDE
  3972                           postdec2	equ	0xFDD
  3973                           fsr2h	equ	0xFDA
  3974                           fsr2l	equ	0xFD9
  3975                           status	equ	0xFD8
  3976                           
  3977 ;; *************** function _BusyADC *****************
  3978 ;; Defined at:
  3979 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcbusy.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      unsigned char 
  3986 ;; Registers used:
  3987 ;;		wreg
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3993 ;;      Params:         0       0       0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text11
  4007  0069BE                     __ptext11:
  4008                           	opt stack 0
  4009  0069BE                     _BusyADC:
  4010                           	opt stack 30
  4011                           
  4012                           ;incstack = 0
  4013  0069BE  A2C2               	btfss	4034,1,c	;volatile
  4014  0069C0  D002               	goto	u660
  4015  0069C2  0E01               	movlw	1
  4016  0069C4  0012               	return	
  4017  0069C6                     u660:
  4018  0069C6  0E00               	movlw	0
  4019  0069C8  0012               	return	
  4020  0069CA                     __end_of_BusyADC:
  4021                           	opt stack 0
  4022                           tblptru	equ	0xFF8
  4023                           tblptrh	equ	0xFF7
  4024                           tblptrl	equ	0xFF6
  4025                           tablat	equ	0xFF5
  4026                           prodh	equ	0xFF4
  4027                           prodl	equ	0xFF3
  4028                           intcon	equ	0xFF2
  4029                           postinc0	equ	0xFEE
  4030                           wreg	equ	0xFE8
  4031                           postinc1	equ	0xFE6
  4032                           postdec1	equ	0xFE5
  4033                           fsr1h	equ	0xFE2
  4034                           fsr1l	equ	0xFE1
  4035                           indf2	equ	0xFDF
  4036                           postinc2	equ	0xFDE
  4037                           postdec2	equ	0xFDD
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           tblptru	equ	0xFF8
  4042                           tblptrh	equ	0xFF7
  4043                           tblptrl	equ	0xFF6
  4044                           tablat	equ	0xFF5
  4045                           prodh	equ	0xFF4
  4046                           prodl	equ	0xFF3
  4047                           intcon	equ	0xFF2
  4048                           postinc0	equ	0xFEE
  4049                           wreg	equ	0xFE8
  4050                           postinc1	equ	0xFE6
  4051                           postdec1	equ	0xFE5
  4052                           fsr1h	equ	0xFE2
  4053                           fsr1l	equ	0xFE1
  4054                           indf2	equ	0xFDF
  4055                           postinc2	equ	0xFDE
  4056                           postdec2	equ	0xFDD
  4057                           fsr2h	equ	0xFDA
  4058                           fsr2l	equ	0xFD9
  4059                           status	equ	0xFD8
  4060                           
  4061                           	psect	rparam
  4062  0000                     tblptru	equ	0xFF8
  4063                           tblptrh	equ	0xFF7
  4064                           tblptrl	equ	0xFF6
  4065                           tablat	equ	0xFF5
  4066                           prodh	equ	0xFF4
  4067                           prodl	equ	0xFF3
  4068                           intcon	equ	0xFF2
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           postinc1	equ	0xFE6
  4072                           postdec1	equ	0xFE5
  4073                           fsr1h	equ	0xFE2
  4074                           fsr1l	equ	0xFE1
  4075                           indf2	equ	0xFDF
  4076                           postinc2	equ	0xFDE
  4077                           postdec2	equ	0xFDD
  4078                           fsr2h	equ	0xFDA
  4079                           fsr2l	equ	0xFD9
  4080                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1536
    Data        0
    BSS         393
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      93
    BANK0           160     14     151
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fix_fft@fi	PTR short  size(2) Largest target is 128
		 -> imaginaryNumbers(BANK1[128]), 

    fix_fft@fr	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 

    sendIntArray@array	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_fix_fft
    _sendIntArray->_sendChar
    _sendChar->_Write1USART
    _fix_fft->___lmul
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    5413
                                             76 COMRAM    13    13      0
                                              0 BANK0     14    14      0
                            _BusyADC
                         _ConvertADC
                         _Open1USART
                            _OpenADC
                            ___awdiv
                             ___wmul
                            _fix_fft
                       _sendIntArray
 ---------------------------------------------------------------------------------
 (1) _sendIntArray                                         4     0      4     194
                                              2 COMRAM     4     0      4
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      44
                                              1 COMRAM     1     1      0
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fix_fft                                             64    58      6    2782
                                             12 COMRAM    64    58      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     444
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     583
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     512
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     238
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Open1USART
   _OpenADC
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _fix_fft
     ___lmul
   _sendIntArray
     _sendChar
       _Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0     100       6      100.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      E      97       4       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5D       1       97.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F4       9        0.0%
DATA                 0      0     1F4      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Dec 05 13:15:11 2014

                      _i 005A             ___awdiv@sign 000C      ___wmul@multiplicand 0003  
                    l100 69CC                      l121 79E0                      l115 72CE  
                    l157 6AC0                      l182 6B4E                      l184 6B58  
                    l185 6B5A                      l178 6B3C                      u714 74D8  
                    u715 74D2                      u660 69C6                      u725 75F0  
                    u726 75F6                      u735 76A0                      u727 7604  
                    u736 76A6                      u745 7760                      u737 76B4  
                    u746 7766                      u674 7296                      u755 7810  
                    u747 7774                      u675 7290                      u915 6EDE  
                    u756 7816                      u916 6EE4                      u757 7824  
                    u917 6EF2                      u945 709A                      u946 70A0  
                    u947 70AE                      wreg 000FE8               _TXSTA1bits 000FAC  
           __CFG_LVP$OFF 000000                     l1203 6B3E                     l1215 6B50  
                   l1315 7972                     l1331 6A68                     l1165 6AD4  
                   l1253 7452                     l1237 72DE                     l1157 69E4  
                   l1413 6CB2                     l1405 6C84                     l1271 757A  
                   l1263 74C2                     l1319 7992                     l1255 7456  
                   l1327 6A4C                     l1361 6BD4                     l1353 6BB6  
                   l1169 6AE8                     l1425 6D42                     l1195 6B30  
                   l1371 6BF4                     l1363 6BD8                     l1347 6B96  
                   l1259 74A6                     l1445 6EC2                     l1461 70CC  
                   l1359 6BCC                     l1375 6BFE                     l1455 704C  
                   l1447 6F02                     l1449 6F60                     l1379 6C0C  
                   l1459 70BE                     l1467 70FE                     l1479 71E6  
                   u1027 6D32                     _LATC 000F8B                     _PIE1 000F9D  
                   _data 0060                     _main 6C16                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000          __end_of_BusyADC 69CA          __end_of_OpenADC 6AC4  
                  ?_main 0001          __end_of___awdiv 6C16          ___awdiv@divisor 0009  
        ___awdiv@counter 000B                    _TRISC 000F94      ___lmul@multiplicand 0005  
        __end_of_fix_fft 79FE                    _input 005D                    main@i 00F1  
                  main@k 00EF               _ConvertADC 69BA                    tablat 000FF5  
                  status 000FD8            main@adc_value 00E5           __CFG_PBADEN$ON 000000  
        __initialization 6A10             __end_of_main 7272               _Open1USART 6B1A  
                 ??_main 004D            __activetblptr 000002             fix_fft@istep 0023  
       __end_of_Sinewave 7FFF                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0007                   _ANSELC 000F3A           __CFG_WDTEN$OFF 000000  
                 _RCSTA1 000FAB                   _SPBRG1 000FAF                ??_BusyADC 0001  
                 _TXREG1 000FAD                   _TXSTA1 000FAC                ??_OpenADC 0003  
                 ___lmul 6AC4                   ___wmul 69EA                ??___awdiv 000B  
                 clear_0 6A18                   clear_1 6A2A         ___awdiv@quotient 000D  
       __end_of_sendChar 69D8                ??_fix_fft 0013             __mediumconst 79FE  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
            ?_ConvertADC 0001               __accesstop 0060  __end_of__initialization 6A38  
         __pcstackCOMRAM 0001              ?_Open1USART 0001            ?_sendIntArray 0003  
             __pbssBANK0 0060               __pbssBANK1 0100          __CFG_PLLCFG$OFF 000000  
          ??_Write1USART 0001                  ?___lmul 0001                  ?___wmul 0001  
         ___lmul@product 0009      __size_of_ConvertADC 0004         Open1USART@config 0006  
         ??_sendIntArray 0007        __CFG_PRICLKEN$OFF 000000                  _SPBRGH1 000FB0  
    __size_of_Open1USART 0058                  _BusyADC 69BE                ?_sendChar 0001  
                _OpenADC 6A76                  __Hparam 0000                  __Lparam 0000  
    __end_of_Write1USART 69EA                  ___awdiv 6B72          __size_of___lmul 0056  
        __size_of___wmul 0026                  __pcinit 6A10                  __ramtop 0600  
                __ptext0 6C16                  __ptext1 6A42                  __ptext2 69CA  
                __ptext3 69D8                  __ptext4 7272                  __ptext5 6AC4  
                __ptext6 69EA                  __ptext7 6B72                  __ptext8 6A76  
                __ptext9 6B1A                  _fix_fft 7272           OpenADC@config2 0001  
         OpenADC@config3 0002     end_of_initialization 6A38            __Lmediumconst 79FE  
             ??_sendChar 0002                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
      sendIntArray@array 0003         __CFG_FOSC$INTIO7 000000                _TRISAbits 000F92  
              _TRISCbits 000F94             ??_ConvertADC 0001              _Write1USART 69D8  
   __end_of_sendIntArray 6A76           _oldRealNumbers 0100           __end_of___lmul 6B1A  
         __end_of___wmul 6A10             ??_Open1USART 0003       __end_of_ConvertADC 69BE  
    start_initialization 6A10       __end_of_Open1USART 6B72         _imaginaryNumbers 0180  
               ??___lmul 0009                 ??___wmul 0005              __pbssCOMRAM 005A  
          __pcstackBANK0 00E5                _baud_rate 00F3                 ?_BusyADC 0001  
              __pnvBANK0 00F3                 ?_OpenADC 0001        __size_of_sendChar 000E  
          __pmediumconst 79FE                 ?___awdiv 0007          Open1USART@spbrg 0001  
               ?_fix_fft 000D          Write1USART@data 0001    __size_of_sendIntArray 0034  
         ___wmul@product 0005            OpenADC@config 0005                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         sendIntArray@size 0005               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001                main@place 00EB             _sendIntArray 6A42  
              fix_fft@fi 000F                fix_fft@fr 000D                fix_fft@nn 001F  
              fix_fft@qi 0029                fix_fft@mr 003D                fix_fft@ti 0035  
              fix_fft@qr 0027                fix_fft@wi 002D                fix_fft@tr 0033  
              fix_fft@wr 002B        ___lmul@multiplier 0001             ?_Write1USART 0001  
       __size_of_BusyADC 000C                 __Hrparam 0000         __size_of_OpenADC 004E  
               __Lrparam 0000                 _Sinewave 79FF         __size_of___awdiv 00A4  
             _ANSELAbits 000F38         __size_of_fix_fft 078C                 __ptext10 69BA  
               __ptext11 69BE              _realNumbers 0065            __size_of_main 065C  
               _sendChar 69CA                 main@root 00E7                 fix_fft@b 0037  
               fix_fft@c 0049                 fix_fft@i 0039                 fix_fft@j 0045  
               fix_fft@k 001B                 fix_fft@l 0041                 fix_fft@m 0011  
               fix_fft@n 002F            _USART1_Status 005C              _OSCTUNEbits 000F9B  
             _INTCONbits 000FF2               _RCSTA1bits 000FAB               _OSCCONbits 000FD3  
      sendChar@character 0002     __size_of_Write1USART 0012  
